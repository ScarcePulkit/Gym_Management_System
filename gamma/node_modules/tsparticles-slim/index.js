var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { initPjs } from "tsparticles-particles.js";
import { loadAngleUpdater } from "tsparticles-updater-angle";
import { loadBaseMover } from "tsparticles-move-base";
import { loadCircleShape } from "tsparticles-shape-circle";
import { loadColorUpdater } from "tsparticles-updater-color";
import { loadExternalAttractInteraction } from "tsparticles-interaction-external-attract";
import { loadExternalBounceInteraction } from "tsparticles-interaction-external-bounce";
import { loadExternalBubbleInteraction } from "tsparticles-interaction-external-bubble";
import { loadExternalConnectInteraction } from "tsparticles-interaction-external-connect";
import { loadExternalGrabInteraction } from "tsparticles-interaction-external-grab";
import { loadExternalPauseInteraction } from "tsparticles-interaction-external-pause";
import { loadExternalPushInteraction } from "tsparticles-interaction-external-push";
import { loadExternalRemoveInteraction } from "tsparticles-interaction-external-remove";
import { loadExternalRepulseInteraction } from "tsparticles-interaction-external-repulse";
import { loadImageShape } from "tsparticles-shape-image";
import { loadLifeUpdater } from "tsparticles-updater-life";
import { loadLineShape } from "tsparticles-shape-line";
import { loadOpacityUpdater } from "tsparticles-updater-opacity";
import { loadOutModesUpdater } from "tsparticles-updater-out-modes";
import { loadParallaxMover } from "tsparticles-move-parallax";
import { loadParticlesAttractInteraction } from "tsparticles-interaction-particles-attract";
import { loadParticlesCollisionsInteraction } from "tsparticles-interaction-particles-collisions";
import { loadParticlesLinksInteraction } from "tsparticles-interaction-particles-links";
import { loadPolygonShape } from "tsparticles-shape-polygon";
import { loadSizeUpdater } from "tsparticles-updater-size";
import { loadSquareShape } from "tsparticles-shape-square";
import { loadStarShape } from "tsparticles-shape-star";
import { loadStrokeColorUpdater } from "tsparticles-updater-stroke-color";
import { loadTextShape } from "tsparticles-shape-text";
export function loadSlim(engine) {
    return __awaiter(this, void 0, void 0, function* () {
        yield loadBaseMover(engine);
        yield loadParallaxMover(engine);
        yield loadExternalAttractInteraction(engine);
        yield loadExternalBounceInteraction(engine);
        yield loadExternalBubbleInteraction(engine);
        yield loadExternalConnectInteraction(engine);
        yield loadExternalGrabInteraction(engine);
        yield loadExternalPauseInteraction(engine);
        yield loadExternalPushInteraction(engine);
        yield loadExternalRemoveInteraction(engine);
        yield loadExternalRepulseInteraction(engine);
        yield loadParticlesAttractInteraction(engine);
        yield loadParticlesCollisionsInteraction(engine);
        yield loadParticlesLinksInteraction(engine);
        yield loadCircleShape(engine);
        yield loadImageShape(engine);
        yield loadLineShape(engine);
        yield loadPolygonShape(engine);
        yield loadSquareShape(engine);
        yield loadStarShape(engine);
        yield loadTextShape(engine);
        yield loadLifeUpdater(engine);
        yield loadOpacityUpdater(engine);
        yield loadSizeUpdater(engine);
        yield loadAngleUpdater(engine);
        yield loadColorUpdater(engine);
        yield loadStrokeColorUpdater(engine);
        yield loadOutModesUpdater(engine);
        yield initPjs(engine);
    });
}
