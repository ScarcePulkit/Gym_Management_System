{"ast":null,"code":"import { colorToHsl, getRangeValue, getStyleFromHsl } from \"tsparticles-engine\";\nexport class TwinkleUpdater {\n  getColorStyles(particle, context, radius, opacity) {\n    const pOptions = particle.options,\n          twinkle = pOptions.twinkle.particles,\n          twinkling = twinkle.enable && Math.random() < twinkle.frequency,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n          twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity,\n          twinkleRgb = colorToHsl(twinkle.color),\n          twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined,\n          res = {},\n          needsTwinkle = twinkling && twinkleStyle;\n    res.fill = needsTwinkle ? twinkleStyle : undefined;\n    res.stroke = needsTwinkle ? twinkleStyle : undefined;\n    return res;\n  }\n\n  init() {}\n\n  isEnabled(particle) {\n    return particle.options.twinkle.particles.enable;\n  }\n\n  update() {}\n\n}","map":{"version":3,"sources":["D:/Gym Management/DBMS_Project/gamma/node_modules/tsparticles-updater-twinkle/TwinkleUpdater.js"],"names":["colorToHsl","getRangeValue","getStyleFromHsl","TwinkleUpdater","getColorStyles","particle","context","radius","opacity","pOptions","options","twinkle","particles","twinkling","enable","Math","random","frequency","zIndexOptions","zIndex","zOpacityFactor","pow","zIndexFactor","opacityRate","twinklingOpacity","twinkleRgb","color","twinkleStyle","undefined","res","needsTwinkle","fill","stroke","init","isEnabled","update"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,eAApC,QAA2D,oBAA3D;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,cAAc,CAACC,QAAD,EAAWC,OAAX,EAAoBC,MAApB,EAA4BC,OAA5B,EAAqC;AAC/C,UAAMC,QAAQ,GAAGJ,QAAQ,CAACK,OAA1B;AAAA,UAAmCC,OAAO,GAAGF,QAAQ,CAACE,OAAT,CAAiBC,SAA9D;AAAA,UAAyEC,SAAS,GAAGF,OAAO,CAACG,MAAR,IAAkBC,IAAI,CAACC,MAAL,KAAgBL,OAAO,CAACM,SAA/H;AAAA,UAA0IC,aAAa,GAAGb,QAAQ,CAACK,OAAT,CAAiBS,MAA3K;AAAA,UAAmLC,cAAc,GAAGL,IAAI,CAACM,GAAL,CAAU,IAAIhB,QAAQ,CAACiB,YAAvB,EAAsCJ,aAAa,CAACK,WAApD,CAApM;AAAA,UAAsQC,gBAAgB,GAAGX,SAAS,GAAGZ,aAAa,CAACU,OAAO,CAACH,OAAT,CAAb,GAAiCY,cAApC,GAAqDZ,OAAvV;AAAA,UAAgWiB,UAAU,GAAGzB,UAAU,CAACW,OAAO,CAACe,KAAT,CAAvX;AAAA,UAAwYC,YAAY,GAAGF,UAAU,GAAGvB,eAAe,CAACuB,UAAD,EAAaD,gBAAb,CAAlB,GAAmDI,SAApd;AAAA,UAA+dC,GAAG,GAAG,EAAre;AAAA,UAAyeC,YAAY,GAAGjB,SAAS,IAAIc,YAArgB;AACAE,IAAAA,GAAG,CAACE,IAAJ,GAAWD,YAAY,GAAGH,YAAH,GAAkBC,SAAzC;AACAC,IAAAA,GAAG,CAACG,MAAJ,GAAaF,YAAY,GAAGH,YAAH,GAAkBC,SAA3C;AACA,WAAOC,GAAP;AACH;;AACDI,EAAAA,IAAI,GAAG,CACN;;AACDC,EAAAA,SAAS,CAAC7B,QAAD,EAAW;AAChB,WAAOA,QAAQ,CAACK,OAAT,CAAiBC,OAAjB,CAAyBC,SAAzB,CAAmCE,MAA1C;AACH;;AACDqB,EAAAA,MAAM,GAAG,CACR;;AAbuB","sourcesContent":["import { colorToHsl, getRangeValue, getStyleFromHsl } from \"tsparticles-engine\";\r\nexport class TwinkleUpdater {\r\n    getColorStyles(particle, context, radius, opacity) {\r\n        const pOptions = particle.options, twinkle = pOptions.twinkle.particles, twinkling = twinkle.enable && Math.random() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = Math.pow((1 - particle.zIndexFactor), zIndexOptions.opacityRate), twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = colorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\r\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\r\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\r\n        return res;\r\n    }\r\n    init() {\r\n    }\r\n    isEnabled(particle) {\r\n        return particle.options.twinkle.particles.enable;\r\n    }\r\n    update() {\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}