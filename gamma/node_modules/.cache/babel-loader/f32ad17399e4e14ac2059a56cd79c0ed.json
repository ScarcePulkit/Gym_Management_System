{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  interact(p1) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      const container = this.container,\n            distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance,\n            pos1 = p1.getPosition(),\n            query = container.particles.quadTree.queryCircle(pos1, distance);\n\n      for (const p2 of query) {\n        if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n          continue;\n        }\n\n        const pos2 = p2.getPosition(),\n              {\n          dx,\n          dy\n        } = getDistances(pos1, pos2),\n              rotate = p1.options.move.attract.rotate,\n              ax = dx / (rotate.x * 1000),\n              ay = dy / (rotate.y * 1000),\n              p1Factor = p2.size.value / p1.size.value,\n              p2Factor = 1 / p1Factor;\n        p1.velocity.x -= ax * p1Factor;\n        p1.velocity.y -= ay * p1Factor;\n        p2.velocity.x += ax * p2Factor;\n        p2.velocity.y += ay * p2Factor;\n      }\n    });\n  }\n\n  isEnabled(particle) {\n    return particle.options.move.attract.enable;\n  }\n\n  reset() {}\n\n}","map":{"version":3,"sources":["C:/Users/dhair_gzqoc8v/Desktop/DBMS/DBMS_Project/gamma/node_modules/tsparticles-interaction-particles-attract/Attractor.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","ParticlesInteractorBase","getDistances","Attractor","constructor","container","interact","p1","_a","distance","retina","attractDistance","pos1","getPosition","query","particles","quadTree","queryCircle","p2","options","move","attract","enable","destroyed","spawning","pos2","dx","dy","rotate","ax","x","ay","y","p1Factor","size","p2Factor","velocity","isEnabled","particle","reset"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\r\nexport class Attractor extends ParticlesInteractorBase {\r\n    constructor(container) {\r\n        super(container);\r\n    }\r\n    interact(p1) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\r\n            for (const p2 of query) {\r\n                if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\r\n                    continue;\r\n                }\r\n                const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\r\n                p1.velocity.x -= ax * p1Factor;\r\n                p1.velocity.y -= ay * p1Factor;\r\n                p2.velocity.x += ax * p2Factor;\r\n                p2.velocity.y += ay * p2Factor;\r\n            }\r\n        });\r\n    }\r\n    isEnabled(particle) {\r\n        return particle.options.move.attract.enable;\r\n    }\r\n    reset() {\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}