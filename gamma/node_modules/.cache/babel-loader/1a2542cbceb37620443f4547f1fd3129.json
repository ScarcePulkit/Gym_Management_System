{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _ImageDrawer_images;\n\nimport { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n  constructor() {\n    _ImageDrawer_images.set(this, void 0);\n\n    __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n  }\n\n  getSidesCount() {\n    return 12;\n  }\n\n  getImages(container) {\n    const containerImages = __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").find(t => t.id === container.id);\n\n    if (!containerImages) {\n      __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").push({\n        id: container.id,\n        images: []\n      });\n\n      return this.getImages(container);\n    } else {\n      return containerImages;\n    }\n  }\n\n  addImage(container, image) {\n    const containerImages = this.getImages(container);\n    containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n  }\n\n  destroy() {\n    __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n  }\n\n  draw(context, particle, radius, opacity) {\n    var _a, _b;\n\n    const image = particle.image;\n    const element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n\n    if (!element) {\n      return;\n    }\n\n    const ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n    const pos = {\n      x: -radius,\n      y: -radius\n    };\n\n    if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n      context.globalAlpha = opacity;\n    }\n\n    context.drawImage(element, pos.x, pos.y, radius * 2, radius * 2 / ratio);\n\n    if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n      context.globalAlpha = 1;\n    }\n  }\n\n  loadShape(particle) {\n    var _a, _b, _c;\n\n    if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n      return;\n    }\n\n    const images = this.getImages(particle.container).images;\n    const imageData = particle.shapeData;\n    const image = images.find(t => t.source === imageData.src);\n    let imageRes;\n\n    if (!image) {\n      this.loadImageShape(particle.container, imageData).then(() => {\n        this.loadShape(particle);\n      });\n      return;\n    }\n\n    if (image.error) {\n      return;\n    }\n\n    const color = particle.getFillColor();\n\n    if (image.svgData && imageData.replaceColor && color) {\n      imageRes = replaceImageColor(image, imageData, color, particle);\n    } else {\n      imageRes = {\n        data: image,\n        loaded: true,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color,\n        source: imageData.src\n      };\n    }\n\n    if (!imageRes.ratio) {\n      imageRes.ratio = 1;\n    }\n\n    const fill = (_b = imageData.fill) !== null && _b !== void 0 ? _b : particle.fill;\n    const close = (_c = imageData.close) !== null && _c !== void 0 ? _c : particle.close;\n    const imageShape = {\n      image: imageRes,\n      fill,\n      close\n    };\n    particle.image = imageShape.image;\n    particle.fill = imageShape.fill;\n    particle.close = imageShape.close;\n  }\n\n  loadImageShape(container, imageShape) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const source = imageShape.src;\n\n      if (!source) {\n        throw new Error(\"Error tsParticles - No image.src\");\n      }\n\n      try {\n        const image = {\n          source: source,\n          type: source.substr(source.length - 3),\n          error: false,\n          loading: true\n        };\n        this.addImage(container, image);\n        const imageFunc = imageShape.replaceColor ? downloadSvgImage : loadImage;\n        yield imageFunc(image);\n      } catch (_a) {\n        throw new Error(`tsParticles error - ${imageShape.src} not found`);\n      }\n    });\n  }\n\n}\n_ImageDrawer_images = new WeakMap();","map":{"version":3,"sources":["D:/Gym Management/DBMS_Project/gamma/node_modules/tsparticles-shape-image/ImageDrawer.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__classPrivateFieldSet","receiver","state","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_ImageDrawer_images","downloadSvgImage","loadImage","replaceImageColor","ImageDrawer","constructor","getSidesCount","getImages","container","containerImages","find","t","id","push","images","addImage","image","destroy","draw","context","particle","radius","opacity","_a","_b","element","data","ratio","pos","x","y","svgData","replaceColor","globalAlpha","drawImage","loadShape","_c","shape","imageData","shapeData","source","src","imageRes","loadImageShape","error","color","getFillColor","loaded","width","height","replace_color","fill","close","imageShape","Error","type","substr","length","loading","imageFunc","WeakMap"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _ImageDrawer_images;\r\nimport { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\r\nexport class ImageDrawer {\r\n    constructor() {\r\n        _ImageDrawer_images.set(this, void 0);\r\n        __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\r\n    }\r\n    getSidesCount() {\r\n        return 12;\r\n    }\r\n    getImages(container) {\r\n        const containerImages = __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").find((t) => t.id === container.id);\r\n        if (!containerImages) {\r\n            __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").push({\r\n                id: container.id,\r\n                images: [],\r\n            });\r\n            return this.getImages(container);\r\n        }\r\n        else {\r\n            return containerImages;\r\n        }\r\n    }\r\n    addImage(container, image) {\r\n        const containerImages = this.getImages(container);\r\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\r\n    }\r\n    destroy() {\r\n        __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\r\n    }\r\n    draw(context, particle, radius, opacity) {\r\n        var _a, _b;\r\n        const image = particle.image;\r\n        const element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\r\n        if (!element) {\r\n            return;\r\n        }\r\n        const ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\r\n        const pos = {\r\n            x: -radius,\r\n            y: -radius,\r\n        };\r\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\r\n            context.globalAlpha = opacity;\r\n        }\r\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\r\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\r\n            context.globalAlpha = 1;\r\n        }\r\n    }\r\n    loadShape(particle) {\r\n        var _a, _b, _c;\r\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\r\n            return;\r\n        }\r\n        const images = this.getImages(particle.container).images;\r\n        const imageData = particle.shapeData;\r\n        const image = images.find((t) => t.source === imageData.src);\r\n        let imageRes;\r\n        if (!image) {\r\n            this.loadImageShape(particle.container, imageData).then(() => {\r\n                this.loadShape(particle);\r\n            });\r\n            return;\r\n        }\r\n        if (image.error) {\r\n            return;\r\n        }\r\n        const color = particle.getFillColor();\r\n        if (image.svgData && imageData.replaceColor && color) {\r\n            imageRes = replaceImageColor(image, imageData, color, particle);\r\n        }\r\n        else {\r\n            imageRes = {\r\n                data: image,\r\n                loaded: true,\r\n                ratio: imageData.width / imageData.height,\r\n                replaceColor: (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color,\r\n                source: imageData.src,\r\n            };\r\n        }\r\n        if (!imageRes.ratio) {\r\n            imageRes.ratio = 1;\r\n        }\r\n        const fill = (_b = imageData.fill) !== null && _b !== void 0 ? _b : particle.fill;\r\n        const close = (_c = imageData.close) !== null && _c !== void 0 ? _c : particle.close;\r\n        const imageShape = {\r\n            image: imageRes,\r\n            fill,\r\n            close,\r\n        };\r\n        particle.image = imageShape.image;\r\n        particle.fill = imageShape.fill;\r\n        particle.close = imageShape.close;\r\n    }\r\n    loadImageShape(container, imageShape) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const source = imageShape.src;\r\n            if (!source) {\r\n                throw new Error(\"Error tsParticles - No image.src\");\r\n            }\r\n            try {\r\n                const image = {\r\n                    source: source,\r\n                    type: source.substr(source.length - 3),\r\n                    error: false,\r\n                    loading: true,\r\n                };\r\n                this.addImage(container, image);\r\n                const imageFunc = imageShape.replaceColor ? downloadSvgImage : loadImage;\r\n                yield imageFunc(image);\r\n            }\r\n            catch (_a) {\r\n                throw new Error(`tsParticles error - ${imageShape.src} not found`);\r\n            }\r\n        });\r\n    }\r\n}\r\n_ImageDrawer_images = new WeakMap();\r\n"]},"metadata":{},"sourceType":"module"}