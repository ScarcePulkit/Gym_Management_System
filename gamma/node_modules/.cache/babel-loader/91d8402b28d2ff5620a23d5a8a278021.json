{"ast":null,"code":"var _jsxFileName = \"D:\\\\dbms_proj\\\\DBMS_Project\\\\gamma\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [content, setContent] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  console.log(id); // useEffect(() => {\n  //   UserService.getPublicContent().then(\n  //     (response) => {\n  //       setContent(response.data);\n  //     },\n  //     (error) => {\n  //       const _content =\n  //         (error.response && error.response.data) ||\n  //         error.message ||\n  //         error.toString();\n  //       setContent(_content);\n  //     }\n  //   );\n  // }, []);\n\n  const particlesInit = async main => {\n    console.log(main); // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n\n    await loadFull(tsParticles);\n  };\n\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      url: \"http://foo.bar/particles.json\",\n      init: particlesInit,\n      loaded: particlesLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"9vt3TA1Nj7bmMtk7IWYd5hP5sFA=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/dbms_proj/DBMS_Project/gamma/src/components/Home.js"],"names":["React","useState","useEffect","useParams","UserService","Particles","loadFull","Home","content","setContent","id","console","log","particlesInit","main","tsParticles","particlesLoaded","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAACS,IAAAA;AAAD,MAAKP,SAAS,EAApB;AACFQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAHmB,CAIjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,QAAMG,aAAa,GAAG,MAAOC,IAAP,IAAgB;AACpCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EADoC,CAGpC;AACA;AACA;;AACA,UAAMR,QAAQ,CAACS,WAAD,CAAd;AACD,GAPD;;AAQA,QAAMC,eAAe,GAAIC,SAAD,IAAe;AACrCN,IAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACA,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,aAAd;AAA4B,MAAA,GAAG,EAAC,+BAAhC;AAAgE,MAAA,IAAI,EAAEJ,aAAtE;AAAqF,MAAA,MAAM,EAAEG;AAA7F;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApCD;;GAAMT,I;UAEOJ,S;;;KAFPI,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\nconst Home = () => {\r\n  const [content, setContent] = useState(\"\");\r\n  const {id}=useParams();\r\nconsole.log(id);\r\n  // useEffect(() => {\r\n  //   UserService.getPublicContent().then(\r\n  //     (response) => {\r\n  //       setContent(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       const _content =\r\n  //         (error.response && error.response.data) ||\r\n  //         error.message ||\r\n  //         error.toString();\r\n\r\n  //       setContent(_content);\r\n  //     }\r\n  //   );\r\n  // }, []);\r\n  const particlesInit = async (main) => {\r\n    console.log(main);\r\n\r\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n    // starting from v2 you can add only the features you need reducing the bundle size\r\n    await loadFull(tsParticles);\r\n  };\r\n  const particlesLoaded = (container) => {\r\n    console.log(container);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <Particles id=\"tsparticles\" url=\"http://foo.bar/particles.json\" init={particlesInit} loaded={particlesLoaded} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}