[{"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\index.js":"1","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\App.js":"2","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\serviceWorker.js":"3","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Register.js":"4","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\BoardModerator.js":"5","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\BoardUser.js":"6","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\services\\auth.service.js":"7","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Profile.js":"8","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Member\\AddMember.js":"9","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Payment\\Payment.js":"10","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Member\\Member.js":"11","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Trainer\\AddTrainer.js":"12","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Trainer\\EditTrainer.js":"13","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Equipment\\EditEquipment.js":"14","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Workout\\AddWorkout.js":"15","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Branch\\EditBranch.js":"16","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Workout\\EditWorkout.js":"17","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\BoardAdmin.js":"18","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\common\\EventBus.js":"19","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Equipment\\AddEquipment.js":"20","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Branch\\ShowBranches.js":"21","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Branch\\AddBranch.js":"22","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Home.js":"23","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Member\\ShowMembers.js":"24","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Login.js":"25","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Payment\\ShowPayment.js":"26","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Equipment\\ShowEquipment.js":"27","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Workout\\ShowWorkout.js":"28","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Trainer\\ShowTrainer.js":"29","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\services\\ManagerService.js":"30","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\services\\user.service.js":"31","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\services\\auth-header.js":"32"},{"size":334,"mtime":1649697046615,"results":"33","hashOfConfig":"34"},{"size":11440,"mtime":1650915444716,"results":"35","hashOfConfig":"34"},{"size":5227,"mtime":1649697046615,"results":"36","hashOfConfig":"34"},{"size":4815,"mtime":1649697046583,"results":"37","hashOfConfig":"34"},{"size":946,"mtime":1649697046583,"results":"38","hashOfConfig":"34"},{"size":931,"mtime":1649697046583,"results":"39","hashOfConfig":"34"},{"size":868,"mtime":1650123162606,"results":"40","hashOfConfig":"34"},{"size":1131,"mtime":1650900990751,"results":"41","hashOfConfig":"34"},{"size":7478,"mtime":1650908999697,"results":"42","hashOfConfig":"34"},{"size":5244,"mtime":1650912234305,"results":"43","hashOfConfig":"34"},{"size":7704,"mtime":1650146384307,"results":"44","hashOfConfig":"34"},{"size":6548,"mtime":1650910080527,"results":"45","hashOfConfig":"34"},{"size":6958,"mtime":1650149583566,"results":"46","hashOfConfig":"34"},{"size":5041,"mtime":1650150933262,"results":"47","hashOfConfig":"34"},{"size":5119,"mtime":1650912857096,"results":"48","hashOfConfig":"34"},{"size":7372,"mtime":1650147108134,"results":"49","hashOfConfig":"34"},{"size":4298,"mtime":1650148015734,"results":"50","hashOfConfig":"34"},{"size":934,"mtime":1650147517490,"results":"51","hashOfConfig":"34"},{"size":340,"mtime":1649697046583,"results":"52","hashOfConfig":"34"},{"size":5647,"mtime":1650911777823,"results":"53","hashOfConfig":"34"},{"size":6014,"mtime":1650915063698,"results":"54","hashOfConfig":"34"},{"size":7826,"mtime":1650913743514,"results":"55","hashOfConfig":"34"},{"size":1559,"mtime":1650900864884,"results":"56","hashOfConfig":"34"},{"size":5773,"mtime":1650899959759,"results":"57","hashOfConfig":"34"},{"size":3722,"mtime":1650901953461,"results":"58","hashOfConfig":"34"},{"size":5640,"mtime":1650900148610,"results":"59","hashOfConfig":"34"},{"size":5140,"mtime":1650900126889,"results":"60","hashOfConfig":"34"},{"size":5573,"mtime":1650915398388,"results":"61","hashOfConfig":"34"},{"size":6009,"mtime":1650908885716,"results":"62","hashOfConfig":"34"},{"size":3093,"mtime":1650151020452,"results":"63","hashOfConfig":"34"},{"size":651,"mtime":1650123166831,"results":"64","hashOfConfig":"34"},{"size":351,"mtime":1649838670958,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1ss9mnm",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\index.js",[],["142","143"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\App.js",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\serviceWorker.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Register.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\BoardModerator.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\BoardUser.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\services\\auth.service.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Profile.js",["159"],"import React from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n  const currentManager = AuthService.getCurrentManager();\r\n  console.log(currentManager);\r\n  // console.log(useParams);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      \r\n      <header className=\"jumbotron\">\r\n        \r\n          <h3>Branch_Name: <strong>{currentManager.branch.Branch_Name}</strong></h3>\r\n      \r\n      </header>\r\n      \r\n      {\r\n      //   <p>\r\n      //   <strong>Token:</strong> {currentManager.accessToken.substring(0, 20)} ...{\" \"}\r\n      //   {currentManager.accessToken.substr(currentManager.accessToken.length - 20)}\r\n      // </p>\r\n    }\r\n      {\r\n      //   <p>\r\n      //   <strong>Id:</strong> {currentManager.id}\r\n      // </p>\r\n      // <p>\r\n      //   <strong>Email:</strong> {currentManager.email}\r\n      // </p>\r\n    }\r\n    { \r\n      //  <ul>\r\n      //   {currentManager.roles &&\r\n      //     currentManager.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n      // </ul>\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Member\\AddMember.js",["160"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Payment\\Payment.js",["161"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Member\\Member.js",["162","163"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ManagerDataService from \"../../services/ManagerService\";\r\n\r\nconst Member = props => {\r\n    \r\n    console.log(useParams());\r\n  const { Mem_ID } = useParams();\r\n//  ManagerDataService.get(Mem_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(Mem_ID);\r\n  let navigate = useNavigate();\r\n  // console.log(Mem_ID);\r\n  const initialMemberState = {\r\n    Mem_ID: null,\r\n    Mem_Name: \"\",\r\n    Mem_Weight: 0,\r\n    Mem_Height: 0,\r\n    Age: 0,\r\n    Gender: \"\",\r\n    Blood_Type: \"\",\r\n    Mobile_Number: 0,\r\n    Address: \"\",\r\n    Emer_Name: \"\",\r\n    Emer_Mobile: 0\r\n  };\r\n  const [currentMember, setCurrentMember] = useState(initialMemberState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getMember = Mem_ID => {\r\n    ManagerDataService.get(Mem_ID)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentMember(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Mem_ID)\r\n      getMember(Mem_ID);\r\n  }, [Mem_ID]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentMember({ ...currentMember, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      Mem_ID: currentMember.Mem_ID,\r\n      Mem_Name: currentMember.Mem_Name,\r\n      Mem_Weight: currentMember.Mem_Weight,\r\n      Mem_Height: currentMember.Mem_Height,\r\n      Age: currentMember.Age,\r\n      Gender: currentMember.Gender,\r\n      Blood_Type: currentMember.Blood_Type,\r\n      Mobile_Number: currentMember.Mobile_Number,\r\n      Address: currentMember.Address,\r\n      Emer_Name: currentMember.Emer_Name,\r\n      Emer_Mobile: currentMember.Emer_Mobile\r\n\r\n    };\r\n\r\n    ManagerDataService.update(currentMember.Mem_ID, data)\r\n      .then(response => {\r\n        setCurrentMember({ ...currentMember, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateMember = () => {\r\n    ManagerDataService.update(currentMember.Mem_ID, currentMember)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Member was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteMember = () => {\r\n//     ManagerDataService.remove(currentMember.Mem_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/member\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {currentMember ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Member</h4>\r\n          <form>\r\n\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Mem_Name\">Mem_Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={currentMember.Mem_Name}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Mem_Weight\">Mem_Weight</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Mem_Weight\"\r\n                required\r\n                value={currentMember.Mem_Weight}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Weight\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Mem_Height\">Mem_Height</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Mem_Height\"\r\n                required\r\n                value={currentMember.Mem_Height}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Height\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Age\">Age</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Age\"\r\n                required\r\n                value={currentMember.Age}\r\n                onChange={handleInputChange}\r\n                name=\"Age\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Gender\">Gender</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Gender\"\r\n                required\r\n                value={currentMember.Gender}\r\n                onChange={handleInputChange}\r\n                name=\"Gender\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Blood_Type\">Blood_Type</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Blood_Type\"\r\n                required\r\n                value={currentMember.Blood_Type}\r\n                onChange={handleInputChange}\r\n                name=\"Blood_Type\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Mobile_Number\"\r\n                required\r\n                value={currentMember.Mobile_Number}\r\n                onChange={handleInputChange}\r\n                name=\"Mobile_Number\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Address\"\r\n                required\r\n                value={currentMember.Address}\r\n                onChange={handleInputChange}\r\n                name=\"Address\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Emer_Name\">Emer_Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Emer_Name\"\r\n                required\r\n                value={currentMember.Emer_Name}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Emer_Mobile\"\r\n                required\r\n                value={currentMember.Emer_Mobile}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Mobile\"\r\n              />\r\n            </div>\r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteMember}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateMember}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Member...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Member;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Trainer\\AddTrainer.js",["164"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Trainer\\EditTrainer.js",["165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport TrainerService from \"../../services/ManagerService\";\r\n\r\nconst Trainer = props => {\r\n    \r\n    console.log(useParams());\r\n  const {id } = useParams();\r\n//  ManagerDataService.get(Trainer_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(id);\r\n  let navigate = useNavigate();\r\n  // console.log(Trainer_ID);\r\n  const initialTrainerState = {\r\n    Trainer_ID: null,\r\n    Trainer_Name: \"\",\r\n    // Trainer_Weight: 0,\r\n    // Trainer_Height: 0,\r\n    // Age: 0,\r\n    Gender: \"\",\r\n    Blood_Type: \"\",\r\n    Phone: 0,\r\n    Address: \"\",\r\n    Emer_Name: \"\",\r\n    Emer_Mobile: 0,\r\n    Workout_Name:\"\"\r\n  };\r\n  const [currentTrainer, setCurrentTrainer] = useState(initialTrainerState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getTrainer = id => {\r\n    TrainerService.getTrainer(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentTrainer(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      getTrainer(id);\r\n  }, [id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentTrainer({ ...currentTrainer, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      Trainer_ID: currentTrainer.Trainer_ID,\r\n      Trainer_Name: currentTrainer.Trainer_Name,\r\n      //Mem_Weight: currentTrainer.Mem_Weight,\r\n      //Mem_Height: currentTrainer.Mem_Height,\r\n      Age: currentTrainer.Age,\r\n      Gender: currentTrainer.Gender,\r\n      Blood_Type: currentTrainer.Blood_Type,\r\n      Phone: currentTrainer.Phone,\r\n      Address: currentTrainer.Address,\r\n      Emer_Name: currentTrainer.Emer_Name,\r\n      Emer_Mobile: currentTrainer.Emer_Mobile,\r\n      Workout_Name:currentTrainer.Workout_Name\r\n\r\n\r\n    };\r\n\r\n    TrainerService.updateTrainer(currentTrainer.Trainer_ID, data)\r\n      .then(response => {\r\n        setCurrentTrainer({ ...currentTrainer, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateTrainer = () => {\r\n    TrainerService.updateTrainer(currentTrainer.Trainer_ID, currentTrainer)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Trainer was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteTrainer = () => {\r\n//     ManagerDataService.remove(currentTrainer.Trainer_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/trainer\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {currentTrainer ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Trainer</h4>\r\n          <form>\r\n\r\n\r\n          <div className=\"form-group\">\r\n          <label htmlFor=\"Trainer_Name\">Trainer_Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            required\r\n            value={currentTrainer.Trainer_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Trainer_Name\"\r\n          />\r\n        </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Gender\">Gender</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Gender\"\r\n                required\r\n                value={currentTrainer.Gender}\r\n                onChange={handleInputChange}\r\n                name=\"Gender\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Blood_Type\">Blood_Type</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Blood_Type\"\r\n                required\r\n                value={currentTrainer.Blood_Type}\r\n                onChange={handleInputChange}\r\n                name=\"Blood_Type\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Phone\">Phone</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Phone\"\r\n                required\r\n                value={currentTrainer.Phone}\r\n                onChange={handleInputChange}\r\n                name=\"Phone\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Address\"\r\n                required\r\n                value={currentTrainer.Address}\r\n                onChange={handleInputChange}\r\n                name=\"Address\"\r\n              />\r\n            </div>\r\n            \r\n            \r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Emer_Name\">Emer_Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Emer_Name\"\r\n                required\r\n                value={currentTrainer.Emer_Name}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Emer_Mobile\"\r\n                required\r\n                value={currentTrainer.Emer_Mobile}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Mobile\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Workout_Name\"\r\n            required\r\n            value={currentTrainer.Workout_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Workout_Name\"\r\n          />\r\n        </div>\r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteTrainer}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateTrainer}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Trainer...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trainer;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Equipment\\EditEquipment.js",["167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport EquipmentService from \"../../services/ManagerService\";\r\n\r\nconst Equipment = props => {\r\n    \r\n    console.log(useParams());\r\n  const {id } = useParams();\r\n//  ManagerDataService.get(Equipment_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(id);\r\n  let navigate = useNavigate();\r\n  // console.log(Equipment_ID);\r\n  const initialEquipmentState = {\r\n    Equipment_ID:null,\r\n    Equipment_Name:\"\",\r\n    Equipment_Kind:\"\",\r\n    Working_Status:\"\",\r\n    Exercise:\"\",\r\n  };\r\n  const [currentEquipment, setCurrentEquipment] = useState(initialEquipmentState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getEquipment = id => {\r\n    EquipmentService.getEquipment(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentEquipment(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      getEquipment(id);\r\n  }, [id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentEquipment({ ...currentEquipment, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n        Equipment_ID:currentEquipment.Equipment_ID,\r\n        Equipment_Name:currentEquipment.Equipment_Name,\r\n        Equipment_Kind:currentEquipment.Equipment_Kind,\r\n        Working_Status:currentEquipment.Working_Status,\r\n        Exercise:currentEquipment.Exercise\r\n\r\n    };\r\n\r\n    EquipmentService.updateEquipment(currentEquipment.Equipment_ID, data)\r\n      .then(response => {\r\n        setCurrentEquipment({ ...currentEquipment, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateEquipment = () => {\r\n    EquipmentService.updateEquipment(currentEquipment.Equipment_ID, currentEquipment)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Equipment was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteEquipment = () => {\r\n//     ManagerDataService.remove(currentEquipment.Equipment_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/equipment\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {currentEquipment ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Equipment</h4>\r\n          <form>\r\n\r\n\r\n          <div className=\"form-group\">\r\n          <label htmlFor=\"Equipment_Name\">Equipment_Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            required\r\n            value={currentEquipment.Equipment_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Equipment_Name\"\r\n          />\r\n        </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Equipment_Kind\">Equipment_Kind</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Equipment_Kind\"\r\n                required\r\n                value={currentEquipment.Equipment_Kind}\r\n                onChange={handleInputChange}\r\n                name=\"Equipment_Kind\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Working_Status\">Working_Status</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Working_Status\"\r\n                required\r\n                value={currentEquipment.Working_Status}\r\n                onChange={handleInputChange}\r\n                name=\"Working_Status\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Exercise\">Exercise</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Exercise\"\r\n                required\r\n                value={currentEquipment.Exercise}\r\n                onChange={handleInputChange}\r\n                name=\"Exercise\"\r\n              />\r\n            </div>\r\n            \r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteEquipment}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateEquipment}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Equipment...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Workout\\AddWorkout.js",["169","170"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Branch\\EditBranch.js",["171","172"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport BranchServices from \"../../services/ManagerService\";\r\n\r\nconst Branch = props => {\r\n    \r\n    console.log(useParams());\r\n  const { id } = useParams();\r\n//  BranchServices.get(Branch_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(id);\r\n  let navigate = useNavigate();\r\n  // console.log(Branch_ID);\r\n  const initialBranchState = {\r\n    Branch_ID:null,\r\n    Branch_Name: \"\",\r\n    Branch_Location: \"\",\r\n    Branch_Email: \"\",\r\n    Branch_Phone_Number: 0,\r\n    Manager_Name: \"\",\r\n    Gender: \"\",\r\n    Mobile_Number: 0,\r\n    Address: \"\",\r\n    Manager_Email: \"\",\r\n    Password: \"\"\r\n  };\r\n  const [currentBranch, setCurrentBranch] = useState(initialBranchState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getBranch = id => {\r\n    BranchServices.getBranch(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentBranch(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      getBranch(id);\r\n  }, [id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentBranch({ ...currentBranch, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n        Branch_Name:currentBranch.Branch_Name,\r\n        Branch_DietChart:currentBranch.Branch_DietChart,\r\n        Working_Duration:currentBranch.Working_Duration\r\n\r\n    };\r\n\r\n    BranchServices.updateBranch(currentBranch.Branch_ID, data)\r\n      .then(response => {\r\n        setCurrentBranch({ ...currentBranch, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateBranch = () => {\r\n    BranchServices.updateBranch(currentBranch.Branch_ID, currentBranch)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Branch was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteBranch = () => {\r\n//     BranchServices.remove(currentBranch.Branch_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/branch\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\nconsole.log(currentBranch);\r\n  return (\r\n    <div>\r\n      {currentBranch ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Branch</h4>\r\n          <form>\r\n\r\n\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Branch_Name\">Branch_Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              required\r\n              value={currentBranch.Branch_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Branch_Name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Branch_Location\">Branch_Location</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Branch_Location\"\r\n              required\r\n              value={currentBranch.Branch_Location}\r\n              onChange={handleInputChange}\r\n              name=\"Branch_Location\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Branch_Email\">Branch_Email</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Branch_Email\"\r\n              required\r\n              value={currentBranch.Branch_Email}\r\n              onChange={handleInputChange}\r\n              name=\"Branch_Email\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Branch_Phone_Number\">Branch_Phone_Number</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"Branch_Phone_Number\"\r\n              required\r\n              value={currentBranch.Branch_Phone_Number}\r\n              onChange={handleInputChange}\r\n              name=\"Branch_Phone_Number\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Manager_Name\">Manager_Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Manager_Name\"\r\n              required\r\n              value={currentBranch.Manager_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Manager_Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Gender\">Gender</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Gender\"\r\n              required\r\n              value={currentBranch.Gender}\r\n              onChange={handleInputChange}\r\n              name=\"Gender\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"Mobile_Number\"\r\n              required\r\n              value={currentBranch.Mobile_Number}\r\n              onChange={handleInputChange}\r\n              name=\"Mobile_Number\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Address\">Address</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Address\"\r\n              required\r\n              value={currentBranch.Address}\r\n              onChange={handleInputChange}\r\n              name=\"Address\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Manager_Email\">Manager_Email</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Manager_Email\"\r\n              required\r\n              value={currentBranch.Manager_Email}\r\n              onChange={handleInputChange}\r\n              name=\"Manager_Email\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Password\">Password</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"Password\"\r\n              required\r\n              value={currentBranch.Password}\r\n              onChange={handleInputChange}\r\n              name=\"Password\"\r\n            />\r\n          </div>\r\n           \r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteBranch}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateBranch}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Branch...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Branch;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Workout\\EditWorkout.js",["173","174"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport WorkoutService from \"../../services/ManagerService\";\r\n\r\nconst Workout = props => {\r\n    \r\n    console.log(useParams());\r\n  const { id } = useParams();\r\n//  WorkoutService.get(Workout_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(id);\r\n  let navigate = useNavigate();\r\n  // console.log(Workout_ID);\r\n  const initialWorkoutState = {\r\n    Workout_ID:null,\r\n    Workout_Name:\"\",\r\n    Workout_DietChart:\"\",\r\n    Working_Duration:\"\"\r\n  };\r\n  const [currentWorkout, setCurrentWorkout] = useState(initialWorkoutState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getWorkout = id => {\r\n    WorkoutService.getWorkout(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentWorkout(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      getWorkout(id);\r\n  }, [id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentWorkout({ ...currentWorkout, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n        Workout_Name:currentWorkout.Workout_Name,\r\n        Workout_DietChart:currentWorkout.Workout_DietChart,\r\n        Working_Duration:currentWorkout.Working_Duration\r\n\r\n    };\r\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, data)\r\n      .then(response => {\r\n        setCurrentWorkout({ ...currentWorkout, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateWorkout = () => {\r\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, currentWorkout)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Workout was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteWorkout = () => {\r\n//     WorkoutService.remove(currentWorkout.Workout_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/workout\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\nconsole.log(currentWorkout);\r\n  return (\r\n    <div>\r\n      {currentWorkout ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Workout</h4>\r\n          <form>\r\n\r\n\r\n          <div className=\"form-group\">\r\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            required\r\n            value={currentWorkout.Workout_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Workout_Name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"Workout_DietChart\"\r\n          required\r\n          value={currentWorkout.Workout_DietChart}\r\n          onChange={handleInputChange}\r\n          name=\"Workout_DietChart\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <label htmlFor=\"Working_Duration\">Working_Duration</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        id=\"Working_Duration\"\r\n        required\r\n        value={currentWorkout.Working_Duration}\r\n        onChange={handleInputChange}\r\n        name=\"Working_Duration\"\r\n      />\r\n    </div>\r\n           \r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteWorkout}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateWorkout}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Workout...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\BoardAdmin.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\common\\EventBus.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Equipment\\AddEquipment.js",["175"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Branch\\ShowBranches.js",["176","177","178","179","180"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Branch\\AddBranch.js",["181"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Home.js",["182","183","184","185","186","187","188"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport TypeWriterEffect from 'react-typewriter-effect';\r\nimport sample from \"../Videos/ropes.mp4\"\r\nconst Home = () => {\r\n  //   const particlesInit = async (main) => {\r\n  //   console.log(main);\r\n\r\n  //   // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n  //   // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n  //   // starting from v2 you can add only the features you need reducing the bundle size\r\n  //   await loadFull(main);\r\n  // };\r\n\r\n  // const particlesLoaded = (container) => {\r\n  //   console.log(container);\r\n  //};\r\n  return (\r\n    <div >\r\n      <video id=\"video\" className='videoTag' autoPlay loop muted fluid>\r\n        <source src={sample} type='video/mp4' />\r\n      </video>\r\n      <TypeWriterEffect\r\n        textStyle={{\r\n          fontFamily: 'Montserrat',\r\n          color: '#4a210a',\r\n          fontWeight: 'Bold',\r\n          fontSize: '3em',\r\n        }}\r\n        startDelay={500}\r\n        cursorColor=\"#3F3D56\"\r\n        multiText={[\r\n          ' IF YOU DON\\'T KNOW WHERE YOU ARE GOING, YOU WILL WIND UP SOMEWHERE ELSE. -YOGI BERRA',\r\n\r\n        ]}\r\n        multiTextDelay={1000}\r\n        typeSpeed={80}\r\n      />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Member\\ShowMembers.js",["189","190","191","192","193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport ManagerService from \"../../services/ManagerService\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./Member.css\";\r\nimport image from \"../../Images/home.jpg\"\r\nconst MemberList = () => {\r\n  const { id } = useParams();\r\n  const [member, setMember] = useState([]);\r\n  const [currentMember, setCurrentMember] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveMembers();\r\n  }, []);\r\n\r\n  const onChangeSearchMem_Name = e => {\r\n    const searchMem_Name = e.target.value;\r\n    setSearchMem_Name(searchMem_Name);\r\n  };\r\n\r\n  const retrieveMembers = () => {\r\n    ManagerService.getAll(id)\r\n      .then(response => {\r\n        setMember(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveMembers();\r\n    setCurrentMember(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveMember = (member, index) => {\r\n    setCurrentMember(member);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  //   const removeAllMembers = () => {\r\n  //     MemberDataService.removeAll()\r\n  //       .then(response => {\r\n  //         console.log(response.data);\r\n  //         refreshList();\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n\r\n  //   const findByMem_Name = () => {\r\n  //     MemberDataService.findByMem_Name(searchMem_Name)\r\n  //       .then(response => {\r\n  //         setMember(response.data);\r\n  //         console.log(response.data);\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n  const deleteMember = (Mem_ID) => {\r\n    console.log(Mem_ID);\r\n    ManagerService.removeMember(Mem_ID)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"list row\" align=\"center\">\r\n      <img src={image} id=\"imgt2\" />\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          {\r\n            //  <input\r\n            //   type=\"text\"\r\n            //   className=\"form-control\"\r\n            //   placeholder=\"Search by Mem_Name\"\r\n            //   value={searchMem_Name}\r\n            //   onChange={onChangeSearchMem_Name}\r\n            // />\r\n          }\r\n          {\r\n            //       <div className=\"input-group-append\">\r\n            //     <button\r\n            //       className=\"btn btn-outline-secondary\"\r\n            //       type=\"button\"\r\n            //       onClick={findByMem_Name}\r\n            //     >\r\n            //       Search\r\n            //     </button>\r\n            //   </div>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\" textAlign='center'>\r\n        <h4 className=\"lab\">Members List</h4>\r\n        <br />\r\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.7\", textAlign: \"center\", borderRadius: '20px', verticalAlign: 'center' }}>\r\n          <thead>\r\n            <tr>\r\n\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Weight</th>\r\n              <th>Height</th>\r\n              <th>Age</th>\r\n              <th>Gender</th>\r\n              <th>Blood Group</th>\r\n              <th>Address</th>\r\n              <th>Emergency Name</th>\r\n              <th>Emergency Mobile</th>\r\n              <th>Update/Delete</th>\r\n            </tr>\r\n          </thead>\r\n          {member &&\r\n            member.map((member, index) => (\r\n              <tr>\r\n                <td>{member.Mem_ID}</td>\r\n                <td>{member.Mem_Name}</td>\r\n                <td>{member.Mobile_Number}</td>\r\n                <td>{member.Mem_Weight}</td>\r\n                <td>{member.Mem_Height}</td>\r\n                <td>{member.Age}</td>\r\n                <td>{member.Gender}</td>\r\n                <td>{member.Blood_Type}</td>\r\n                <td>{member.Address}</td>\r\n                <td>{member.Emer_Name}</td>\r\n                <td>{member.Emer_Mobile}</td>\r\n                <td align=\"right\"><button className=\"btn-danger pqy\" align=\"left\" onClick={() => { deleteMember(member.Mem_ID) }}>Delete</button><Link style={{ textAlign: \"left\" }}\r\n                  to={\"/editmember/\" + member.Mem_ID}\r\n                  className=\"badge badge-warning pqy\">\r\n                  Edit\r\n                </Link></td>\r\n              </tr>\r\n            ))}\r\n        </Table>\r\n\r\n        {\r\n          //     <button\r\n          //   className=\"m-3 btn btn-sm btn-danger\"\r\n          //   onClick={removeAllMembers}\r\n          // >\r\n          //   Remove All\r\n          // </button>\r\n        }\r\n      </div>\r\n      {\r\n        //   <div className=\"col-md-6\">\r\n        //   {currentMember ? (\r\n        //     <div>\r\n        //       <h4>Members</h4>\r\n        //       <div>\r\n        //         <label>\r\n        //           <strong>Mem_Name:</strong>\r\n        //         </label>{\" \"}\r\n\r\n        //         {currentMember.Mem_ID}\r\n        //       </div>\r\n        //       <Link\r\n        //         to={\"/editmember/\" + currentMember.Mem_ID}\r\n        //         className=\"badge badge-warning\"\r\n        //       >\r\n        //         Edit\r\n        //       </Link>\r\n        //     </div>\r\n        //   ) : (\r\n        //     <div>\r\n        //       <br />\r\n        //       <p>Please click on a Member...</p>\r\n        //     </div>\r\n        //   )}\r\n        // </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Login.js",["196"],"import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport image from \"../Images/home.jpg\"\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [manager_Email, setManager_Email] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeManager_Email = (e) => {\r\n    const manager_Email = e.target.value;\r\n    setManager_Email(manager_Email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(manager_Email, password).then(\r\n        (response) => {\r\n          navigate(\"/profile/\" + response.id);\r\n          // console.log(response);\r\n\r\n\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <img src={image} id=\"imgt2\" />\r\n      {/* <br />\r\n      <br />\r\n      <br /> */}\r\n      <div className=\"card card-container custom\">\r\n        {/* <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        /> */}\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <br />\r\n          <label className=\"abc\" htmlFor=\"manager_Email\">Email</label>\r\n          <Input\r\n            type=\"text\"\r\n            className=\"form-control fkk\"\r\n            name=\"manager_Email\"\r\n            placeholder=\"Email\"\r\n            value={manager_Email}\r\n            onChange={onChangeManager_Email}\r\n            validations={[required]}\r\n          />\r\n\r\n          <br />\r\n          <label className=\"abc\" htmlFor=\"password\">Password</label>\r\n          <Input\r\n            type=\"password\"\r\n            className=\" fkk form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            validations={[required]}\r\n          />\r\n          <br />\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <button className=\"butt\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Payment\\ShowPayment.js",["197","198","199","200","201","202","203","204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport PaymentService from \"../../services/ManagerService\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport image from \"../../Images/home.jpg\"\r\n\r\nconst PaymentList = () => {\r\n  const { id } = useParams();\r\n  const [payment, setPayment] = useState([]);\r\n  const [currentPayment, setCurrentPayment] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrievePayments();\r\n  }, []);\r\n\r\n  const onChangeSearchMem_Name = e => {\r\n    const searchMem_Name = e.target.value;\r\n    setSearchMem_Name(searchMem_Name);\r\n  };\r\n\r\n  const retrievePayments = () => {\r\n    PaymentService.showPayment(id)\r\n      .then(response => {\r\n        setPayment(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrievePayments();\r\n    setCurrentPayment(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActivePayment = (payment, index) => {\r\n    setCurrentPayment(payment);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  //   const removeAllPayments = () => {\r\n  //     PaymentDataService.removeAll()\r\n  //       .then(response => {\r\n  //         console.log(response.data);\r\n  //         refreshList();\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n\r\n  //   const findByMem_Name = () => {\r\n  //     PaymentDataService.findByMem_Name(searchMem_Name)\r\n  //       .then(response => {\r\n  //         setPayment(response.data);\r\n  //         console.log(response.data);\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n  console.log(payment)\r\n  return (\r\n    <div className=\"list row\" align=\"center\">\r\n      {\r\n        <img src={image} id=\"imgt_show_payment\" />\r\n        // <div className=\"\">\r\n        //   <div className=\"input-group mb-3\">\r\n        //     <input\r\n        //       type=\"text\"\r\n        //       className=\"form-control\"\r\n        //       placeholder=\"Search by Mem_Name\"\r\n        //     //value={searchMem_Name}\r\n        //     //onChange={onChangeSearchMem_Name}\r\n        //     />\r\n        //     {\r\n        //       //       <div className=\"input-group-append\">\r\n        //       //     <button\r\n        //       //       className=\"btn btn-outline-secondary\"\r\n        //       //       type=\"button\"\r\n        //       //       onClick={findByMem_Name}\r\n        //       //     >\r\n        //       //       Search\r\n        //       //     </button>\r\n        //       //   </div>\r\n        //     }\r\n        //   </div>\r\n        // </div>\r\n      }\r\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\r\n        <h4 className=\"lab\">Payments List</h4>\r\n        <br />\r\n        {/* khushil working */}\r\n\r\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ backgroundColor: \"black\", opacity: \"0.7\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1rem' }}>\r\n          <thead>\r\n            <tr textAlign=\"center\" vertical-align=\"middle\">\r\n\r\n              <th>ID</th>\r\n              <th>Description</th>\r\n              <th>Amount</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n              <th>Member ID</th>\r\n              <th>Workout ID</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {payment.map((payment, index) => (\r\n            <tr>\r\n              <td>{payment.Payment_ID}</td>\r\n              <td>{payment.Payment_Desc}</td>\r\n              <td>{payment.Payment_Amt}</td>\r\n              <td>{payment.Payment_Date}</td>\r\n              <td>{payment.Payment_Time}</td>\r\n              <td>{payment.Member_ID}</td>\r\n              <td>{payment.Workout_ID}</td>\r\n\r\n\r\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\r\n            </tr>\r\n          ))}\r\n        </Table>\r\n\r\n        {/* <ul className=\"list-group\">\r\n          {payment &&\r\n            payment.map((payment, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \"\r\n                }\r\n\r\n\r\n                key={index}\r\n              >\r\n                {payment.Payment_ID}                  {payment.Payment_Desc}\r\n              </li>\r\n\r\n\r\n            ))}\r\n        </ul> */}\r\n\r\n        {\r\n          //     <button\r\n          //   className=\"m-3 btn btn-sm btn-danger\"\r\n          //   onClick={removeAllPayments}\r\n          // >\r\n          //   Remove All\r\n          // </button>\r\n        }\r\n      </div>\r\n      {\r\n        //       <div className=\"col-md-6\">\r\n        //     {currentPayment ? (\r\n        //       <div>\r\n        //         <h4>Payments</h4>\r\n        //         <div>\r\n        //           <label>\r\n        //             <strong>Mem_Name:</strong>\r\n        //           </label>{\" \"}\r\n\r\n        //           {currentPayment.Payment_ID}\r\n        //         </div>\r\n        //         <Link\r\n        //           to={\"/editpayment/\" + currentPayment.Payment_ID}\r\n        //           className=\"badge badge-warning\"\r\n        //         >\r\n        //           Edit\r\n        //         </Link>\r\n        //       </div>\r\n        //     ) : (\r\n        //       <div>\r\n        //         <br />\r\n        //         <p>Please click on a Payment...</p>\r\n        //       </div>\r\n        //     )}\r\n        //   </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentList;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Equipment\\ShowEquipment.js",["206","207","208","209","210","211","212","213"],"import React, { useState, useEffect } from \"react\";\r\nimport EquipmentService from \"../../services/ManagerService\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport image from \"../../Images/home.jpg\"\r\nconst EquipmentList = () => {\r\n  const { id } = useParams();\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [currentEquipment, setCurrentEquipment] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveEquipments();\r\n  }, []);\r\n\r\n  const onChangeSearchMem_Name = e => {\r\n    const searchMem_Name = e.target.value;\r\n    setSearchMem_Name(searchMem_Name);\r\n  };\r\n\r\n  const retrieveEquipments = () => {\r\n    EquipmentService.showEquipment(id)\r\n      .then(response => {\r\n        setEquipment(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveEquipments();\r\n    setCurrentEquipment(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveEquipment = (equipment, index) => {\r\n    setCurrentEquipment(equipment);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  //   const removeAllEquipments = () => {\r\n  //     EquipmentDataService.removeAll()\r\n  //       .then(response => {\r\n  //         console.log(response.data);\r\n  //         refreshList();\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n\r\n  //   const findByMem_Name = () => {\r\n  //     EquipmentDataService.findByMem_Name(searchMem_Name)\r\n  //       .then(response => {\r\n  //         setEquipment(response.data);\r\n  //         console.log(response.data);\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n  console.log(equipment)\r\n  return (\r\n    <div className=\"list row\" align=\"center\">\r\n      <img src={image} id=\"imgt2\" />\r\n\r\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h4 className=\"lab\">Equipments List</h4>\r\n        <br />\r\n        {/* khushil working */}\r\n\r\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1.5rem' }}>\r\n          <thead>\r\n            <tr>\r\n\r\n              <th>Equipment ID</th>\r\n              <th>Equipment Name</th>\r\n              <th>Equipment Kind</th>\r\n              <th>Working Status</th>\r\n              <th>Exercise</th>\r\n\r\n              <th>Edit</th>\r\n\r\n            </tr>\r\n          </thead>\r\n\r\n          {equipment.map((equipment, index) => (\r\n            <tr>\r\n              <td>{equipment.Equipment_ID}</td>\r\n              <td>{equipment.Equipment_Name}</td>\r\n              <td>{equipment.Equipment_Kind}</td>\r\n              <td>{equipment.Working_Status}</td>\r\n              <td>{equipment.Exercise}</td>\r\n\r\n              <td>\r\n                <Link\r\n                  to={\"/editequipment/\" + equipment.Equipment_ID}\r\n                  className=\"badge badge_warning\">Edit</Link>\r\n              </td>\r\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\r\n            </tr>\r\n          ))}\r\n        </Table>\r\n\r\n        {/* <ul className=\"list-group\">\r\n          {equipment &&\r\n            equipment.map((equipment, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \"\r\n                }\r\n                onClick={() => {\r\n                  setActiveEquipment(equipment, index)\r\n                }\r\n                }\r\n                key={index}\r\n              >\r\n                {equipment.Equipment_ID}                  {equipment.Equipment_Desc}\r\n              </li>\r\n\r\n\r\n            ))}\r\n        </ul> */}\r\n\r\n        {\r\n          //     <button\r\n          //   className=\"m-3 btn btn-sm btn-danger\"\r\n          //   onClick={removeAllEquipments}\r\n          // >\r\n          //   Remove All\r\n          // </button>\r\n        }\r\n      </div>\r\n      {\r\n        //       <div className=\"col-md-6\">\r\n        //     {currentEquipment ? (\r\n        //       <div>\r\n        //         <h4>Equipments</h4>\r\n        //         <div>\r\n        //           <label>\r\n        //             <strong>Mem_Name:</strong>\r\n        //           </label>{\" \"}\r\n\r\n        //           {currentEquipment.Equipment_ID}\r\n        //         </div>\r\n        //         <Link\r\n        //           to={\"/editequipment/\" + currentEquipment.Equipment_ID}\r\n        //           className=\"badge badge-warning\"\r\n        //         >\r\n        //           Edit\r\n        //         </Link>\r\n        //       </div>\r\n        //     ) : (\r\n        //       <div>\r\n        //         <br />\r\n        //         <p>Please click on a Equipment...</p>\r\n        //       </div>\r\n        //     )}\r\n        //   </div>\r\n      }\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default EquipmentList;\r\n","D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Workout\\ShowWorkout.js",["214","215","216","217","218","219"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\components\\Trainer\\ShowTrainer.js",["220","221","222","223","224","225","226","227"],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\services\\ManagerService.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\services\\user.service.js",[],"D:\\dbms_proj\\DBMS_Project\\gamma\\src\\services\\auth-header.js",[],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":5,"column":8,"nodeType":"234","messageId":"235","endLine":5,"endColumn":17},{"ruleId":"232","severity":1,"message":"236","line":31,"column":10,"nodeType":"234","messageId":"235","endLine":31,"endColumn":18},{"ruleId":"232","severity":1,"message":"237","line":32,"column":8,"nodeType":"234","messageId":"235","endLine":32,"endColumn":20},{"ruleId":"232","severity":1,"message":"238","line":36,"column":10,"nodeType":"234","messageId":"235","endLine":36,"endColumn":25},{"ruleId":"232","severity":1,"message":"239","line":37,"column":10,"nodeType":"234","messageId":"235","endLine":37,"endColumn":25},{"ruleId":"232","severity":1,"message":"240","line":38,"column":10,"nodeType":"234","messageId":"235","endLine":38,"endColumn":27},{"ruleId":"232","severity":1,"message":"241","line":38,"column":29,"nodeType":"234","messageId":"235","endLine":38,"endColumn":49},{"ruleId":"232","severity":1,"message":"242","line":39,"column":10,"nodeType":"234","messageId":"235","endLine":39,"endColumn":27},{"ruleId":"232","severity":1,"message":"243","line":39,"column":29,"nodeType":"234","messageId":"235","endLine":39,"endColumn":49},{"ruleId":"232","severity":1,"message":"244","line":40,"column":10,"nodeType":"234","messageId":"235","endLine":40,"endColumn":28},{"ruleId":"232","severity":1,"message":"245","line":40,"column":30,"nodeType":"234","messageId":"235","endLine":40,"endColumn":51},{"ruleId":"232","severity":1,"message":"246","line":41,"column":10,"nodeType":"234","messageId":"235","endLine":41,"endColumn":25},{"ruleId":"232","severity":1,"message":"247","line":41,"column":27,"nodeType":"234","messageId":"235","endLine":41,"endColumn":45},{"ruleId":"232","severity":1,"message":"248","line":42,"column":9,"nodeType":"234","messageId":"235","endLine":42,"endColumn":22},{"ruleId":"232","severity":1,"message":"249","line":51,"column":9,"nodeType":"234","messageId":"235","endLine":51,"endColumn":24},{"ruleId":"232","severity":1,"message":"250","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":75,"column":7,"nodeType":"253","endLine":75,"endColumn":37},{"ruleId":"251","severity":1,"message":"252","line":61,"column":5,"nodeType":"253","endLine":61,"endColumn":35},{"ruleId":"232","severity":1,"message":"254","line":16,"column":7,"nodeType":"234","messageId":"235","endLine":16,"endColumn":15},{"ruleId":"232","severity":1,"message":"255","line":55,"column":9,"nodeType":"234","messageId":"235","endLine":55,"endColumn":24},{"ruleId":"251","severity":1,"message":"252","line":77,"column":5,"nodeType":"253","endLine":77,"endColumn":35},{"ruleId":"232","severity":1,"message":"254","line":16,"column":7,"nodeType":"234","messageId":"235","endLine":16,"endColumn":15},{"ruleId":"232","severity":1,"message":"255","line":56,"column":9,"nodeType":"234","messageId":"235","endLine":56,"endColumn":24},{"ruleId":"232","severity":1,"message":"254","line":16,"column":7,"nodeType":"234","messageId":"235","endLine":16,"endColumn":15},{"ruleId":"232","severity":1,"message":"255","line":49,"column":9,"nodeType":"234","messageId":"235","endLine":49,"endColumn":24},{"ruleId":"232","severity":1,"message":"250","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":53,"column":5,"nodeType":"253","endLine":53,"endColumn":35},{"ruleId":"232","severity":1,"message":"254","line":16,"column":7,"nodeType":"234","messageId":"235","endLine":16,"endColumn":15},{"ruleId":"232","severity":1,"message":"255","line":55,"column":9,"nodeType":"234","messageId":"235","endLine":55,"endColumn":24},{"ruleId":"232","severity":1,"message":"254","line":16,"column":7,"nodeType":"234","messageId":"235","endLine":16,"endColumn":15},{"ruleId":"232","severity":1,"message":"255","line":48,"column":9,"nodeType":"234","messageId":"235","endLine":48,"endColumn":24},{"ruleId":"251","severity":1,"message":"252","line":57,"column":5,"nodeType":"253","endLine":57,"endColumn":35},{"ruleId":"232","severity":1,"message":"256","line":9,"column":10,"nodeType":"234","messageId":"235","endLine":9,"endColumn":31},{"ruleId":"232","severity":1,"message":"257","line":10,"column":10,"nodeType":"234","messageId":"235","endLine":10,"endColumn":22},{"ruleId":"232","severity":1,"message":"258","line":39,"column":9,"nodeType":"234","messageId":"235","endLine":39,"endColumn":32},{"ruleId":"232","severity":1,"message":"259","line":44,"column":9,"nodeType":"234","messageId":"235","endLine":44,"endColumn":33},{"ruleId":"251","severity":1,"message":"252","line":68,"column":5,"nodeType":"253","endLine":68,"endColumn":35},{"ruleId":"251","severity":1,"message":"252","line":77,"column":5,"nodeType":"253","endLine":77,"endColumn":35},{"ruleId":"232","severity":1,"message":"260","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"261","line":1,"column":27,"nodeType":"234","messageId":"235","endLine":1,"endColumn":36},{"ruleId":"232","severity":1,"message":"250","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":19},{"ruleId":"232","severity":1,"message":"262","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":19},{"ruleId":"232","severity":1,"message":"233","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":17},{"ruleId":"232","severity":1,"message":"263","line":5,"column":10,"nodeType":"234","messageId":"235","endLine":5,"endColumn":18},{"ruleId":"232","severity":1,"message":"264","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":18},{"ruleId":"232","severity":1,"message":"265","line":10,"column":10,"nodeType":"234","messageId":"235","endLine":10,"endColumn":23},{"ruleId":"232","severity":1,"message":"257","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":22},{"ruleId":"232","severity":1,"message":"266","line":12,"column":10,"nodeType":"234","messageId":"235","endLine":12,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":16,"column":6,"nodeType":"269","endLine":16,"endColumn":8,"suggestions":"270"},{"ruleId":"232","severity":1,"message":"271","line":18,"column":9,"nodeType":"234","messageId":"235","endLine":18,"endColumn":31},{"ruleId":"232","severity":1,"message":"272","line":40,"column":9,"nodeType":"234","messageId":"235","endLine":40,"endColumn":24},{"ruleId":"251","severity":1,"message":"252","line":77,"column":7,"nodeType":"253","endLine":77,"endColumn":37},{"ruleId":"251","severity":1,"message":"252","line":75,"column":7,"nodeType":"253","endLine":75,"endColumn":37},{"ruleId":"232","severity":1,"message":"273","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":14},{"ruleId":"232","severity":1,"message":"274","line":10,"column":10,"nodeType":"234","messageId":"235","endLine":10,"endColumn":24},{"ruleId":"232","severity":1,"message":"257","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":22},{"ruleId":"232","severity":1,"message":"266","line":12,"column":10,"nodeType":"234","messageId":"235","endLine":12,"endColumn":24},{"ruleId":"267","severity":1,"message":"275","line":16,"column":6,"nodeType":"269","endLine":16,"endColumn":8,"suggestions":"276"},{"ruleId":"232","severity":1,"message":"271","line":18,"column":9,"nodeType":"234","messageId":"235","endLine":18,"endColumn":31},{"ruleId":"232","severity":1,"message":"277","line":34,"column":9,"nodeType":"234","messageId":"235","endLine":34,"endColumn":20},{"ruleId":"232","severity":1,"message":"278","line":40,"column":9,"nodeType":"234","messageId":"235","endLine":40,"endColumn":25},{"ruleId":"251","severity":1,"message":"252","line":70,"column":9,"nodeType":"253","endLine":70,"endColumn":51},{"ruleId":"232","severity":1,"message":"279","line":9,"column":10,"nodeType":"234","messageId":"235","endLine":9,"endColumn":26},{"ruleId":"232","severity":1,"message":"257","line":10,"column":10,"nodeType":"234","messageId":"235","endLine":10,"endColumn":22},{"ruleId":"232","severity":1,"message":"266","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":24},{"ruleId":"267","severity":1,"message":"280","line":15,"column":6,"nodeType":"269","endLine":15,"endColumn":8,"suggestions":"281"},{"ruleId":"232","severity":1,"message":"271","line":17,"column":9,"nodeType":"234","messageId":"235","endLine":17,"endColumn":31},{"ruleId":"232","severity":1,"message":"277","line":33,"column":9,"nodeType":"234","messageId":"235","endLine":33,"endColumn":20},{"ruleId":"232","severity":1,"message":"282","line":39,"column":9,"nodeType":"234","messageId":"235","endLine":39,"endColumn":27},{"ruleId":"251","severity":1,"message":"252","line":68,"column":7,"nodeType":"253","endLine":68,"endColumn":37},{"ruleId":"232","severity":1,"message":"250","line":3,"column":16,"nodeType":"234","messageId":"235","endLine":3,"endColumn":25},{"ruleId":"232","severity":1,"message":"283","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":24},{"ruleId":"232","severity":1,"message":"257","line":12,"column":10,"nodeType":"234","messageId":"235","endLine":12,"endColumn":22},{"ruleId":"232","severity":1,"message":"277","line":35,"column":9,"nodeType":"234","messageId":"235","endLine":35,"endColumn":20},{"ruleId":"232","severity":1,"message":"284","line":41,"column":9,"nodeType":"234","messageId":"235","endLine":41,"endColumn":25},{"ruleId":"251","severity":1,"message":"252","line":70,"column":5,"nodeType":"253","endLine":70,"endColumn":35},{"ruleId":"232","severity":1,"message":"285","line":9,"column":10,"nodeType":"234","messageId":"235","endLine":9,"endColumn":24},{"ruleId":"232","severity":1,"message":"257","line":10,"column":10,"nodeType":"234","messageId":"235","endLine":10,"endColumn":22},{"ruleId":"232","severity":1,"message":"266","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":24},{"ruleId":"267","severity":1,"message":"286","line":15,"column":6,"nodeType":"269","endLine":15,"endColumn":8,"suggestions":"287"},{"ruleId":"232","severity":1,"message":"271","line":17,"column":9,"nodeType":"234","messageId":"235","endLine":17,"endColumn":31},{"ruleId":"232","severity":1,"message":"277","line":33,"column":9,"nodeType":"234","messageId":"235","endLine":33,"endColumn":20},{"ruleId":"232","severity":1,"message":"288","line":39,"column":9,"nodeType":"234","messageId":"235","endLine":39,"endColumn":25},{"ruleId":"251","severity":1,"message":"252","line":68,"column":7,"nodeType":"253","endLine":68,"endColumn":37},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'DropdownItem' is defined but never used.","'showDropdownMem' is assigned a value but never used.","'showDropdownPay' is assigned a value but never used.","'showDropdownTrain' is assigned a value but never used.","'setShowDropdownTrain' is assigned a value but never used.","'showDropdownEquip' is assigned a value but never used.","'setShowDropdownEquip' is assigned a value but never used.","'showDropdownBranch' is assigned a value but never used.","'setShowDropdownBranch' is assigned a value but never used.","'showDropdownWor' is assigned a value but never used.","'setShowDropdownWor' is assigned a value but never used.","'particlesInit' is assigned a value but never used.","'particlesLoaded' is assigned a value but never used.","'useParams' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'navigate' is assigned a value but never used.","'updatePublished' is assigned a value but never used.","'currentBranch_Manager' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'setActiveBranch_Manager' is assigned a value but never used.","'removeAllBranch_Managers' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserService' is defined but never used.","'loadFull' is defined but never used.","'Typewriter' is defined but never used.","'currentMember' is assigned a value but never used.","'searchMem_Name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveMembers'. Either include it or remove the dependency array.","ArrayExpression",["291"],"'onChangeSearchMem_Name' is assigned a value but never used.","'setActiveMember' is assigned a value but never used.","'Link' is defined but never used.","'currentPayment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrievePayments'. Either include it or remove the dependency array.",["292"],"'refreshList' is assigned a value but never used.","'setActivePayment' is assigned a value but never used.","'currentEquipment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveEquipments'. Either include it or remove the dependency array.",["293"],"'setActiveEquipment' is assigned a value but never used.","'currentWorkout' is assigned a value but never used.","'setActiveWorkout' is assigned a value but never used.","'currentTrainer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveTrainers'. Either include it or remove the dependency array.",["294"],"'setActiveTrainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"Update the dependencies array to be: [retrieveMembers]",{"range":"303","text":"304"},"Update the dependencies array to be: [retrievePayments]",{"range":"305","text":"306"},"Update the dependencies array to be: [retrieveEquipments]",{"range":"307","text":"308"},"Update the dependencies array to be: [retrieveTrainers]",{"range":"309","text":"310"},[611,613],"[retrieveMembers]",[596,598],"[retrievePayments]",[608,610],"[retrieveEquipments]",[595,597],"[retrieveTrainers]"]