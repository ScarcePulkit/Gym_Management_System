[{"/Users/khushil/Project/DBMS_Project/gamma/src/index.js":"1","/Users/khushil/Project/DBMS_Project/gamma/src/serviceWorker.js":"2","/Users/khushil/Project/DBMS_Project/gamma/src/App.js":"3","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth.service.js":"4","/Users/khushil/Project/DBMS_Project/gamma/src/components/Register.js":"5","/Users/khushil/Project/DBMS_Project/gamma/src/components/Login.js":"6","/Users/khushil/Project/DBMS_Project/gamma/src/components/Profile.js":"7","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardUser.js":"8","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardModerator.js":"9","/Users/khushil/Project/DBMS_Project/gamma/src/components/Home.js":"10","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardAdmin.js":"11","/Users/khushil/Project/DBMS_Project/gamma/src/common/EventBus.js":"12","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/AddMember.js":"13","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment/ShowPayment.js":"14","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/ShowMembers.js":"15","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment/Payment.js":"16","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/Member.js":"17","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/AddEquipment.js":"18","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/AddWorkout.js":"19","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/EditEquipment.js":"20","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/EditWorkout.js":"21","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/ShowWorkout.js":"22","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/ShowEquipment.js":"23","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/AddBranch.js":"24","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/EditBranch.js":"25","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/ShowBranches.js":"26","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/ShowTrainer.js":"27","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/AddTrainer.js":"28","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/EditTrainer.js":"29","/Users/khushil/Project/DBMS_Project/gamma/src/services/user.service.js":"30","/Users/khushil/Project/DBMS_Project/gamma/src/services/ManagerService.js":"31","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth-header.js":"32"},{"size":320,"mtime":1650114911777,"results":"33","hashOfConfig":"34"},{"size":5086,"mtime":1650114911777,"results":"35","hashOfConfig":"34"},{"size":12753,"mtime":1650893621545,"results":"36","hashOfConfig":"34"},{"size":824,"mtime":1650114911778,"results":"37","hashOfConfig":"34"},{"size":4639,"mtime":1650114911777,"results":"38","hashOfConfig":"34"},{"size":3588,"mtime":1650890905295,"results":"39","hashOfConfig":"34"},{"size":1081,"mtime":1650114911776,"results":"40","hashOfConfig":"34"},{"size":891,"mtime":1650114911776,"results":"41","hashOfConfig":"34"},{"size":906,"mtime":1650114911776,"results":"42","hashOfConfig":"34"},{"size":1511,"mtime":1650889338881,"results":"43","hashOfConfig":"34"},{"size":894,"mtime":1650114911776,"results":"44","hashOfConfig":"34"},{"size":327,"mtime":1650114911775,"results":"45","hashOfConfig":"34"},{"size":7133,"mtime":1650881036795,"results":"46","hashOfConfig":"34"},{"size":5461,"mtime":1650892711923,"results":"47","hashOfConfig":"34"},{"size":5610,"mtime":1650892489525,"results":"48","hashOfConfig":"34"},{"size":4355,"mtime":1650881036796,"results":"49","hashOfConfig":"34"},{"size":7441,"mtime":1650881036795,"results":"50","hashOfConfig":"34"},{"size":4840,"mtime":1650881036792,"results":"51","hashOfConfig":"34"},{"size":4305,"mtime":1650881036815,"results":"52","hashOfConfig":"34"},{"size":4862,"mtime":1650881036792,"results":"53","hashOfConfig":"34"},{"size":4134,"mtime":1650881036815,"results":"54","hashOfConfig":"34"},{"size":5116,"mtime":1650892959543,"results":"55","hashOfConfig":"34"},{"size":4979,"mtime":1650893121621,"results":"56","hashOfConfig":"34"},{"size":6715,"mtime":1650881036792,"results":"57","hashOfConfig":"34"},{"size":7115,"mtime":1650881036792,"results":"58","hashOfConfig":"34"},{"size":5475,"mtime":1650881036792,"results":"59","hashOfConfig":"34"},{"size":5837,"mtime":1650892760372,"results":"60","hashOfConfig":"34"},{"size":5553,"mtime":1650881036815,"results":"61","hashOfConfig":"34"},{"size":6713,"mtime":1650881036815,"results":"62","hashOfConfig":"34"},{"size":622,"mtime":1650114911778,"results":"63","hashOfConfig":"34"},{"size":2964,"mtime":1650881036816,"results":"64","hashOfConfig":"34"},{"size":342,"mtime":1650114911778,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"9znqma",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/khushil/Project/DBMS_Project/gamma/src/index.js",[],["148","149"],"/Users/khushil/Project/DBMS_Project/gamma/src/serviceWorker.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/App.js",["150","151","152","153"],"import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport AddMember from \"./components/Member/AddMember\";\nimport EditMember from \"./components/Member/Member\";\nimport AuthService from \"./services/auth.service\";\nimport ShowMembers from \"./components/Member/ShowMembers\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/BoardUser\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport BoardAdmin from \"./components/BoardAdmin\";\nimport Payment from \"./components/Payment/Payment\";\nimport EventBus from \"./common/EventBus\";\nimport ShowPayment from \"./components/Payment/ShowPayment\";\nimport AddEquipment from \"./components/Equipment/AddEquipment\";\nimport AddTrainer from \"./components/Trainer/AddTrainer\";\nimport ShowEquipment from \"./components/Equipment/ShowEquipment\";\nimport ShowTrainer from \"./components/Trainer/ShowTrainer\";\nimport AddWorkout from \"./components/Workout/AddWorkout\";\nimport ShowWorkout from \"./components/Workout/ShowWorkout\";\nimport AddBranches from \"./components/Branch/AddBranch\";\nimport ShowBranches from \"./components/Branch/ShowBranches\";\nimport EditWorkout from \"./components/Workout/EditWorkout\";\nimport EditBranch from \"./components/Branch/EditBranch\";\nimport { Dropdown, NavDropdown } from \"react-bootstrap\";\nimport DropdownItem from \"react-bootstrap/esm/DropdownItem\";\nimport EditTrainer from \"./components/Trainer/EditTrainer\";\nimport EditEquipment from \"./components/Equipment/EditEquipment\";\nconst App = () => {\n  const [showDropdownMem, setShowDropdownMem] = useState(false);\n  const [showDropdownPay, setShowDropdownPay] = useState(false);\n  const [showDropdownTrain, setShowDropdownTrain] = useState(false);\n  const [showDropdownEquip, setShowDropdownEquip] = useState(false);\n  const [showDropdownBranch, setShowDropdownBranch] = useState(false);\n  const [showDropdownWor, setShowDropdownWor] = useState(false);\n  const particlesInit = async (main) => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n  // const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const [currentManager, setCurrentManager] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentManager();\n    // console.log(user);\n    //const {id} = user;\n    //console.log(id);\n\n    if (user) {\n      console.log(user.role);\n      if (user.role === \"admin\") {\n        setShowAdminBoard(true);\n\n      }\n      else {\n        setCurrentManager(user);\n      }\n      // setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\n\n    }\n\n    EventBus.on(\"logout\", () => {\n      logOut();\n    });\n\n    return () => {\n      EventBus.remove(\"logout\");\n    };\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n    // setShowModeratorBoard(false);\n    setShowAdminBoard(false);\n    setCurrentManager(undefined);\n  };\n  console.log(currentManager);\n\n\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark variant-dark\">\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              HOME\n            </Link>\n          </li>\n\n\n          {currentManager && (<Dropdown\n            onMouseLeave={() => setShowDropdownMem(false)}\n            onMouseOver={() => setShowDropdownMem(true)}\n            style={{ width: \"166px\" }}\n          >\n            <Dropdown.Toggle className=\"main-style\" id=\"dropdown-basic\">\n              Member\n            </Dropdown.Toggle>\n            <Dropdown.Menu show={showDropdownMem}>\n              <Dropdown.Item >\n                <Link\n                  to={\"/addmember/\" + currentManager.id}\n                  className=\"nav-link\"\n                >\n                  Add Member\n                </Link>\n              </Dropdown.Item>\n              <DropdownItem>\n                {\" \"}\n                <Link\n                  to={\"/showmembers/\" + currentManager.id}\n                  className=\"nav-link\"\n                >\n                  Show Members\n                </Link>\n              </DropdownItem>\n            </Dropdown.Menu>\n          </Dropdown>\n          )}\n          {\n            currentManager && (\n              <Dropdown\n                onMouseLeave={() => setShowDropdownPay(false)}\n                onMouseOver={() => setShowDropdownPay(true)}\n                style={{ width: \"166px\" }}\n              >\n                <Dropdown.Toggle className=\"main-style\" id=\"dropdown-basic\">\n                  Payment\n                </Dropdown.Toggle>\n                <Dropdown.Menu show={showDropdownPay}>\n                  <Dropdown.Item>\n                    <Link to={\"/payment/\" + currentManager.id} className=\"nav-link\">\n                      Add Payment\n                    </Link>\n                  </Dropdown.Item>\n                  <DropdownItem>\n\n                    <Link\n                      to={\"/showpayment/\" + currentManager.id}\n                      className=\"nav-link\"\n                    >\n                      Show Payments\n                    </Link>\n                  </DropdownItem>\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n\n          {\n            currentManager && (\n              <Dropdown\n                onMouseLeave={() => setShowDropdownTrain(false)}\n                onMouseOver={() => setShowDropdownTrain(true)}\n                style={{ width: \"166px\" }}\n              >\n                <Dropdown.Toggle className=\"main-style\" id=\"dropdown-basic\">\n                  Trainer\n                </Dropdown.Toggle>\n                <Dropdown.Menu show={showDropdownTrain}>\n                  <Dropdown.Item>\n                    <Link\n                      to={\"/addtrainer/\" + currentManager.id}\n                      className=\"nav-link\"\n                    >\n                      Add Trainer\n                    </Link>\n                  </Dropdown.Item>\n                  <DropdownItem>\n\n                    <Link\n                      to={\"/showtrainer/\" + currentManager.id}\n                      className=\"nav-link\"\n                    >\n                      Show Trainer\n                    </Link>\n                  </DropdownItem>\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n          {\n            showAdminBoard && (\n              <Dropdown\n                onMouseLeave={() => setShowDropdownWor(false)}\n                onMouseOver={() => setShowDropdownWor(true)}\n                style={{ width: \"166px\" }}\n              >\n                <Dropdown.Toggle className=\"main-style\" id=\"dropdown-basic\">\n                  Workout\n                </Dropdown.Toggle>\n                <Dropdown.Menu show={showDropdownWor}>\n                  <Dropdown.Item>\n                    <Link to={\"/addworkout\"} className=\"nav-link\">\n                      Add Workout\n                    </Link>\n                  </Dropdown.Item>\n                  <DropdownItem>\n\n                    <Link to={\"/showworkout\"} className=\"nav-link\">\n                      Show Workout\n                    </Link>\n                  </DropdownItem>\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n          {\n            currentManager && (\n              <Dropdown\n                onMouseLeave={() => setShowDropdownEquip(false)}\n                onMouseOver={() => setShowDropdownEquip(true)}\n                style={{ width: \"166px\" }}\n              >\n                <Dropdown.Toggle className=\"main-style\" id=\"dropdown-basic\">\n                  Equipment\n                </Dropdown.Toggle>\n                <Dropdown.Menu show={showDropdownEquip}>\n                  <Dropdown.Item>\n                    <Link\n                      to={\"/addequipment/\" + currentManager.id}\n                      className=\"nav-link\"\n                    >\n                      Add Equipment\n                    </Link>\n                  </Dropdown.Item>\n                  <DropdownItem>\n\n                    <Link\n                      to={\"/showequipment/\" + currentManager.id}\n                      className=\"nav-link\"\n                    >\n                      Show Equipment\n                    </Link>\n                  </DropdownItem>\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n          {\n            showAdminBoard && (\n              <Dropdown\n                onMouseLeave={() => setShowDropdownBranch(false)}\n                onMouseOver={() => setShowDropdownBranch(true)}\n                style={{ width: \"166px\" }}\n              >\n                <Dropdown.Toggle className=\"main-style\" id=\"dropdown-basic\">\n                  Branch\n                </Dropdown.Toggle>\n                <Dropdown.Menu show={showDropdownBranch}>\n                  <Dropdown.Item>\n                    <Link to={\"/addbranch\"} className=\"nav-link\">\n                      Add Branch\n                    </Link>\n                  </Dropdown.Item>\n                  <DropdownItem>\n\n                    <Link to={\"/showbranch\"} className=\"nav-link\">\n                      Show Branches\n                    </Link>\n                  </DropdownItem>\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n\n\n        </div>\n\n        {currentManager || showAdminBoard ? (\n          <div className=\"navbar-nav ml-auto\">\n            {\n              //   <li className=\"nav-item\">\n              //   <Link to={\"/profile/\"+currentManager.id} className=\"nav-link\">\n              //     {currentManager.id}\n              //   </Link>\n              // </li>\n            }\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                LOGOUT\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                LOGIN\n              </Link>\n            </li>\n\n            {\n              //   <li className=\"nav-item\">\n              //   <Link to={\"/register\"} className=\"nav-link\">\n              //     Sign Up\n              //   </Link>\n              // </li>\n            }\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/profile/:id\" element={<Profile />} />\n          <Route path=\"/user\" element={<BoardUser />} />\n          <Route path=\"/mod\" element={<BoardModerator />} />\n          <Route path=\"/admin\" element={<BoardAdmin />} />\n          <Route path=\"/addmember/:id\" element={<AddMember />} />\n          <Route path=\"/editmember/:Mem_ID\" element={<EditMember />} />\n          <Route path=\"/payment/:id\" element={<Payment />} />\n          <Route path=\"showpayment/:id\" element={<ShowPayment />} />\n          <Route path=\"addequipment/:id\" element={<AddEquipment />} />\n          <Route path=\"showequipment/:id\" element={<ShowEquipment />} />\n          <Route path=\"addtrainer/:id\" element={<AddTrainer />} />\n          <Route path=\"showtrainer/:id\" element={<ShowTrainer />} />\n          <Route path=\"showworkout\" element={<ShowWorkout />} />\n          <Route path=\"addworkout\" element={<AddWorkout />} />\n          <Route path=\"/showbranch\" element={<ShowBranches />} />\n          <Route path=\"addbranch\" element={<AddBranches />} />\n          <Route path=\"editworkout/:id\" element={<EditWorkout />} />\n          <Route path=\"editbranch/:id\" element={<EditBranch />} />\n          <Route path=\"/showmembers/:id\" element={<ShowMembers />} />\n          <Route path=\"/branch_manager/:id\" element={<EditBranch />} />\n          <Route path=\"edittrainer/:id\" element={<EditTrainer />} />\n          <Route path=\"editequipment/:id\" element={<EditEquipment />} />\n\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth.service.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Register.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Login.js",["154"],"import React, { useState, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport image from \"../Images/login.jpg\"\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = () => {\n  let navigate = useNavigate();\n\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [manager_Email, setManager_Email] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeManager_Email = (e) => {\n    const manager_Email = e.target.value;\n    setManager_Email(manager_Email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(manager_Email, password).then(\n        (response) => {\n          navigate(\"/profile/\" + response.id);\n          // console.log(response);\n\n\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"\">\n      <img src={image} id=\"imgt2\" />\n      {/* <br />\n      <br />\n      <br /> */}\n      <div className=\"card card-container custom\">\n        {/* <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        /> */}\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <br />\n          <label className=\"abc\" htmlFor=\"manager_Email\">Email</label>\n          <Input\n            type=\"text\"\n            className=\"form-control fkk\"\n            name=\"manager_Email\"\n            placeholder=\"Email\"\n            value={manager_Email}\n            onChange={onChangeManager_Email}\n            validations={[required]}\n          />\n\n          <br />\n          <label className=\"abc\" htmlFor=\"password\">Password</label>\n          <Input\n            type=\"password\"\n            className=\" fkk form-control\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={onChangePassword}\n            validations={[required]}\n          />\n          <br />\n          <br />\n          <div className=\"form-group\">\n            <button className=\"butt\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Profile.js",["155"],"import React from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { useParams } from \"react-router-dom\";\n\nconst Profile = () => {\n  const currentManager = AuthService.getCurrentManager();\n  console.log(currentManager);\n  // console.log(useParams);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        \n          <h3>Branch_Name: <strong>{currentManager.branch.Branch_Name}</strong></h3>\n      \n      </header>\n      \n      {\n      //   <p>\n      //   <strong>Token:</strong> {currentManager.accessToken.substring(0, 20)} ...{\" \"}\n      //   {currentManager.accessToken.substr(currentManager.accessToken.length - 20)}\n      // </p>\n    }\n      {\n      //   <p>\n      //   <strong>Id:</strong> {currentManager.id}\n      // </p>\n      // <p>\n      //   <strong>Email:</strong> {currentManager.email}\n      // </p>\n    }\n    { \n      //  <ul>\n      //   {currentManager.roles &&\n      //     currentManager.roles.map((role, index) => <li key={index}>{role}</li>)}\n      // </ul>\n    }\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardUser.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardModerator.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Home.js",["156","157","158","159","160","161","162"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport Typewriter from \"typewriter-effect\";\nimport TypeWriterEffect from 'react-typewriter-effect';\nimport sample from \"../Videos/ropes.mp4\"\nconst Home = () => {\n  //   const particlesInit = async (main) => {\n  //   console.log(main);\n\n  //   // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  //   // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n  //   // starting from v2 you can add only the features you need reducing the bundle size\n  //   await loadFull(main);\n  // };\n\n  // const particlesLoaded = (container) => {\n  //   console.log(container);\n  //};\n  return (\n    <div >\n      <video id=\"video\" className='videoTag' autoPlay loop muted fluid>\n        <source src={sample} type='video/mp4' />\n      </video>\n      <TypeWriterEffect\n        textStyle={{\n          fontFamily: 'Montserrat',\n          color: '#4a210a',\n          fontWeight: 'Bold',\n          fontSize: '3em',\n        }}\n        startDelay={500}\n        cursorColor=\"#3F3D56\"\n        multiText={[\n          ' IF YOU DON\\'T KNOW WHERE YOU ARE GOING, YOU WILL WIND UP SOMEWHERE ELSE. -YOGI BERRA',\n\n        ]}\n        multiTextDelay={1000}\n        typeSpeed={80}\n      />\n    </div>\n\n  )\n}\n\nexport default Home;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardAdmin.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/common/EventBus.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/AddMember.js",["163","164"],"import React, { useState } from \"react\";\nimport MemberDataService from \"../../services/ManagerService\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Member.css\";\nimport image from \"../../Images/wp4377350-man-fitness-wallpapers.jpg\"\nimport sample from \"../../Videos/pexels-tima-miroshnichenko-6388436.mp4\"\nimport { Card } from \"react-bootstrap\";\nconst AddMember = () => {\n  const { id } = useParams();\n  const initialMemberState = {\n    Mem_ID: null,\n    Mem_Name: \"\",\n    Mem_Weight: 0,\n    Mem_Height: 0,\n    Age: 0,\n    Gender: \"\",\n    Blood_Type: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Emer_Name: \"\",\n    Emer_Mobile: 0\n  };\n  const [member, setMember] = useState(initialMemberState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setMember({ ...member, [name]: value });\n  };\n\n  const saveMember = () => {\n    var data = {\n      Mem_Name: member.Mem_Name,\n      Mem_Weight: member.Mem_Weight,\n      Mem_Height: member.Mem_Height,\n      Age: member.Age,\n      Gender: member.Gender,\n      Blood_Type: member.Blood_Type,\n      Mobile_Number: member.Mobile_Number,\n      Address: member.Address,\n      Emer_Name: member.Emer_Name,\n      Emer_Mobile: member.Emer_Mobile\n    };\n\n    MemberDataService.create(id, data)\n      .then(response => {\n        setMember({\n          Mem_ID: response.data.Mem_ID,\n          Mem_Name: response.data.Mem_Name,\n          Mem_Weight: response.data.Mem_Weight,\n          Mem_Height: response.data.Mem_Height,\n          Age: response.data.Age,\n          Gender: response.data.Gender,\n          Blood_Type: response.data.Blood_Type,\n          Mobile_Number: response.data.Mobile_Number,\n          Address: response.data.Address,\n          Emer_Name: response.data.Emer_Name,\n          Emer_Mobile: response.data.Emer_Mobile\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newMember = () => {\n    setMember(initialMemberState);\n    setSubmitted(false);\n  };\n\n  return (\n\n    <div className=\"member-submit-form\" id=\"member\" >\n      <img src={image} id=\"imgt\" />\n      <Card style={{ height: '60rem', width: '44rem', marginBlockStart: '0rem', backgroundColor: 'black', textAlign: 'center', alignContent: 'center', alignItems: 'center', top: '0' }}>\n        {submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={newMember}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <br />\n              <br />\n              <label className=\"lab\" htmlFor=\"Mem_Name\">Mem_Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"title\"\n                required\n                size=\"20\"\n                value={member.Mem_Name} ß\n                onChange={handleInputChange}\n                name=\"Mem_Name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Mem_Weight\">Mem_Weight</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Mem_Weight\"\n                required\n                value={member.Mem_Weight}\n                onChange={handleInputChange}\n                name=\"Mem_Weight\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Mem_Height\">Mem_Height</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Mem_Height\"\n                required\n                value={member.Mem_Height}\n                onChange={handleInputChange}\n                name=\"Mem_Height\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Age\">Age</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Age\"\n                required\n                value={member.Age}\n                onChange={handleInputChange}\n                name=\"Age\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Gender\">Gender</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Gender\"\n                required\n                value={member.Gender}\n                onChange={handleInputChange}\n                name=\"Gender\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Blood_Type\">Blood_Type</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Blood_Type\"\n                required\n                value={member.Blood_Type}\n                onChange={handleInputChange}\n                name=\"Blood_Type\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Mobile_Number\">Mobile_Number</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Mobile_Number\"\n                required\n                value={member.Mobile_Number}\n                onChange={handleInputChange}\n                name=\"Mobile_Number\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Address\"\n                required\n                value={member.Address}\n                onChange={handleInputChange}\n                name=\"Address\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Emer_Name\">Emer_Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Emer_Name\"\n                required\n                value={member.Emer_Name}\n                onChange={handleInputChange}\n                name=\"Emer_Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Emer_Mobile\"\n                required\n                value={member.Emer_Mobile}\n                onChange={handleInputChange}\n                name=\"Emer_Mobile\"\n              />\n            </div>\n            <br />\n            <button onClick={saveMember} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default AddMember;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment/ShowPayment.js",["165","166","167","168","169","170","171","172","173"],"import React, { useState, useEffect } from \"react\";\nimport PaymentService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport image from \"../../Images/show_payment.jpg\"\n\nconst PaymentList = () => {\n  const { id } = useParams();\n  const [payment, setPayment] = useState([]);\n  const [currentPayment, setCurrentPayment] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrievePayments();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrievePayments = () => {\n    PaymentService.showPayment(id)\n      .then(response => {\n        setPayment(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrievePayments();\n    setCurrentPayment(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActivePayment = (payment, index) => {\n    setCurrentPayment(payment);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllPayments = () => {\n  //     PaymentDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     PaymentDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setPayment(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(payment)\n  return (\n    <div className=\"list row\" align=\"center\">\n      {\n        <img src={image} id=\"imgt_show_payment\" />\n        // <div className=\"\">\n        //   <div className=\"input-group mb-3\">\n        //     <input\n        //       type=\"text\"\n        //       className=\"form-control\"\n        //       placeholder=\"Search by Mem_Name\"\n        //     //value={searchMem_Name}\n        //     //onChange={onChangeSearchMem_Name}\n        //     />\n        //     {\n        //       //       <div className=\"input-group-append\">\n        //       //     <button\n        //       //       className=\"btn btn-outline-secondary\"\n        //       //       type=\"button\"\n        //       //       onClick={findByMem_Name}\n        //       //     >\n        //       //       Search\n        //       //     </button>\n        //       //   </div>\n        //     }\n        //   </div>\n        // </div>\n      }\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <h4 className=\"lab\">Payments List</h4>\n        <br />\n        {/* khushil working */}\n\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ backgroundColor: \"black\", opacity: \"0.7\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1rem' }}>\n          <thead>\n            <tr textAlign=\"center\" vertical-align=\"middle\">\n\n              <th>ID</th>\n              <th>Description</th>\n              <th>Amount</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Member ID</th>\n              <th>Workout ID</th>\n            </tr>\n          </thead>\n\n          {payment.map((payment, index) => (\n            <tr>\n              <td>{payment.Payment_ID}</td>\n              <td>{payment.Payment_Desc}</td>\n              <td>{payment.Payment_Amt}</td>\n              <td>{payment.Payment_Date}</td>\n              <td>{payment.Payment_Time}</td>\n              <td>{payment.Member_ID}</td>\n              <td>{payment.Workout_ID}</td>\n\n\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {payment &&\n            payment.map((payment, index) => (\n              <li\n                className={\n                  \"list-group-item \"\n                }\n\n\n                key={index}\n              >\n                {payment.Payment_ID}                  {payment.Payment_Desc}\n              </li>\n\n\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllPayments}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentPayment ? (\n        //       <div>\n        //         <h4>Payments</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentPayment.Payment_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/editpayment/\" + currentPayment.Payment_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Payment...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div>\n  );\n};\n\nexport default PaymentList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/ShowMembers.js",["174","175","176","177","178","179","180"],"import React, { useState, useEffect } from \"react\";\nimport ManagerService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Table } from \"react-bootstrap\";\nimport \"./Member.css\";\nimport image from \"../../Images/show_members.jpg\"\nconst MemberList = () => {\n  const { id } = useParams();\n  const [member, setMember] = useState([]);\n  const [currentMember, setCurrentMember] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveMembers();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveMembers = () => {\n    ManagerService.getAll(id)\n      .then(response => {\n        setMember(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveMembers();\n    setCurrentMember(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveMember = (member, index) => {\n    setCurrentMember(member);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllMembers = () => {\n  //     MemberDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     MemberDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setMember(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  const deleteMember = (Mem_ID) => {\n    console.log(Mem_ID);\n    ManagerService.removeMember(Mem_ID)\n      .then(response => {\n        console.log(response.data);\n        refreshList();\n      })\n  }\n\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          {\n            //  <input\n            //   type=\"text\"\n            //   className=\"form-control\"\n            //   placeholder=\"Search by Mem_Name\"\n            //   value={searchMem_Name}\n            //   onChange={onChangeSearchMem_Name}\n            // />\n          }\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\" textAlign='center'>\n        <br />\n        <h4 className=\"lab\">Members List</h4>\n        <br />\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.7\", textAlign: \"center\", borderRadius: '20px', verticalAlign: 'center' }}>\n          <thead>\n            <tr>\n\n              <th>ID</th>\n              <th>Name</th>\n              <th>Phone</th>\n              <th>Weight</th>\n              <th>Height</th>\n              <th>Age</th>\n              <th>Gender</th>\n              <th>Blood Group</th>\n              <th>Address</th>\n              <th>Emergency Name</th>\n              <th>Emergency Mobile</th>\n              <th>Update/Delete</th>\n            </tr>\n          </thead>\n          {member &&\n            member.map((member, index) => (\n              <tr>\n                <td>{member.Mem_ID}</td>\n                <td>{member.Mem_Name}</td>\n                <td>{member.Mobile_Number}</td>\n                <td>{member.Mem_Weight}</td>\n                <td>{member.Mem_Height}</td>\n                <td>{member.Age}</td>\n                <td>{member.Gender}</td>\n                <td>{member.Blood_Type}</td>\n                <td>{member.Address}</td>\n                <td>{member.Emer_Name}</td>\n                <td>{member.Emer_Mobile}</td>\n                <td align=\"right\"><button className=\"btn-danger pqy\" align=\"left\" onClick={() => { deleteMember(member.Mem_ID) }}>Delete</button><Link style={{ textAlign: \"left\" }}\n                  to={\"/editmember/\" + member.Mem_ID}\n                  className=\"badge badge-warning pqy\">\n                  Edit\n                </Link></td>\n              </tr>\n            ))}\n        </Table>\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllMembers}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //   <div className=\"col-md-6\">\n        //   {currentMember ? (\n        //     <div>\n        //       <h4>Members</h4>\n        //       <div>\n        //         <label>\n        //           <strong>Mem_Name:</strong>\n        //         </label>{\" \"}\n\n        //         {currentMember.Mem_ID}\n        //       </div>\n        //       <Link\n        //         to={\"/editmember/\" + currentMember.Mem_ID}\n        //         className=\"badge badge-warning\"\n        //       >\n        //         Edit\n        //       </Link>\n        //     </div>\n        //   ) : (\n        //     <div>\n        //       <br />\n        //       <p>Please click on a Member...</p>\n        //     </div>\n        //   )}\n        // </div>\n      }\n    </div>\n  );\n};\n\nexport default MemberList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment/Payment.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/Member.js",["181","182"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ManagerDataService from \"../../services/ManagerService\";\n\nconst Member = props => {\n    \n    console.log(useParams());\n  const { Mem_ID } = useParams();\n//  ManagerDataService.get(Mem_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(Mem_ID);\n  let navigate = useNavigate();\n  // console.log(Mem_ID);\n  const initialMemberState = {\n    Mem_ID: null,\n    Mem_Name: \"\",\n    Mem_Weight: 0,\n    Mem_Height: 0,\n    Age: 0,\n    Gender: \"\",\n    Blood_Type: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Emer_Name: \"\",\n    Emer_Mobile: 0\n  };\n  const [currentMember, setCurrentMember] = useState(initialMemberState);\n  const [message, setMessage] = useState(\"\");\n\n  const getMember = Mem_ID => {\n    ManagerDataService.get(Mem_ID)\n      .then(response => {\n        console.log(response.data);\n        setCurrentMember(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (Mem_ID)\n      getMember(Mem_ID);\n  }, [Mem_ID]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentMember({ ...currentMember, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      Mem_ID: currentMember.Mem_ID,\n      Mem_Name: currentMember.Mem_Name,\n      Mem_Weight: currentMember.Mem_Weight,\n      Mem_Height: currentMember.Mem_Height,\n      Age: currentMember.Age,\n      Gender: currentMember.Gender,\n      Blood_Type: currentMember.Blood_Type,\n      Mobile_Number: currentMember.Mobile_Number,\n      Address: currentMember.Address,\n      Emer_Name: currentMember.Emer_Name,\n      Emer_Mobile: currentMember.Emer_Mobile\n\n    };\n\n    ManagerDataService.update(currentMember.Mem_ID, data)\n      .then(response => {\n        setCurrentMember({ ...currentMember, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateMember = () => {\n    ManagerDataService.update(currentMember.Mem_ID, currentMember)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Member was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteMember = () => {\n//     ManagerDataService.remove(currentMember.Mem_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/member\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n\n  return (\n    <div>\n      {currentMember ? (\n        <div className=\"edit-form\">\n          <h4>Member</h4>\n          <form>\n\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Mem_Name\">Mem_Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={currentMember.Mem_Name}\n                onChange={handleInputChange}\n                name=\"Mem_Name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Mem_Weight\">Mem_Weight</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Mem_Weight\"\n                required\n                value={currentMember.Mem_Weight}\n                onChange={handleInputChange}\n                name=\"Mem_Weight\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Mem_Height\">Mem_Height</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Mem_Height\"\n                required\n                value={currentMember.Mem_Height}\n                onChange={handleInputChange}\n                name=\"Mem_Height\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Age\">Age</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Age\"\n                required\n                value={currentMember.Age}\n                onChange={handleInputChange}\n                name=\"Age\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Gender\">Gender</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Gender\"\n                required\n                value={currentMember.Gender}\n                onChange={handleInputChange}\n                name=\"Gender\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Blood_Type\">Blood_Type</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Blood_Type\"\n                required\n                value={currentMember.Blood_Type}\n                onChange={handleInputChange}\n                name=\"Blood_Type\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Mobile_Number\"\n                required\n                value={currentMember.Mobile_Number}\n                onChange={handleInputChange}\n                name=\"Mobile_Number\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Address\"\n                required\n                value={currentMember.Address}\n                onChange={handleInputChange}\n                name=\"Address\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Emer_Name\">Emer_Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Emer_Name\"\n                required\n                value={currentMember.Emer_Name}\n                onChange={handleInputChange}\n                name=\"Emer_Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Emer_Mobile\"\n                required\n                value={currentMember.Emer_Mobile}\n                onChange={handleInputChange}\n                name=\"Emer_Mobile\"\n              />\n            </div>\n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteMember}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateMember}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Member...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Member;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/AddEquipment.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/AddWorkout.js",["183"],"import React, { useState } from \"react\";\nimport WorkoutService from \"../../services/ManagerService\";\nimport { useParams } from \"react-router-dom\";\n\nconst AddWorkout = () => {\n    \n  const initialWorkoutState = {\n    Workout_ID:null,\n    Workout_Name:\"\",\n    Workout_DietChart:\"\",\n    Working_Duration:\"\"\n  };\n  const [workout, setWorkout] = useState(initialWorkoutState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setWorkout({ ...workout, [name]: value });\n  };\n\n  const saveWorkout = () => {\n    var data = {\n      Workout_Name:workout.Workout_Name,\n      Workout_DietChart:workout.Workout_DietChart,\n      Working_Duration:workout.Working_Duration\n    };\n\n    WorkoutService.AddWorkout(data)\n      .then(response => {\n        setWorkout({\n            Workout_ID:response.data.Workout_ID,\n            Workout_Name:response.data.Workout_Name,\n            Workout_DietChart:response.data.Workout_DietChart,\n            Working_Duration:response.data.Working_Duration\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newWorkout = () => {\n    setWorkout(initialWorkoutState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newWorkout}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Workout_Name\">Workout_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={workout.Workout_Name}\n              onChange={handleInputChange}\n              name=\"Workout_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Workout_DietChart\"\n              required\n              value={workout.Workout_DietChart}\n              onChange={handleInputChange}\n              name=\"Workout_DietChart\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Working_Duration\">Working_Duration</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Working_Duration\"\n              required\n              value={workout.Working_Duration}\n              onChange={handleInputChange}\n              name=\"Working_Duration\"\n            />\n          </div>\n          {\n        //       <div className=\"form-group\">\n        //     <label htmlFor=\"Workout_Amt\">Workout_Amt</label>\n        //     <input\n        //       type=\"number\"\n        //       className=\"form-control\"\n        //       id=\"Workout_Amt\"\n        //       required\n        //       value={workout.Workout_Amt}\n        //       onChange={handleInputChange}\n        //       name=\"Workout_Amt\"\n        //     />\n        //   </div> \n         }\n          {\n        //       <div className=\"form-group\">\n        //     <label htmlFor=\"Member_ID\">Member_ID</label>\n        //     <input\n        //       type=\"number\"\n        //       className=\"form-control\"\n        //       id=\"Member_ID\"\n        //       required\n        //       value={workout.Member_ID}\n        //       onChange={handleInputChange}\n        //       name=\"Member_ID\"\n        //     />\n        //   </div>\n        //   <div className=\"form-group\">\n        //     <label htmlFor=\"Workout_Name\">Workout_Name</label>\n        //     <input\n        //       type=\"text\"\n        //       className=\"form-control\"\n        //       id=\"Workout_Name\"\n        //       required\n        //       value={workout.Workout_Name}\n        //       onChange={handleInputChange}\n        //       name=\"Workout_Name\"\n        //     />\n        //   </div>\n        }      \n          <button onClick={saveWorkout} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddWorkout;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/EditEquipment.js",["184","185"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport EquipmentService from \"../../services/ManagerService\";\n\nconst Equipment = props => {\n    \n    console.log(useParams());\n  const {id } = useParams();\n//  ManagerDataService.get(Equipment_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Equipment_ID);\n  const initialEquipmentState = {\n    Equipment_ID:null,\n    Equipment_Name:\"\",\n    Equipment_Kind:\"\",\n    Working_Status:\"\",\n    Exercise:\"\",\n  };\n  const [currentEquipment, setCurrentEquipment] = useState(initialEquipmentState);\n  const [message, setMessage] = useState(\"\");\n\n  const getEquipment = id => {\n    EquipmentService.getEquipment(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentEquipment(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getEquipment(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentEquipment({ ...currentEquipment, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n        Equipment_ID:currentEquipment.Equipment_ID,\n        Equipment_Name:currentEquipment.Equipment_Name,\n        Equipment_Kind:currentEquipment.Equipment_Kind,\n        Working_Status:currentEquipment.Working_Status,\n        Exercise:currentEquipment.Exercise\n\n    };\n\n    EquipmentService.updateEquipment(currentEquipment.Equipment_ID, data)\n      .then(response => {\n        setCurrentEquipment({ ...currentEquipment, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateEquipment = () => {\n    EquipmentService.updateEquipment(currentEquipment.Equipment_ID, currentEquipment)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Equipment was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteEquipment = () => {\n//     ManagerDataService.remove(currentEquipment.Equipment_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/equipment\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n\n  return (\n    <div>\n      {currentEquipment ? (\n        <div className=\"edit-form\">\n          <h4>Equipment</h4>\n          <form>\n\n\n          <div className=\"form-group\">\n          <label htmlFor=\"Equipment_Name\">Equipment_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={currentEquipment.Equipment_Name}\n            onChange={handleInputChange}\n            name=\"Equipment_Name\"\n          />\n        </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Equipment_Kind\">Equipment_Kind</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Equipment_Kind\"\n                required\n                value={currentEquipment.Equipment_Kind}\n                onChange={handleInputChange}\n                name=\"Equipment_Kind\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Working_Status\">Working_Status</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Working_Status\"\n                required\n                value={currentEquipment.Working_Status}\n                onChange={handleInputChange}\n                name=\"Working_Status\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Exercise\">Exercise</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Exercise\"\n                required\n                value={currentEquipment.Exercise}\n                onChange={handleInputChange}\n                name=\"Exercise\"\n              />\n            </div>\n            \n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteEquipment}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateEquipment}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Equipment...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Equipment;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/EditWorkout.js",["186","187"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport WorkoutService from \"../../services/ManagerService\";\n\nconst Workout = props => {\n    \n    console.log(useParams());\n  const { id } = useParams();\n//  WorkoutService.get(Workout_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Workout_ID);\n  const initialWorkoutState = {\n    Workout_ID:null,\n    Workout_Name:\"\",\n    Workout_DietChart:\"\",\n    Working_Duration:\"\"\n  };\n  const [currentWorkout, setCurrentWorkout] = useState(initialWorkoutState);\n  const [message, setMessage] = useState(\"\");\n\n  const getWorkout = id => {\n    WorkoutService.getWorkout(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentWorkout(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getWorkout(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentWorkout({ ...currentWorkout, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n        Workout_Name:currentWorkout.Workout_Name,\n        Workout_DietChart:currentWorkout.Workout_DietChart,\n        Working_Duration:currentWorkout.Working_Duration\n\n    };\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, data)\n      .then(response => {\n        setCurrentWorkout({ ...currentWorkout, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateWorkout = () => {\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, currentWorkout)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Workout was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteWorkout = () => {\n//     WorkoutService.remove(currentWorkout.Workout_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/workout\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\nconsole.log(currentWorkout);\n  return (\n    <div>\n      {currentWorkout ? (\n        <div className=\"edit-form\">\n          <h4>Workout</h4>\n          <form>\n\n\n          <div className=\"form-group\">\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={currentWorkout.Workout_Name}\n            onChange={handleInputChange}\n            name=\"Workout_Name\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n        <label htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"Workout_DietChart\"\n          required\n          value={currentWorkout.Workout_DietChart}\n          onChange={handleInputChange}\n          name=\"Workout_DietChart\"\n        />\n      </div>\n      <div className=\"form-group\">\n      <label htmlFor=\"Working_Duration\">Working_Duration</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        id=\"Working_Duration\"\n        required\n        value={currentWorkout.Working_Duration}\n        onChange={handleInputChange}\n        name=\"Working_Duration\"\n      />\n    </div>\n           \n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteWorkout}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateWorkout}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Workout...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Workout;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/ShowWorkout.js",["188","189","190","191","192"],"import React, { useState, useEffect } from \"react\";\nimport WorkoutService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\n\nconst WorkoutList = () => {\n\n  const [workout, setWorkout] = useState([]);\n  const [currentWorkout, setCurrentWorkout] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveWorkouts();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveWorkouts = () => {\n    WorkoutService.getAllWorkout()\n      .then(response => {\n        setWorkout(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveWorkouts();\n    setCurrentWorkout(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveWorkout = (workout, index) => {\n    setCurrentWorkout(workout);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllWorkouts = () => {\n  //     WorkoutDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     WorkoutDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setWorkout(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Mem_Name\"\n            value={searchMem_Name}\n            onChange={onChangeSearchMem_Name}\n          />\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Workouts List</h4>\n\n        {/* khushil working */}\n\n        <Table striped bordered hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1rem' }}>\n          <thead>\n            <tr>\n\n              <th>Workout ID</th>\n              <th>Workout Name</th>\n              <th>Diet Chart</th>\n              <th>Duration</th>\n\n            </tr>\n          </thead>\n\n          {workout.map((workout, index) => (\n            <tr>\n              <td>{workout.Workout_ID}</td>\n              <td>{workout.Workout_Name}</td>\n              <td>{workout.Diet_Chart}</td>\n              <td>{workout.Duration}</td>\n\n              <td>\n                <Link\n                  to={\"/workout/edit/\" + workout.Workout_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {workout &&\n            workout.map((workout, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => {\n                  setActiveWorkout(workout, index)\n                  console.log(workout.Workout_Name)\n                }\n                }\n                key={index}\n              >\n                {workout.Workout_Name}\n              </li>\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllWorkouts}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //   <div className=\"col-md-6\">\n        //   {currentWorkout ? (\n        //     <div>\n        //       <h4>Workouts</h4>\n        //       <div>\n        //         <label>\n        //           <strong>Mem_Name:</strong>\n        //         </label>{\" \"}\n\n        //         {currentWorkout.Workout_ID}\n        //       </div>\n        //       <Link\n        //         to={\"/editworkout/\" + currentWorkout.Workout_ID}\n        //         className=\"badge badge-warning\"\n        //       >\n        //         Edit\n        //       </Link>\n        //     </div>\n        //   ) : (\n        //     <div>\n        //       <br />\n        //       <p>Please click on a Workout...</p>\n        //     </div>\n        //   )}\n        // </div>\n      }\n    </div>\n  );\n};\n\nexport default WorkoutList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/ShowEquipment.js",["193","194","195","196","197","198","199","200"],"import React, { useState, useEffect } from \"react\";\nimport EquipmentService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport image from \"../../Images/show_equipment.jpg\"\nconst EquipmentList = () => {\n  const { id } = useParams();\n  const [equipment, setEquipment] = useState([]);\n  const [currentEquipment, setCurrentEquipment] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveEquipments();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveEquipments = () => {\n    EquipmentService.showEquipment(id)\n      .then(response => {\n        setEquipment(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveEquipments();\n    setCurrentEquipment(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveEquipment = (equipment, index) => {\n    setCurrentEquipment(equipment);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllEquipments = () => {\n  //     EquipmentDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     EquipmentDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setEquipment(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(equipment)\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <br />\n        <br />\n        <br />\n        <h4 className=\"lab\">Equipments List</h4>\n        <br />\n        {/* khushil working */}\n\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1.5rem' }}>\n          <thead>\n            <tr>\n\n              <th>Equipment ID</th>\n              <th>Equipment Name</th>\n              <th>Equipment Kind</th>\n              <th>Working Status</th>\n              <th>Exercise</th>\n\n              <th>Edit</th>\n\n            </tr>\n          </thead>\n\n          {equipment.map((equipment, index) => (\n            <tr>\n              <td>{equipment.Equipment_ID}</td>\n              <td>{equipment.Equipment_Name}</td>\n              <td>{equipment.Equipment_Kind}</td>\n              <td>{equipment.Working_Status}</td>\n              <td>{equipment.Exercise}</td>\n\n              <td>\n                <Link\n                  to={\"/editequipment/\" + equipment.Equipment_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {equipment &&\n            equipment.map((equipment, index) => (\n              <li\n                className={\n                  \"list-group-item \"\n                }\n                onClick={() => {\n                  setActiveEquipment(equipment, index)\n                }\n                }\n                key={index}\n              >\n                {equipment.Equipment_ID}                  {equipment.Equipment_Desc}\n              </li>\n\n\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllEquipments}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentEquipment ? (\n        //       <div>\n        //         <h4>Equipments</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentEquipment.Equipment_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/editequipment/\" + currentEquipment.Equipment_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Equipment...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div >\n  );\n};\n\nexport default EquipmentList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/AddBranch.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/EditBranch.js",["201","202"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport BranchServices from \"../../services/ManagerService\";\n\nconst Branch = props => {\n    \n    console.log(useParams());\n  const { id } = useParams();\n//  BranchServices.get(Branch_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Branch_ID);\n  const initialBranchState = {\n    Branch_ID:null,\n    Branch_Name: \"\",\n    Branch_Location: \"\",\n    Branch_Email: \"\",\n    Branch_Phone_Number: 0,\n    Manager_Name: \"\",\n    Gender: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Manager_Email: \"\",\n    Password: \"\"\n  };\n  const [currentBranch, setCurrentBranch] = useState(initialBranchState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBranch = id => {\n    BranchServices.getBranch(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentBranch(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getBranch(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentBranch({ ...currentBranch, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n        Branch_Name:currentBranch.Branch_Name,\n        Branch_DietChart:currentBranch.Branch_DietChart,\n        Working_Duration:currentBranch.Working_Duration\n\n    };\n\n    BranchServices.updateBranch(currentBranch.Branch_ID, data)\n      .then(response => {\n        setCurrentBranch({ ...currentBranch, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateBranch = () => {\n    BranchServices.updateBranch(currentBranch.Branch_ID, currentBranch)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Branch was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteBranch = () => {\n//     BranchServices.remove(currentBranch.Branch_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/branch\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\nconsole.log(currentBranch);\n  return (\n    <div>\n      {currentBranch ? (\n        <div className=\"edit-form\">\n          <h4>Branch</h4>\n          <form>\n\n\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Name\">Branch_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={currentBranch.Branch_Name}\n              onChange={handleInputChange}\n              name=\"Branch_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Location\">Branch_Location</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Branch_Location\"\n              required\n              value={currentBranch.Branch_Location}\n              onChange={handleInputChange}\n              name=\"Branch_Location\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Email\">Branch_Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Branch_Email\"\n              required\n              value={currentBranch.Branch_Email}\n              onChange={handleInputChange}\n              name=\"Branch_Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Phone_Number\">Branch_Phone_Number</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Branch_Phone_Number\"\n              required\n              value={currentBranch.Branch_Phone_Number}\n              onChange={handleInputChange}\n              name=\"Branch_Phone_Number\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Manager_Name\">Manager_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Manager_Name\"\n              required\n              value={currentBranch.Manager_Name}\n              onChange={handleInputChange}\n              name=\"Manager_Name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Gender\">Gender</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Gender\"\n              required\n              value={currentBranch.Gender}\n              onChange={handleInputChange}\n              name=\"Gender\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Mobile_Number\"\n              required\n              value={currentBranch.Mobile_Number}\n              onChange={handleInputChange}\n              name=\"Mobile_Number\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Address\">Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Address\"\n              required\n              value={currentBranch.Address}\n              onChange={handleInputChange}\n              name=\"Address\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Manager_Email\">Manager_Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Manager_Email\"\n              required\n              value={currentBranch.Manager_Email}\n              onChange={handleInputChange}\n              name=\"Manager_Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Password\">Password</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Password\"\n              required\n              value={currentBranch.Password}\n              onChange={handleInputChange}\n              name=\"Password\"\n            />\n          </div>\n           \n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteBranch}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateBranch}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Branch...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Branch;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/ShowBranches.js",["203","204","205","206"],"import React, { useState, useEffect } from \"react\";\nimport BranchServices from \"../../services/ManagerService\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from 'react-bootstrap';\n\nconst Branch_ManagerList = () => {\n  const [branch_manager, setBranch_Manager] = useState([]);\n  const [currentBranch_Manager, setCurrentBranch_Manager] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchBranch_Name, setSearchBranch_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveBranch_Managers();\n  }, []);\n\n  const onChangeSearchBranch_Name = e => {\n    const searchBranch_Name = e.target.value;\n    setSearchBranch_Name(searchBranch_Name);\n  };\n\n  const retrieveBranch_Managers = () => {\n    BranchServices.getAllBranches()\n      .then(response => {\n        setBranch_Manager(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveBranch_Managers();\n    setCurrentBranch_Manager(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveBranch_Manager = (branch_manager, index) => {\n    setCurrentBranch_Manager(branch_manager);\n    setCurrentIndex(index);\n  };\n\n  const removeAllBranch_Managers = () => {\n    BranchServices.removeAll()\n      .then(response => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByBranch_Name = () => {\n    BranchServices.findByBranch_Name(searchBranch_Name)\n      .then(response => {\n        setBranch_Manager(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Branch_Name\"\n            value={searchBranch_Name}\n            onChange={onChangeSearchBranch_Name}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByBranch_Name}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Branch_Managers List</h4>\n\n        {/* //khushil working */}\n\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n\n              <th>Branch ID</th>\n              <th>Branch Name</th>\n              <th>Branch Location</th>\n              <th>Branch Email</th>\n              <th>Branch Phone Number</th>\n              <th>Manager-ID</th>\n              <th>Manager Name</th>\n              <th>Manager Mobile Number</th>\n              <th>Manager Email</th>\n              <th>Manager Address</th>\n\n            </tr>\n          </thead>\n\n          {branch_manager.map((branch_manager, index) => (\n            <tr>\n              <td>{branch_manager.Branch_ID}</td>\n              <td>{branch_manager.Branch_Name}</td>\n              <td>{branch_manager.Branch_Location}</td>\n              <td>{branch_manager.Branch_Email}</td>\n              <td>{branch_manager.Branch_Phone_Number}</td>\n              <td>{branch_manager.Manager_ID}</td>\n              <td>{branch_manager.Manager_Name}</td>\n              <td>{branch_manager.Manager_Mobile_Number}</td>\n              <td>{branch_manager.Manager_Email}</td>\n              <td>{branch_manager.Manager_Address}</td>\n\n              <td>\n                <Link\n                  to={\"/branch_manager/\" + branch_manager.Branch_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n        {/* <ul className=\"list-group\">\n          {branch_manager &&\n            branch_manager.map((branch_manager, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => {setActiveBranch_Manager(branch_manager, index)\n                console.log(branch_manager)}\n                }\n                key={index}\n              >\n                {branch_manager.Branch_Name}\n              </li>\n            ))}\n        </ul> */}\n\n        {/* <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllBranch_Managers}\n        >\n          Remove All\n        </button>\n      </div> */}\n        {/* <div className=\"col-md-6\"> */}\n        {/* {currentBranch_Manager ? (\n          <div>\n            <h4>Branch_Managers</h4>\n            <div>\n              <label>\n                <strong>Branch_Name:</strong>\n              </label>{\" \"}\n              {currentBranch_Manager.Branch_Name}\n              {currentBranch_Manager.Branch_ID}\n            </div>\n            <Link\n              to={\"/editbranch/\" + currentBranch_Manager.Branch_ID}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Branch_Manager...</p>\n          </div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Branch_ManagerList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/ShowTrainer.js",["207","208","209","210","211","212","213","214"],"import React, { useState, useEffect } from \"react\";\nimport TrainerService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\nimport image from \"../../Images/pexels-victor-freitas-841130.jpg\"\nconst TrainerList = () => {\n  const { id } = useParams();\n  const [trainer, setTrainer] = useState([]);\n  const [currentTrainer, setCurrentTrainer] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveTrainers();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveTrainers = () => {\n    TrainerService.showTrainer(id)\n      .then(response => {\n        setTrainer(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveTrainers();\n    setCurrentTrainer(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveTrainer = (trainer, index) => {\n    setCurrentTrainer(trainer);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllTrainers = () => {\n  //     TrainerDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     TrainerDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setTrainer(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(trainer)\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Mem_Name\"\n          //value={searchMem_Name}\n          //onChange={onChangeSearchMem_Name}\n          />\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <h4 className=\"lab\">Trainers List</h4>\n        <br />\n        {/* khushil working */}\n\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1rem' }}>\n          <thead>\n            <tr>\n\n              <th>ID</th>\n              <th>Name</th>\n              <th>Gender</th>\n              <th>Blood Group</th>\n              <th>Mobile Number</th>\n              <th>Address</th>\n              <th>Emergency Mobile Number</th>\n              <th>Emergency Name</th>\n              <th>Branch ID</th>\n              <th>Workout ID</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n\n          {trainer.map((trainer, index) => (\n            <tr>\n              <td>{trainer.Trainer_ID}</td>\n              <td>{trainer.Trainer_Name}</td>\n              <td>{trainer.Gender}</td>\n              <td>{trainer.Blood_Type}</td>\n              <td>{trainer.Phone}</td>\n              <td>{trainer.Address}</td>\n              <td>{trainer.Emer_Mobile}</td>\n              <td>{trainer.Emer_Name}</td>\n              <td>{trainer.Branch_ID}</td>\n              <td>{trainer.Workout_ID}</td>\n\n              <td>\n                <Link\n                  to={\"/edittrainer/\" + trainer.Trainer_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {trainer &&\n            trainer.map((trainer, index) => (\n              <li\n                className={\n                  \"list-group-item \" \n                }\n                \n                \n                key={index}\n              >\n                {trainer.Trainer_ID    }                  {trainer.Trainer_Desc}   \n              </li>\n              \n              \n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllTrainers}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentTrainer ? (\n        //       <div>\n        //         <h4>Trainers</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentTrainer.Trainer_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/edittrainer/\" + currentTrainer.Trainer_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Trainer...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div>\n  );\n};\n\nexport default TrainerList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/AddTrainer.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/EditTrainer.js",["215","216"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport TrainerService from \"../../services/ManagerService\";\n\nconst Trainer = props => {\n    \n    console.log(useParams());\n  const {id } = useParams();\n//  ManagerDataService.get(Trainer_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Trainer_ID);\n  const initialTrainerState = {\n    Trainer_ID: null,\n    Trainer_Name: \"\",\n    // Trainer_Weight: 0,\n    // Trainer_Height: 0,\n    // Age: 0,\n    Gender: \"\",\n    Blood_Type: \"\",\n    Phone: 0,\n    Address: \"\",\n    Emer_Name: \"\",\n    Emer_Mobile: 0,\n    Workout_Name:\"\"\n  };\n  const [currentTrainer, setCurrentTrainer] = useState(initialTrainerState);\n  const [message, setMessage] = useState(\"\");\n\n  const getTrainer = id => {\n    TrainerService.getTrainer(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentTrainer(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getTrainer(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentTrainer({ ...currentTrainer, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      Trainer_ID: currentTrainer.Trainer_ID,\n      Trainer_Name: currentTrainer.Trainer_Name,\n      //Mem_Weight: currentTrainer.Mem_Weight,\n      //Mem_Height: currentTrainer.Mem_Height,\n      Age: currentTrainer.Age,\n      Gender: currentTrainer.Gender,\n      Blood_Type: currentTrainer.Blood_Type,\n      Phone: currentTrainer.Phone,\n      Address: currentTrainer.Address,\n      Emer_Name: currentTrainer.Emer_Name,\n      Emer_Mobile: currentTrainer.Emer_Mobile,\n      Workout_Name:currentTrainer.Workout_Name\n\n\n    };\n\n    TrainerService.updateTrainer(currentTrainer.Trainer_ID, data)\n      .then(response => {\n        setCurrentTrainer({ ...currentTrainer, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateTrainer = () => {\n    TrainerService.updateTrainer(currentTrainer.Trainer_ID, currentTrainer)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Trainer was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteTrainer = () => {\n//     ManagerDataService.remove(currentTrainer.Trainer_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/trainer\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n\n  return (\n    <div>\n      {currentTrainer ? (\n        <div className=\"edit-form\">\n          <h4>Trainer</h4>\n          <form>\n\n\n          <div className=\"form-group\">\n          <label htmlFor=\"Trainer_Name\">Trainer_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={currentTrainer.Trainer_Name}\n            onChange={handleInputChange}\n            name=\"Trainer_Name\"\n          />\n        </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Gender\">Gender</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Gender\"\n                required\n                value={currentTrainer.Gender}\n                onChange={handleInputChange}\n                name=\"Gender\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Blood_Type\">Blood_Type</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Blood_Type\"\n                required\n                value={currentTrainer.Blood_Type}\n                onChange={handleInputChange}\n                name=\"Blood_Type\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Phone\">Phone</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Phone\"\n                required\n                value={currentTrainer.Phone}\n                onChange={handleInputChange}\n                name=\"Phone\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Address\"\n                required\n                value={currentTrainer.Address}\n                onChange={handleInputChange}\n                name=\"Address\"\n              />\n            </div>\n            \n            \n            \n            <div className=\"form-group\">\n              <label htmlFor=\"Emer_Name\">Emer_Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Emer_Name\"\n                required\n                value={currentTrainer.Emer_Name}\n                onChange={handleInputChange}\n                name=\"Emer_Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Emer_Mobile\"\n                required\n                value={currentTrainer.Emer_Mobile}\n                onChange={handleInputChange}\n                name=\"Emer_Mobile\"\n              />\n            </div>\n            <div className=\"form-group\">\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"Workout_Name\"\n            required\n            value={currentTrainer.Workout_Name}\n            onChange={handleInputChange}\n            name=\"Workout_Name\"\n          />\n        </div>\n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteTrainer}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateTrainer}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Trainer...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Trainer;\n","/Users/khushil/Project/DBMS_Project/gamma/src/services/user.service.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/services/ManagerService.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/services/auth-header.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":17},{"ruleId":"221","severity":1,"message":"225","line":31,"column":20,"nodeType":"223","messageId":"224","endLine":31,"endColumn":31},{"ruleId":"221","severity":1,"message":"226","line":42,"column":9,"nodeType":"223","messageId":"224","endLine":42,"endColumn":22},{"ruleId":"221","severity":1,"message":"227","line":51,"column":9,"nodeType":"223","messageId":"224","endLine":51,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":75,"column":7,"nodeType":"230","endLine":75,"endColumn":37},{"ruleId":"221","severity":1,"message":"231","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":19},{"ruleId":"221","severity":1,"message":"232","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"233","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":36},{"ruleId":"221","severity":1,"message":"231","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":19},{"ruleId":"221","severity":1,"message":"234","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":4,"column":8,"nodeType":"223","messageId":"224","endLine":4,"endColumn":17},{"ruleId":"221","severity":1,"message":"235","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":18},{"ruleId":"221","severity":1,"message":"236","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":18},{"ruleId":"221","severity":1,"message":"237","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":76,"column":7,"nodeType":"230","endLine":76,"endColumn":36},{"ruleId":"221","severity":1,"message":"238","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":14},{"ruleId":"221","severity":1,"message":"239","line":10,"column":10,"nodeType":"223","messageId":"224","endLine":10,"endColumn":24},{"ruleId":"221","severity":1,"message":"240","line":11,"column":10,"nodeType":"223","messageId":"224","endLine":11,"endColumn":22},{"ruleId":"221","severity":1,"message":"241","line":12,"column":10,"nodeType":"223","messageId":"224","endLine":12,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":16,"column":6,"nodeType":"244","endLine":16,"endColumn":8,"suggestions":"245"},{"ruleId":"221","severity":1,"message":"246","line":18,"column":9,"nodeType":"223","messageId":"224","endLine":18,"endColumn":31},{"ruleId":"221","severity":1,"message":"247","line":34,"column":9,"nodeType":"223","messageId":"224","endLine":34,"endColumn":20},{"ruleId":"221","severity":1,"message":"248","line":40,"column":9,"nodeType":"223","messageId":"224","endLine":40,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":70,"column":9,"nodeType":"230","endLine":70,"endColumn":51},{"ruleId":"221","severity":1,"message":"249","line":10,"column":10,"nodeType":"223","messageId":"224","endLine":10,"endColumn":23},{"ruleId":"221","severity":1,"message":"240","line":11,"column":10,"nodeType":"223","messageId":"224","endLine":11,"endColumn":22},{"ruleId":"221","severity":1,"message":"241","line":12,"column":10,"nodeType":"223","messageId":"224","endLine":12,"endColumn":24},{"ruleId":"242","severity":1,"message":"250","line":16,"column":6,"nodeType":"244","endLine":16,"endColumn":8,"suggestions":"251"},{"ruleId":"221","severity":1,"message":"246","line":18,"column":9,"nodeType":"223","messageId":"224","endLine":18,"endColumn":31},{"ruleId":"221","severity":1,"message":"252","line":40,"column":9,"nodeType":"223","messageId":"224","endLine":40,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":77,"column":7,"nodeType":"230","endLine":77,"endColumn":37},{"ruleId":"221","severity":1,"message":"253","line":16,"column":7,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"254","line":55,"column":9,"nodeType":"223","messageId":"224","endLine":55,"endColumn":24},{"ruleId":"221","severity":1,"message":"231","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":19},{"ruleId":"221","severity":1,"message":"253","line":16,"column":7,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"254","line":49,"column":9,"nodeType":"223","messageId":"224","endLine":49,"endColumn":24},{"ruleId":"221","severity":1,"message":"253","line":16,"column":7,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"254","line":48,"column":9,"nodeType":"223","messageId":"224","endLine":48,"endColumn":24},{"ruleId":"221","severity":1,"message":"231","line":3,"column":16,"nodeType":"223","messageId":"224","endLine":3,"endColumn":25},{"ruleId":"221","severity":1,"message":"255","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":24},{"ruleId":"221","severity":1,"message":"240","line":10,"column":10,"nodeType":"223","messageId":"224","endLine":10,"endColumn":22},{"ruleId":"221","severity":1,"message":"247","line":33,"column":9,"nodeType":"223","messageId":"224","endLine":33,"endColumn":20},{"ruleId":"221","severity":1,"message":"256","line":39,"column":9,"nodeType":"223","messageId":"224","endLine":39,"endColumn":25},{"ruleId":"221","severity":1,"message":"257","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":26},{"ruleId":"221","severity":1,"message":"240","line":10,"column":10,"nodeType":"223","messageId":"224","endLine":10,"endColumn":22},{"ruleId":"221","severity":1,"message":"241","line":11,"column":10,"nodeType":"223","messageId":"224","endLine":11,"endColumn":24},{"ruleId":"242","severity":1,"message":"258","line":15,"column":6,"nodeType":"244","endLine":15,"endColumn":8,"suggestions":"259"},{"ruleId":"221","severity":1,"message":"246","line":17,"column":9,"nodeType":"223","messageId":"224","endLine":17,"endColumn":31},{"ruleId":"221","severity":1,"message":"247","line":33,"column":9,"nodeType":"223","messageId":"224","endLine":33,"endColumn":20},{"ruleId":"221","severity":1,"message":"260","line":39,"column":9,"nodeType":"223","messageId":"224","endLine":39,"endColumn":27},{"ruleId":"228","severity":1,"message":"229","line":68,"column":7,"nodeType":"230","endLine":68,"endColumn":37},{"ruleId":"221","severity":1,"message":"253","line":16,"column":7,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"254","line":55,"column":9,"nodeType":"223","messageId":"224","endLine":55,"endColumn":24},{"ruleId":"221","severity":1,"message":"261","line":8,"column":10,"nodeType":"223","messageId":"224","endLine":8,"endColumn":31},{"ruleId":"221","severity":1,"message":"240","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":22},{"ruleId":"221","severity":1,"message":"262","line":38,"column":9,"nodeType":"223","messageId":"224","endLine":38,"endColumn":32},{"ruleId":"221","severity":1,"message":"263","line":43,"column":9,"nodeType":"223","messageId":"224","endLine":43,"endColumn":33},{"ruleId":"221","severity":1,"message":"264","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":24},{"ruleId":"221","severity":1,"message":"240","line":10,"column":10,"nodeType":"223","messageId":"224","endLine":10,"endColumn":22},{"ruleId":"221","severity":1,"message":"241","line":11,"column":10,"nodeType":"223","messageId":"224","endLine":11,"endColumn":24},{"ruleId":"242","severity":1,"message":"265","line":15,"column":6,"nodeType":"244","endLine":15,"endColumn":8,"suggestions":"266"},{"ruleId":"221","severity":1,"message":"246","line":17,"column":9,"nodeType":"223","messageId":"224","endLine":17,"endColumn":31},{"ruleId":"221","severity":1,"message":"247","line":33,"column":9,"nodeType":"223","messageId":"224","endLine":33,"endColumn":20},{"ruleId":"221","severity":1,"message":"267","line":39,"column":9,"nodeType":"223","messageId":"224","endLine":39,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":68,"column":7,"nodeType":"230","endLine":68,"endColumn":37},{"ruleId":"221","severity":1,"message":"253","line":16,"column":7,"nodeType":"223","messageId":"224","endLine":16,"endColumn":15},{"ruleId":"221","severity":1,"message":"254","line":56,"column":9,"nodeType":"223","messageId":"224","endLine":56,"endColumn":24},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'particlesInit' is assigned a value but never used.","'particlesLoaded' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserService' is defined but never used.","'loadFull' is defined but never used.","'Typewriter' is defined but never used.","'sample' is defined but never used.","'Link' is defined but never used.","'currentPayment' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'searchMem_Name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrievePayments'. Either include it or remove the dependency array.","ArrayExpression",["270"],"'onChangeSearchMem_Name' is assigned a value but never used.","'refreshList' is assigned a value but never used.","'setActivePayment' is assigned a value but never used.","'currentMember' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveMembers'. Either include it or remove the dependency array.",["271"],"'setActiveMember' is assigned a value but never used.","'navigate' is assigned a value but never used.","'updatePublished' is assigned a value but never used.","'currentWorkout' is assigned a value but never used.","'setActiveWorkout' is assigned a value but never used.","'currentEquipment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveEquipments'. Either include it or remove the dependency array.",["272"],"'setActiveEquipment' is assigned a value but never used.","'currentBranch_Manager' is assigned a value but never used.","'setActiveBranch_Manager' is assigned a value but never used.","'removeAllBranch_Managers' is assigned a value but never used.","'currentTrainer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveTrainers'. Either include it or remove the dependency array.",["273"],"'setActiveTrainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [retrievePayments]",{"range":"282","text":"283"},"Update the dependencies array to be: [retrieveMembers]",{"range":"284","text":"285"},"Update the dependencies array to be: [retrieveEquipments]",{"range":"286","text":"287"},"Update the dependencies array to be: [retrieveTrainers]",{"range":"288","text":"289"},[589,591],"[retrievePayments]",[604,606],"[retrieveMembers]",[604,606],"[retrieveEquipments]",[605,607],"[retrieveTrainers]"]