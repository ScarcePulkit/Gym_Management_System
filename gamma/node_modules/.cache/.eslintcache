[{"/Users/khushil/Project/DBMS_Project/gamma/src/index.js":"1","/Users/khushil/Project/DBMS_Project/gamma/src/serviceWorker.js":"2","/Users/khushil/Project/DBMS_Project/gamma/src/App.js":"3","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth.service.js":"4","/Users/khushil/Project/DBMS_Project/gamma/src/components/Register.js":"5","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardUser.js":"6","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardAdmin.js":"7","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/AddEquipment.js":"8","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/AddWorkout.js":"9","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/ShowTrainer.js":"10","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardModerator.js":"11","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/AddTrainer.js":"12","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/AddBranch.js":"13","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/ShowEquipment.js":"14","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/ShowWorkout.js":"15","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/ShowBranches.js":"16","/Users/khushil/Project/DBMS_Project/gamma/src/common/EventBus.js":"17","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/EditEquipment.js":"18","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/EditTrainer.js":"19","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/EditWorkout.js":"20","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/EditBranch.js":"21","/Users/khushil/Project/DBMS_Project/gamma/src/components/Login.js":"22","/Users/khushil/Project/DBMS_Project/gamma/src/components/Profile.js":"23","/Users/khushil/Project/DBMS_Project/gamma/src/components/Home.js":"24","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/ShowMembers.js":"25","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/Member.js":"26","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/AddMember.js":"27","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment/ShowPayment.js":"28","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment/Payment.js":"29","/Users/khushil/Project/DBMS_Project/gamma/src/services/user.service.js":"30","/Users/khushil/Project/DBMS_Project/gamma/src/services/ManagerService.js":"31","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth-header.js":"32"},{"size":320,"mtime":1650114911777,"results":"33","hashOfConfig":"34"},{"size":5086,"mtime":1650114911777,"results":"35","hashOfConfig":"34"},{"size":13311,"mtime":1650985419130,"results":"36","hashOfConfig":"34"},{"size":824,"mtime":1650114911778,"results":"37","hashOfConfig":"34"},{"size":4639,"mtime":1650114911777,"results":"38","hashOfConfig":"34"},{"size":891,"mtime":1650114911776,"results":"39","hashOfConfig":"34"},{"size":894,"mtime":1650114911776,"results":"40","hashOfConfig":"34"},{"size":5478,"mtime":1650976635516,"results":"41","hashOfConfig":"34"},{"size":4961,"mtime":1650976670768,"results":"42","hashOfConfig":"34"},{"size":5814,"mtime":1650976663821,"results":"43","hashOfConfig":"34"},{"size":906,"mtime":1650114911776,"results":"44","hashOfConfig":"34"},{"size":6348,"mtime":1650976661166,"results":"45","hashOfConfig":"34"},{"size":7602,"mtime":1650976641696,"results":"46","hashOfConfig":"34"},{"size":4970,"mtime":1650976637505,"results":"47","hashOfConfig":"34"},{"size":5381,"mtime":1650976673571,"results":"48","hashOfConfig":"34"},{"size":5827,"mtime":1650976645227,"results":"49","hashOfConfig":"34"},{"size":327,"mtime":1650114911775,"results":"50","hashOfConfig":"34"},{"size":4862,"mtime":1650881036792,"results":"51","hashOfConfig":"34"},{"size":6713,"mtime":1650881036815,"results":"52","hashOfConfig":"34"},{"size":4134,"mtime":1650881036815,"results":"53","hashOfConfig":"34"},{"size":7115,"mtime":1650881036792,"results":"54","hashOfConfig":"34"},{"size":4030,"mtime":1650976279668,"results":"55","hashOfConfig":"34"},{"size":1235,"mtime":1650976751480,"results":"56","hashOfConfig":"34"},{"size":1553,"mtime":1650976736165,"results":"57","hashOfConfig":"34"},{"size":4883,"mtime":1650976330575,"results":"58","hashOfConfig":"34"},{"size":8143,"mtime":1650976628012,"results":"59","hashOfConfig":"34"},{"size":7212,"mtime":1650976630516,"results":"60","hashOfConfig":"34"},{"size":4469,"mtime":1650976657102,"results":"61","hashOfConfig":"34"},{"size":5038,"mtime":1650976654227,"results":"62","hashOfConfig":"34"},{"size":622,"mtime":1650114911778,"results":"63","hashOfConfig":"34"},{"size":2964,"mtime":1650881036816,"results":"64","hashOfConfig":"34"},{"size":342,"mtime":1650114911778,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"sgyf4y",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/khushil/Project/DBMS_Project/gamma/src/index.js",[],["152","153"],"/Users/khushil/Project/DBMS_Project/gamma/src/serviceWorker.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/App.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport AddMember from \"./components/Member/AddMember\";\nimport EditMember from \"./components/Member/Member\";\nimport AuthService from \"./services/auth.service\";\nimport ShowMembers from \"./components/Member/ShowMembers\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/BoardUser\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport BoardAdmin from \"./components/BoardAdmin\";\nimport Payment from \"./components/Payment/Payment\";\nimport EventBus from \"./common/EventBus\";\nimport ShowPayment from \"./components/Payment/ShowPayment\";\nimport AddEquipment from \"./components/Equipment/AddEquipment\";\nimport AddTrainer from \"./components/Trainer/AddTrainer\";\nimport ShowEquipment from \"./components/Equipment/ShowEquipment\";\nimport ShowTrainer from \"./components/Trainer/ShowTrainer\";\nimport AddWorkout from \"./components/Workout/AddWorkout\";\nimport ShowWorkout from \"./components/Workout/ShowWorkout\";\nimport AddBranches from \"./components/Branch/AddBranch\";\nimport ShowBranches from \"./components/Branch/ShowBranches\";\nimport EditWorkout from \"./components/Workout/EditWorkout\";\nimport EditBranch from \"./components/Branch/EditBranch\";\nimport { Dropdown, Navbar, Container, Nav, NavDropdown } from \"react-bootstrap\";\nimport DropdownItem from \"react-bootstrap/esm/DropdownItem\";\nimport EditTrainer from \"./components/Trainer/EditTrainer\";\nimport EditEquipment from \"./components/Equipment/EditEquipment\";\nimport { useNavigate } from \"react-router-dom\";\nconst App = () => {\n  let navigate = useNavigate();\n  const [showDropdownMem, setShowDropdownMem] = useState(false);\n  const [showDropdownPay, setShowDropdownPay] = useState(false);\n  const [showDropdownTrain, setShowDropdownTrain] = useState(false);\n  const [showDropdownEquip, setShowDropdownEquip] = useState(false);\n  const [showDropdownBranch, setShowDropdownBranch] = useState(false);\n  const [showDropdownWor, setShowDropdownWor] = useState(false);\n  const particlesInit = async (main) => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n  // const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const [currentManager, setCurrentManager] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentManager();\n    // console.log(user);\n    //const {id} = user;\n    //console.log(id);\n\n    if (user) {\n      console.log(user.role);\n      if (user.role === \"admin\") {\n        setShowAdminBoard(true);\n\n      }\n      else {\n        setCurrentManager(user);\n      }\n      // setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\n\n    }\n\n    EventBus.on(\"logout\", () => {\n      logOut();\n    });\n\n    return () => {\n      EventBus.remove(\"logout\");\n    };\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n    // setShowModeratorBoard(false);\n    setShowAdminBoard(false);\n    setCurrentManager(undefined);\n  };\n  console.log(currentManager);\n\n\n\n  return (\n    <div>\n      <Navbar variant=\"dark\" expand=\"lg\" className=\"Navbar\">\n        <Container fluid>\n          <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n          <Navbar.Collapse id=\"navbar-dark-example\">\n            <Nav>\n              {\n                //   <Link to={\"/\"} className=\"navbar-brand\">\n                //   Profile\n                // </Link>\n              }\n              <div className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/home\"} className=\"nav-link\" >\n                    Home\n                  </Link>\n                </li>\n\n                {\n                  //   showModeratorBoard && (\n                  //   <li className=\"nav-item\">\n                  //     <Link to={\"/mod\"} className=\"nav-link\">\n                  //       Moderator Board\n                  //     </Link>\n                  //   </li>\n                  // )\n                }\n\n                {\n                  //   showAdminBoard && (\n                  //   <li className=\"nav-item\">\n                  //     <Link to={\"/admin\"} className=\"nav-link\">\n                  //       Admin Board\n                  //     </Link>\n                  //   </li>\n                  // )\n                }\n                {currentManager && (<NavDropdown\n                  id=\"nav-dropdown-dark-example\"\n                  title=\"Member\"\n                  style={{ marginLeft: '950px' }}\n                  menuVariant=\"dark\"\n                  onMouseLeave={() => setShowDropdownMem(false)}\n                  onMouseOver={() => setShowDropdownMem(true)}\n\n                >\n\n                  <NavDropdown.Item href={\"/addmember/\" + currentManager.id}>\n\n                    Add Member\n\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href={\"/showmembers/\" + currentManager.id}>\n\n\n                    Show Members\n\n                  </NavDropdown.Item>\n                </NavDropdown>\n\n\n\n                )}\n                {\n                  currentManager && (\n                    <NavDropdown\n                      id=\"nav-dropdown-dark-example\"\n                      title=\"Payment\"\n                      menuVariant=\"dark\"\n                      onMouseLeave={() => setShowDropdownPay(false)}\n                      onMouseOver={() => setShowDropdownPay(true)}\n\n                    >\n\n\n                      <NavDropdown.Item href={/payment/ + currentManager.id}>\n                        Add Payment\n                      </NavDropdown.Item>\n                      <NavDropdown.Item href={\"/showpayment/\" + currentManager.id}>\n\n\n                        Show Payments\n\n                      </NavDropdown.Item>\n                    </NavDropdown>\n                  )}\n\n                {\n                  currentManager && (\n                    <NavDropdown\n                      id=\"nav-dropdown-dark-example\"\n                      title=\"Trainer\"\n                      menuVariant=\"dark\">\n                      <NavDropdown.Item href={\"/addtrainer/\" + currentManager.id}>\n                        Add Trainer\n                      </NavDropdown.Item>\n                      <NavDropdown.Item href={\"/showtrainer/\" + currentManager.id}>\n                        Show Trainer\n                      </NavDropdown.Item>\n                    </NavDropdown>\n                  )}\n                {\n                  showAdminBoard && (\n                    <NavDropdown\n                      id=\"nav-dropdown-dark-example\"\n                      title=\"Workout\"\n                      style={{ marginLeft: '1150px' }}\n                      menuVariant=\"dark\"\n                    >\n\n                      <NavDropdown.Item href={\"/addworkout\"} >\n                        Add Workout\n                      </NavDropdown.Item>\n                      <NavDropdown.Item href={\"/showworkout\"}>\n\n                        Show Workout\n                      </NavDropdown.Item>\n                    </NavDropdown>\n                  )}\n                {\n                  currentManager && (\n                    <NavDropdown\n                      id=\"nav-dropdown-dark-example\"\n                      title=\"Equipment\"\n                      menuVariant=\"dark\"\n                    >\n\n                      <NavDropdown.Item href={\"/addequipment/\" + currentManager.id} >\n                        Add Equipment\n                      </NavDropdown.Item>\n                      <NavDropdown.Item href={\"/showequipment/\" + currentManager.id} >\n                        Show Equipment\n                      </NavDropdown.Item>\n                    </NavDropdown>\n                  )}\n                {\n                  showAdminBoard && (\n                    <NavDropdown\n                      id=\"nav-dropdown-dark-example\"\n                      title=\"Branch\"\n                      menuVariant=\"dark\"\n                    >\n                      <NavDropdown.Item href={\"/addbranch\"}>\n                        Add Branch\n                      </NavDropdown.Item>\n                      <NavDropdown.Item href={\"/showbranch\"} >\n\n                        Show Branches\n                      </NavDropdown.Item>\n                    </NavDropdown>\n                  )}\n\n\n              </div>\n\n              {currentManager || showAdminBoard ? (\n                <div >\n                  {\n                    //   <li className=\"nav-item\">\n                    //   <Link to={\"/profile/\"+currentManager.id} className=\"nav-link\">\n                    //     {currentManager.id}\n                    //   </Link>\n                    // </li>\n                  }\n                  <li className=\"nav-item\">\n                    <a href=\"/login\" className=\"nav-link\" onClick={logOut} >\n                      LogOut\n                    </a>\n                  </li>\n                </div>\n              ) : (\n                <div >\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\" style={{ paddingLeft: '1350px' }}>\n                      Login\n                    </Link>\n                  </li>\n\n                  {\n                    //   <li className=\"nav-item\">\n                    //   <Link to={\"/register\"} className=\"nav-link\">\n                    //     Sign Up\n                    //   </Link>\n                    // </li>\n                  }\n                </div>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <div className=\"container mt-3\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/user\" element={<BoardUser />} />\n          <Route path=\"/mod\" element={<BoardModerator />} />\n          <Route path=\"/admin\" element={<BoardAdmin />} />\n\n        </Routes>\n        {currentManager || showAdminBoard ? (<Routes>\n          <Route path=\"/addmember/:id\" element={<AddMember />} />\n          <Route path=\"edittrainer/:id\" element={<EditTrainer />} />\n          <Route path=\"editequipment/:id\" element={<EditEquipment />} />\n          <Route path=\"/editmember/:Mem_ID\" element={<EditMember />} />\n          <Route path=\"/payment/:id\" element={<Payment />} />\n          <Route path=\"showpayment/:id\" element={<ShowPayment />} />\n          <Route path=\"addequipment/:id\" element={<AddEquipment />} />\n          <Route path=\"showequipment/:id\" element={<ShowEquipment />} />\n          <Route path=\"addtrainer/:id\" element={<AddTrainer />} />\n          <Route path=\"showtrainer/:id\" element={<ShowTrainer />} />\n          <Route path=\"showworkout\" element={<ShowWorkout />} />\n          <Route path=\"addworkout\" element={<AddWorkout />} />\n          <Route path=\"/showbranch\" element={<ShowBranches />} />\n          <Route path=\"addbranch\" element={<AddBranches />} />\n          <Route path=\"editworkout/:id\" element={<EditWorkout />} />\n          <Route path=\"editbranch/:id\" element={<EditBranch />} />\n          <Route path=\"/showmembers/:id\" element={<ShowMembers />} />\n          <Route path=\"/branch_manager/:id\" element={<EditBranch />} />\n          <Route path=\"/profile/:id\" element={<Profile />} />\n\n        </Routes>) :\n          <Routes>\n            <Route path=\"/addmember/:id\" element={<Home />} />\n            <Route path=\"edittrainer/:id\" element={<Home />} />\n            <Route path=\"editequipment/:id\" element={<Home />} />\n            <Route path=\"/editmember/:Mem_ID\" element={<Home />} />\n            <Route path=\"/payment/:id\" element={<Home />} />\n            <Route path=\"showpayment/:id\" element={<Home />} />\n            <Route path=\"addequipment/:id\" element={<Home />} />\n            <Route path=\"showequipment/:id\" element={<Home />} />\n            <Route path=\"addtrainer/:id\" element={<Home />} />\n            <Route path=\"showtrainer/:id\" element={<Home />} />\n            <Route path=\"showworkout\" element={<Home />} />\n            <Route path=\"addworkout\" element={<Home />} />\n            <Route path=\"/showbranch\" element={<Home />} />\n            <Route path=\"addbranch\" element={<Home />} />\n            <Route path=\"editworkout/:id\" element={<Home />} />\n            <Route path=\"editbranch/:id\" element={<Home />} />\n            <Route path=\"/showmembers/:id\" element={<Home />} />\n            <Route path=\"/branch_manager/:id\" element={<Home />} />\n            <Route path=\"/profile/:id\" element={<Home />} />\n          </Routes>\n\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default App;","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth.service.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Register.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardUser.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardAdmin.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/AddEquipment.js",["170"],"import React, { useState } from \"react\";\nimport EquipmentService from \"../../services/ManagerService\";\nimport { useParams } from \"react-router-dom\";\nimport image from \"../../Images/home.jpeg\"\nimport \"../Member/Member.css\";\nimport { Card } from \"react-bootstrap\";\nconst AddEquipment = () => {\n    const {id}=useParams();\n    console.log(id);\n  const initialEquipmentState = {\n    Equipment_ID:null,\n    Equipment_Name:\"\",\n    Equipment_Kind:\"\",\n    Working_Status:\"\",\n    Exercise:\"\",\n  };\n  const [equipment, setEquipment] = useState(initialEquipmentState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setEquipment({ ...equipment, [name]: value });\n  };\n\n  const saveEquipment = () => {\n    var data = {\n      Equipment_Name:equipment.Equipment_Name,\n      Equipment_Kind:equipment.Equipment_Kind,\n      Working_Status:equipment.Working_Status,\n      Exercise:equipment.Exercise\n    };\n\n    EquipmentService.createEquipment(id,data)\n      .then(response => {\n        setEquipment({\n            Equipment_ID:response.data.Equipment_ID,\n            Equipment_Name:response.data.Equipment_Name,\n            Equipment_Kind:response.data.Equipment_Kind,\n            Working_Status:response.data.Working_Status,\n            Exercise:response.data.Exercise\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newEquipment = () => {\n    setEquipment(initialEquipmentState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"member-submit-form\" id=\"member2\">\n    <img src={image} id=\"imgt2\" />\n    <br />\n    <br />\n    <br />\n    <Card style={{ height: '60rem', width: '30rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newEquipment}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Equipment_Name\">Equipment Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"title\"\n              required\n              value={equipment.Equipment_Name}\n              onChange={handleInputChange}\n              name=\"Equipment_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Equipment_Kind\">Equipment Kind</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Equipment_Kind\"\n              required\n              value={equipment.Equipment_Kind}\n              onChange={handleInputChange}\n              name=\"Equipment_Kind\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Working_Status\">Working Status</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Working_Status\"\n              required\n              value={equipment.Working_Status}\n              onChange={handleInputChange}\n              name=\"Working_Status\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Exercise\">Exercise</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Exercise\"\n              required\n              value={equipment.Exercise}\n              onChange={handleInputChange}\n              name=\"Exercise\"\n            />\n          </div>\n          {\n        //       <div className=\"form-group\">\n        //     <label htmlFor=\"Equipment_Amt\">Equipment_Amt</label>\n        //     <input\n        //       type=\"number\"\n        //       className=\"form-control\"\n        //       id=\"Equipment_Amt\"\n        //       required\n        //       value={equipment.Equipment_Amt}\n        //       onChange={handleInputChange}\n        //       name=\"Equipment_Amt\"\n        //     />\n        //   </div>  \n        //   <div className=\"form-group\">\n        //     <label htmlFor=\"Member_ID\">Member_ID</label>\n        //     <input\n        //       type=\"number\"\n        //       className=\"form-control\"\n        //       id=\"Member_ID\"\n        //       required\n        //       value={equipment.Member_ID}\n        //       onChange={handleInputChange}\n        //       name=\"Member_ID\"\n        //     />\n        //   </div>\n        //   <div className=\"form-group\">\n        //     <label htmlFor=\"Workout_Name\">Workout_Name</label>\n        //     <input\n        //       type=\"text\"\n        //       className=\"form-control\"\n        //       id=\"Workout_Name\"\n        //       required\n        //       value={equipment.Workout_Name}\n        //       onChange={handleInputChange}\n        //       name=\"Workout_Name\"\n        //     />\n        //   </div>   \n           }\n           <br />\n           <br />\n          <button onClick={saveEquipment} className=\"btn btn-success tempBtn3\">\n            Submit\n          </button>\n        </div>\n      )}\n      </Card>\n    </div>\n  );\n};\n\nexport default AddEquipment;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/AddWorkout.js",["171","172"],"import React, { useState } from \"react\";\nimport WorkoutService from \"../../services/ManagerService\";\nimport { useParams } from \"react-router-dom\";\nimport image from \"../../Images/home.jpeg\"\nimport \"../Member/Member.css\";\nimport { Card } from \"react-bootstrap\";\nconst AddWorkout = () => {\n    \n  const initialWorkoutState = {\n    Workout_ID:null,\n    Workout_Name:\"\",\n    Workout_DietChart:\"\",\n    Working_Duration:\"\"\n  };\n  const [workout, setWorkout] = useState(initialWorkoutState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setWorkout({ ...workout, [name]: value });\n  };\n\n  const saveWorkout = () => {\n    var data = {\n      Workout_Name:workout.Workout_Name,\n      Workout_DietChart:workout.Workout_DietChart,\n      Working_Duration:workout.Working_Duration\n    };\n\n    WorkoutService.AddWorkout(data)\n      .then(response => {\n        setWorkout({\n            Workout_ID:response.data.Workout_ID,\n            Workout_Name:response.data.Workout_Name,\n            Workout_DietChart:response.data.Workout_DietChart,\n            Working_Duration:response.data.Working_Duration\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newWorkout = () => {\n    setWorkout(initialWorkoutState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"member-submit-form\" id=\"member2\" >\n    <img src={image} id=\"imgt2\" />\n    <br />\n    <br />\n    <br />\n    <br />\n    <Card style={{ height: '60rem', width: '30rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newWorkout}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Workout_Name\">Workout_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"title\"\n              required\n              value={workout.Workout_Name}\n              onChange={handleInputChange}\n              name=\"Workout_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Workout_DietChart\"\n              required\n              value={workout.Workout_DietChart}\n              onChange={handleInputChange}\n              name=\"Workout_DietChart\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Working_Duration\">Working_Duration</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\" \n              id=\"Working_Duration\"\n              required\n              value={workout.Working_Duration}\n              onChange={handleInputChange}\n              name=\"Working_Duration\"\n            />\n          </div>\n          {\n        //       <div className=\"form-group\">\n        //     <label htmlFor=\"Workout_Amt\">Workout_Amt</label>\n        //     <input\n        //       type=\"number\"\n        //       className=\"form-control\"\n        //       id=\"Workout_Amt\"\n        //       required\n        //       value={workout.Workout_Amt}\n        //       onChange={handleInputChange}\n        //       name=\"Workout_Amt\"\n        //     />\n        //   </div> \n         }\n          {\n        //       <div className=\"form-group\">\n        //     <label htmlFor=\"Member_ID\">Member_ID</label>\n        //     <input\n        //       type=\"number\"\n        //       className=\"form-control\"\n        //       id=\"Member_ID\"\n        //       required\n        //       value={workout.Member_ID}\n        //       onChange={handleInputChange}\n        //       name=\"Member_ID\"\n        //     />\n        //   </div>\n        //   <div className=\"form-group\">\n        //     <label htmlFor=\"Workout_Name\">Workout_Name</label>\n        //     <input\n        //       type=\"text\"\n        //       className=\"form-control\"\n        //       id=\"Workout_Name\"\n        //       required\n        //       value={workout.Workout_Name}\n        //       onChange={handleInputChange}\n        //       name=\"Workout_Name\"\n        //     />\n        //   </div>\n        }\n          <br />\n           <br />      \n          <button onClick={saveWorkout} className=\"btn btn-success tempBtn3\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n    </Card>\n    </div>\n  );\n};\n\nexport default AddWorkout;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/ShowTrainer.js",["173","174","175","176","177","178","179","180"],"import React, { useState, useEffect } from \"react\";\nimport TrainerService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\nimport image from \"../../Images/home.jpeg\"\nconst TrainerList = () => {\n  const { id } = useParams();\n  const [trainer, setTrainer] = useState([]);\n  const [currentTrainer, setCurrentTrainer] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveTrainers();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveTrainers = () => {\n    TrainerService.showTrainer(id)\n      .then(response => {\n        setTrainer(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveTrainers();\n    setCurrentTrainer(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveTrainer = (trainer, index) => {\n    setCurrentTrainer(trainer);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllTrainers = () => {\n  //     TrainerDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     TrainerDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setTrainer(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(trainer)\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Mem_Name\"\n          //value={searchMem_Name}\n          //onChange={onChangeSearchMem_Name}\n          />\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <h4 className=\"lab\">Trainers List</h4>\n        <br />\n        {/* khushil working */}\n\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1rem' }}>\n          <thead>\n            <tr>\n\n              <th>ID</th>\n              <th>Name</th>\n              <th>Gender</th>\n              <th>Blood Group</th>\n              <th>Mobile Number</th>\n              <th>Address</th>\n              <th>Emergency Mobile Number</th>\n              <th>Emergency Name</th>\n              <th>Branch ID</th>\n              <th>Workout ID</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n\n          {trainer.map((trainer, index) => (\n            <tr>\n              <td>{trainer.Trainer_ID}</td>\n              <td>{trainer.Trainer_Name}</td>\n              <td>{trainer.Gender}</td>\n              <td>{trainer.Blood_Type}</td>\n              <td>{trainer.Phone}</td>\n              <td>{trainer.Address}</td>\n              <td>{trainer.Emer_Mobile}</td>\n              <td>{trainer.Emer_Name}</td>\n              <td>{trainer.Branch_ID}</td>\n              <td>{trainer.Workout_ID}</td>\n\n              <td>\n                <Link\n                  to={\"/edittrainer/\" + trainer.Trainer_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {trainer &&\n            trainer.map((trainer, index) => (\n              <li\n                className={\n                  \"list-group-item \" \n                }\n                \n                \n                key={index}\n              >\n                {trainer.Trainer_ID    }                  {trainer.Trainer_Desc}   \n              </li>\n              \n              \n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllTrainers}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentTrainer ? (\n        //       <div>\n        //         <h4>Trainers</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentTrainer.Trainer_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/edittrainer/\" + currentTrainer.Trainer_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Trainer...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div>\n  );\n};\n\nexport default TrainerList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardModerator.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/AddTrainer.js",["181"],"import React, { useState } from \"react\";\nimport TrainerDataService from \"../../services/ManagerService\";\nimport { useParams } from \"react-router-dom\";\nimport image from \"../../Images/home.jpeg\"\nimport \"../Member/Member.css\";\nimport { Card } from \"react-bootstrap\";\nconst AddTrainer = () => {\n    const {id}=useParams();\n  const initialTrainerState = {\n    Trainer_ID: null,\n    Trainer_Name: \"\",\n    // Trainer_Weight: 0,\n    // Trainer_Height: 0,\n    // Age: 0,\n    Gender: \"\",\n    Blood_Type: \"\",\n    Phone: 0,\n    Address: \"\",\n    Emer_Name: \"\",\n    Emer_Mobile: 0,\n    Workout_Name:\"\"\n  };\n  const [trainer, setTrainer] = useState(initialTrainerState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setTrainer({ ...trainer, [name]: value });\n  };\n\n  const saveTrainer = () => {\n    var data = {\n      Trainer_Name: trainer.Trainer_Name,\n    //   Trainer_Weight: trainer.Trainer_Weight,\n    //   Trainer_Height: trainer.Trainer_Height,\n    //   Age: trainer.Age,\n      Gender: trainer.Gender,\n      Blood_Type: trainer.Blood_Type,\n      Phone: trainer.Phone,\n      Address: trainer.Address,\n      Emer_Name: trainer.Emer_Name,\n      Emer_Mobile: trainer.Emer_Mobile,\n      Workout_Name:trainer.Workout_Name\n    };\n\n    TrainerDataService.createTrainer(id,data)\n      .then(response => {\n        setTrainer({\n          Trainer_ID: response.data.Trainer_ID,\n          Trainer_Name: response.data.Trainer_Name,\n        //   Trainer_Weight: response.data.Trainer_Weight,\n        //   Trainer_Height: response.data.Trainer_Height,\n        //   Age: response.data.Age,\n          Gender: response.data.Gender,\n          Blood_Type: response.data.Blood_Type,\n          Phone: response.data.Phone,\n          Address: response.data.Address,\n          Emer_Name: response.data.Emer_Name,\n          Emer_Mobile: response.data.Emer_Mobile,\n          Workout_Name:response.data.Workout_Name\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newTrainer = () => {\n    setTrainer(initialTrainerState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"member-submit-form\" id=\"member\" >\n    <img src={image} id=\"imgt2\" />\n    <br />\n    <br />\n    <br />\n    <Card style={{ height: '60rem', width: '50rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newTrainer}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Trainer_Name\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"title\"\n              required\n              value={trainer.Trainer_Name}\n              onChange={handleInputChange}\n              name=\"Trainer_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Gender\">Gender</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Gender\"\n              required\n              value={trainer.Gender}\n              onChange={handleInputChange}\n              name=\"Gender\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Blood_Type\">Blood Group</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Blood_Type\"\n              required\n              value={trainer.Blood_Type}\n              onChange={handleInputChange}\n              name=\"Blood_Type\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Phone\">Phone No.</label>\n            <input\n              type=\"number\"\n              className=\"form-control int\"\n              id=\"Phone\"\n              required\n              value={trainer.Phone}\n              onChange={handleInputChange}\n              name=\"Phone\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Address\">Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Address\"\n              required\n              value={trainer.Address}\n              onChange={handleInputChange}\n              name=\"Address\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Emer_Name\">Emergency Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Emer_Name\"\n              required\n              value={trainer.Emer_Name}\n              onChange={handleInputChange}\n              name=\"Emer_Name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Emer_Mobile\">Emergency Contact</label>\n            <input\n              type=\"number\"\n              className=\"form-control int\"\n              id=\"Emer_Mobile\"\n              required\n              value={trainer.Emer_Mobile}\n              onChange={handleInputChange}\n              name=\"Emer_Mobile\"\n            />\n          </div>\n          <div className=\"form-group\">\n          <label className=\"lab\" align = \"center\" htmlFor=\"Workout_Name\">Workout Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control int\"\n            id=\"Workout_Name\"\n            required\n            value={trainer.Workout_Name}\n            onChange={handleInputChange}\n            name=\"Workout_Name\"\n          />\n        </div>\n        <br />\n        <br />\n          <button onClick={saveTrainer} className=\"btn btn-success tempBtn2\">\n            Submit\n          </button>\n        </div>\n      )}\n      </Card>\n      \n    </div>\n  );\n};\n\nexport default AddTrainer;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/AddBranch.js",["182"],"import React, { useState } from \"react\";\nimport BranchMangerServices from \"../../services/ManagerService\";\nimport image from \"../../Images/home.jpeg\"\nimport \"../Member/Member.css\";\nimport { Card } from \"react-bootstrap\";\n\nconst Addbranch_manager = () => {\n  const initialbranch_managerState = {\n    Branch_ID:null,\n    Branch_Name: \"\",\n    Branch_Location: \"\",\n    Branch_Email: \"\",\n    Branch_Phone_Number: 0,\n    Manager_Name: \"\",\n    Gender: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Manager_Email: \"\",\n    Password: \"\"\n\n  };\n  const [branch_manager, setbranch_manager] = useState(initialbranch_managerState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setbranch_manager({ ...branch_manager, [name]: value });\n  };\n\n  const savebranch_manager = () => {\n\n    var data = {\n        Branch_Name: branch_manager.Branch_Name,\n        Branch_Location: branch_manager.Branch_Location,\n        Branch_Email: branch_manager.Branch_Email,\n        Branch_Phone_Number: branch_manager.Branch_Phone_Number,\n        Manager_Name: branch_manager.Manager_Name,\n        Gender: branch_manager.Gender,\n        Mobile_Number: branch_manager.Mobile_Number,\n        Address: branch_manager.Address,\n        Manager_Email: branch_manager.Manager_Email,\n        Password: branch_manager.Password,\n    };\n    // console.log(data);\n\n    BranchMangerServices.createBranch(data)\n      .then(response => {\n        setbranch_manager({\n          Branch_ID:response.data.Branch_ID,\n          Branch_Name: response.data.Branch_Name,\n          Branch_Location: response.data.Branch_Location,\n          Branch_Email: response.data.Branch_Email,\n          Branch_Phone_Number: response.data.Branch_Phone_Number,\n          Manager_Name: response.data.Manager_Name,\n          Gender: response.data.Gender,\n          Mobile_Number: response.data.Mobile_Number,\n          Address: response.data.Address,\n          Manager_Email: response.data.Manager_Email,\n          Password: response.data.Password,\n        });\n        console.log(response);\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newbranch_manager = () => {\n    setbranch_manager(initialbranch_managerState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"member-submit-form\" id=\"member\" >\n    <img src={image} id=\"imgt2\" />\n    <br />\n    <br />\n    <Card style={{ height: '60rem', width: '50rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newbranch_manager}>\n            Add branch_manager\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Branch_Name\">Branch Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"title\"\n              required\n              value={branch_manager.Branch_Name}\n              onChange={handleInputChange}\n              name=\"Branch_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Branch_Location\">Branch Location</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Branch_Location\"\n              required\n              value={branch_manager.Branch_Location}\n              onChange={handleInputChange}\n              name=\"Branch_Location\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Branch_Email\">Branch Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Branch_Email\"\n              required\n              value={branch_manager.Branch_Email}\n              onChange={handleInputChange}\n              name=\"Branch_Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Branch_Phone_Number\">Branch Phone Number</label>\n            <input\n              type=\"number\"\n              className=\"form-control int\"\n              id=\"Branch_Phone_Number\"\n              required\n              value={branch_manager.Branch_Phone_Number}\n              onChange={handleInputChange}\n              name=\"Branch_Phone_Number\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Manager_Name\">Manager Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Manager_Name\"\n              required\n              value={branch_manager.Manager_Name}\n              onChange={handleInputChange}\n              name=\"Manager_Name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Gender\">Gender</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Gender\"\n              required\n              value={branch_manager.Gender}\n              onChange={handleInputChange}\n              name=\"Gender\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Mobile_Number\">Mobile Number</label>\n            <input\n              type=\"number\"\n              className=\"form-control int\"\n              id=\"Mobile_Number\"\n              required\n              value={branch_manager.Mobile_Number}\n              onChange={handleInputChange}\n              name=\"Mobile_Number\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Address\">Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Address\"\n              required\n              value={branch_manager.Address}\n              onChange={handleInputChange}\n              name=\"Address\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Manager_Email\">Manager Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Manager_Email\"\n              required\n              value={branch_manager.Manager_Email}\n              onChange={handleInputChange}\n              name=\"Manager_Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Password\">Password</label>\n            <input\n              type=\"number\"\n              className=\"form-control int\"\n              id=\"Password\"\n              required\n              value={branch_manager.Password}\n              onChange={handleInputChange}\n              name=\"Password\"\n            />\n          </div>\n          <br />\n          <br />\n          <button onClick={savebranch_manager} className=\"btn btn-success tempBtn\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n    </Card>\n  </div>\n  );\n};\n\nexport default Addbranch_manager;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/ShowEquipment.js",["183","184","185","186","187","188","189","190"],"import React, { useState, useEffect } from \"react\";\nimport EquipmentService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport image from \"../../Images/home.jpeg\"\nconst EquipmentList = () => {\n  const { id } = useParams();\n  const [equipment, setEquipment] = useState([]);\n  const [currentEquipment, setCurrentEquipment] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveEquipments();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveEquipments = () => {\n    EquipmentService.showEquipment(id)\n      .then(response => {\n        setEquipment(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveEquipments();\n    setCurrentEquipment(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveEquipment = (equipment, index) => {\n    setCurrentEquipment(equipment);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllEquipments = () => {\n  //     EquipmentDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     EquipmentDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setEquipment(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(equipment)\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <br />\n        <br />\n        <br />\n        <h4 className=\"lab\">Equipments List</h4>\n        <br />\n        {/* khushil working */}\n\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1.5rem' }}>\n          <thead>\n            <tr>\n\n              <th>Equipment ID</th>\n              <th>Equipment Name</th>\n              <th>Equipment Kind</th>\n              <th>Working Status</th>\n              <th>Exercise</th>\n\n              <th>Edit</th>\n\n            </tr>\n          </thead>\n\n          {equipment.map((equipment, index) => (\n            <tr>\n              <td>{equipment.Equipment_ID}</td>\n              <td>{equipment.Equipment_Name}</td>\n              <td>{equipment.Equipment_Kind}</td>\n              <td>{equipment.Working_Status}</td>\n              <td>{equipment.Exercise}</td>\n\n              <td>\n                <Link\n                  to={\"/editequipment/\" + equipment.Equipment_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {equipment &&\n            equipment.map((equipment, index) => (\n              <li\n                className={\n                  \"list-group-item \"\n                }\n                onClick={() => {\n                  setActiveEquipment(equipment, index)\n                }\n                }\n                key={index}\n              >\n                {equipment.Equipment_ID}                  {equipment.Equipment_Desc}\n              </li>\n\n\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllEquipments}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentEquipment ? (\n        //       <div>\n        //         <h4>Equipments</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentEquipment.Equipment_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/editequipment/\" + currentEquipment.Equipment_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Equipment...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div >\n  );\n};\n\nexport default EquipmentList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/ShowWorkout.js",["191","192","193","194","195","196"],"import React, { useState, useEffect } from \"react\";\nimport WorkoutService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport image from \"../../Images/home.jpeg\"\n\n\nconst WorkoutList = () => {\n\n  const [workout, setWorkout] = useState([]);\n  const [currentWorkout, setCurrentWorkout] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveWorkouts();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveWorkouts = () => {\n    WorkoutService.getAllWorkout()\n      .then(response => {\n        setWorkout(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveWorkouts();\n    setCurrentWorkout(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveWorkout = (workout, index) => {\n    setCurrentWorkout(workout);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllWorkouts = () => {\n  //     WorkoutDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     WorkoutDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setWorkout(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  return (\n    <div className=\"list row\" align=\"center\">\n    <img src={image} id=\"imgt2\" />  \n    <div className=\"\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Mem_Name\"\n            value={searchMem_Name}\n            onChange={onChangeSearchMem_Name}\n          />\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <br/>\n      <br/>\n      \n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n      <br/>\n      <br/>\n      <br/>\n        <h4 className=\"lab\">Workouts List</h4>\n        <br/>\n\n        {/* khushil working */}\n\n        <Table striped bordered hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1rem' }}>\n          <thead>\n            <tr>\n\n              <th>Workout ID</th>\n              <th>Workout Name</th>\n              <th>Diet Chart</th>\n              <th>Duration</th>\n\n            </tr>\n          </thead>\n\n          {workout.map((workout, index) => (\n            <tr>\n              <td>{workout.Workout_ID}</td>\n              <td>{workout.Workout_Name}</td>\n              <td>{workout.Diet_Chart}</td>\n              <td>{workout.Duration}</td>\n\n              <td>\n                <Link\n                  to={\"/workout/edit/\" + workout.Workout_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {workout &&\n            workout.map((workout, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => {\n                  setActiveWorkout(workout, index)\n                  console.log(workout.Workout_Name)\n                }\n                }\n                key={index}\n              >\n                {workout.Workout_Name}\n              </li>\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllWorkouts}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //   <div className=\"col-md-6\">\n        //   {currentWorkout ? (\n        //     <div>\n        //       <h4>Workouts</h4>\n        //       <div>\n        //         <label>\n        //           <strong>Mem_Name:</strong>\n        //         </label>{\" \"}\n\n        //         {currentWorkout.Workout_ID}\n        //       </div>\n        //       <Link\n        //         to={\"/editworkout/\" + currentWorkout.Workout_ID}\n        //         className=\"badge badge-warning\"\n        //       >\n        //         Edit\n        //       </Link>\n        //     </div>\n        //   ) : (\n        //     <div>\n        //       <br />\n        //       <p>Please click on a Workout...</p>\n        //     </div>\n        //   )}\n        // </div>\n      }\n    </div>\n  );\n};\n\nexport default WorkoutList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/ShowBranches.js",["197","198","199","200","201"],"import React, { useState, useEffect } from \"react\";\nimport BranchServices from \"../../services/ManagerService\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from 'react-bootstrap';\nimport image from \"../../Images/home.jpeg\"\n\nconst Branch_ManagerList = () => {\n  const [branch_manager, setBranch_Manager] = useState([]);\n  const [currentBranch_Manager, setCurrentBranch_Manager] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchBranch_Name, setSearchBranch_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveBranch_Managers();\n  }, []);\n\n  const onChangeSearchBranch_Name = e => {\n    const searchBranch_Name = e.target.value;\n    setSearchBranch_Name(searchBranch_Name);\n  };\n\n  const retrieveBranch_Managers = () => {\n    BranchServices.getAllBranches()\n      .then(response => {\n        setBranch_Manager(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveBranch_Managers();\n    setCurrentBranch_Manager(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveBranch_Manager = (branch_manager, index) => {\n    setCurrentBranch_Manager(branch_manager);\n    setCurrentIndex(index);\n  };\n\n  const removeAllBranch_Managers = () => {\n    BranchServices.removeAll()\n      .then(response => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByBranch_Name = () => {\n    BranchServices.findByBranch_Name(searchBranch_Name)\n      .then(response => {\n        setBranch_Manager(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className=\"list row\" align=\"center\" >\n    <img src={image} id=\"imgt2\" />\n      <div className=\"\">\n        <div className=\"input-group mb-3\" >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Branch_Name\"\n            value={searchBranch_Name}\n            onChange={onChangeSearchBranch_Name}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByBranch_Name}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <h4 className=\"lab\">Branch Managers List</h4>\n        <br />\n\n        {/* //khushil working */}\n\n        <Table striped bordered hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '30px', marginInlineStart: '1rem' }}>\n          <thead>\n            <tr>\n\n              <th>Branch ID</th>\n              <th>Branch Name</th>\n              <th>Branch Location</th>\n              <th>Branch Email</th>\n              <th>Branch Phone Number</th>\n              <th>Manager-ID</th>\n              <th>Manager Name</th>\n              <th>Manager Mobile Number</th>\n              <th>Manager Email</th>\n              <th>Manager Address</th>\n\n            </tr>\n          </thead>\n\n          {branch_manager.map((branch_manager, index) => (\n            <tr>\n              <td>{branch_manager.Branch_ID}</td>\n              <td>{branch_manager.Branch_Name}</td>\n              <td>{branch_manager.Branch_Location}</td>\n              <td>{branch_manager.Branch_Email}</td>\n              <td>{branch_manager.Branch_Phone_Number}</td>\n              <td>{branch_manager.Manager_ID}</td>\n              <td>{branch_manager.Manager_Name}</td>\n              <td>{branch_manager.Manager_Mobile_Number}</td>\n              <td>{branch_manager.Manager_Email}</td>\n              <td>{branch_manager.Manager_Address}</td>\n\n              <td>\n                <Link\n                  to={\"/branch_manager/\" + branch_manager.Branch_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n        {/* <ul className=\"list-group\">\n          {branch_manager &&\n            branch_manager.map((branch_manager, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => {setActiveBranch_Manager(branch_manager, index)\n                console.log(branch_manager)}\n                }\n                key={index}\n              >\n                {branch_manager.Branch_Name}\n              </li>\n            ))}\n        </ul> */}\n\n        {/* <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllBranch_Managers}\n        >\n          Remove All\n        </button>\n      </div> */}\n        {/* <div className=\"col-md-6\"> */}\n        {/* {currentBranch_Manager ? (\n          <div>\n            <h4>Branch_Managers</h4>\n            <div>\n              <label>\n                <strong>Branch_Name:</strong>\n              </label>{\" \"}\n              {currentBranch_Manager.Branch_Name}\n              {currentBranch_Manager.Branch_ID}\n            </div>\n            <Link\n              to={\"/editbranch/\" + currentBranch_Manager.Branch_ID}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Branch_Manager...</p>\n          </div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Branch_ManagerList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/common/EventBus.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Equipment/EditEquipment.js",["202","203"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport EquipmentService from \"../../services/ManagerService\";\n\nconst Equipment = props => {\n    \n    console.log(useParams());\n  const {id } = useParams();\n//  ManagerDataService.get(Equipment_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Equipment_ID);\n  const initialEquipmentState = {\n    Equipment_ID:null,\n    Equipment_Name:\"\",\n    Equipment_Kind:\"\",\n    Working_Status:\"\",\n    Exercise:\"\",\n  };\n  const [currentEquipment, setCurrentEquipment] = useState(initialEquipmentState);\n  const [message, setMessage] = useState(\"\");\n\n  const getEquipment = id => {\n    EquipmentService.getEquipment(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentEquipment(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getEquipment(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentEquipment({ ...currentEquipment, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n        Equipment_ID:currentEquipment.Equipment_ID,\n        Equipment_Name:currentEquipment.Equipment_Name,\n        Equipment_Kind:currentEquipment.Equipment_Kind,\n        Working_Status:currentEquipment.Working_Status,\n        Exercise:currentEquipment.Exercise\n\n    };\n\n    EquipmentService.updateEquipment(currentEquipment.Equipment_ID, data)\n      .then(response => {\n        setCurrentEquipment({ ...currentEquipment, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateEquipment = () => {\n    EquipmentService.updateEquipment(currentEquipment.Equipment_ID, currentEquipment)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Equipment was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteEquipment = () => {\n//     ManagerDataService.remove(currentEquipment.Equipment_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/equipment\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n\n  return (\n    <div>\n      {currentEquipment ? (\n        <div className=\"edit-form\">\n          <h4>Equipment</h4>\n          <form>\n\n\n          <div className=\"form-group\">\n          <label htmlFor=\"Equipment_Name\">Equipment_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={currentEquipment.Equipment_Name}\n            onChange={handleInputChange}\n            name=\"Equipment_Name\"\n          />\n        </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Equipment_Kind\">Equipment_Kind</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Equipment_Kind\"\n                required\n                value={currentEquipment.Equipment_Kind}\n                onChange={handleInputChange}\n                name=\"Equipment_Kind\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Working_Status\">Working_Status</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Working_Status\"\n                required\n                value={currentEquipment.Working_Status}\n                onChange={handleInputChange}\n                name=\"Working_Status\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Exercise\">Exercise</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Exercise\"\n                required\n                value={currentEquipment.Exercise}\n                onChange={handleInputChange}\n                name=\"Exercise\"\n              />\n            </div>\n            \n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteEquipment}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateEquipment}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Equipment...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Equipment;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Trainer/EditTrainer.js",["204","205"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport TrainerService from \"../../services/ManagerService\";\n\nconst Trainer = props => {\n    \n    console.log(useParams());\n  const {id } = useParams();\n//  ManagerDataService.get(Trainer_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Trainer_ID);\n  const initialTrainerState = {\n    Trainer_ID: null,\n    Trainer_Name: \"\",\n    // Trainer_Weight: 0,\n    // Trainer_Height: 0,\n    // Age: 0,\n    Gender: \"\",\n    Blood_Type: \"\",\n    Phone: 0,\n    Address: \"\",\n    Emer_Name: \"\",\n    Emer_Mobile: 0,\n    Workout_Name:\"\"\n  };\n  const [currentTrainer, setCurrentTrainer] = useState(initialTrainerState);\n  const [message, setMessage] = useState(\"\");\n\n  const getTrainer = id => {\n    TrainerService.getTrainer(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentTrainer(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getTrainer(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentTrainer({ ...currentTrainer, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      Trainer_ID: currentTrainer.Trainer_ID,\n      Trainer_Name: currentTrainer.Trainer_Name,\n      //Mem_Weight: currentTrainer.Mem_Weight,\n      //Mem_Height: currentTrainer.Mem_Height,\n      Age: currentTrainer.Age,\n      Gender: currentTrainer.Gender,\n      Blood_Type: currentTrainer.Blood_Type,\n      Phone: currentTrainer.Phone,\n      Address: currentTrainer.Address,\n      Emer_Name: currentTrainer.Emer_Name,\n      Emer_Mobile: currentTrainer.Emer_Mobile,\n      Workout_Name:currentTrainer.Workout_Name\n\n\n    };\n\n    TrainerService.updateTrainer(currentTrainer.Trainer_ID, data)\n      .then(response => {\n        setCurrentTrainer({ ...currentTrainer, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateTrainer = () => {\n    TrainerService.updateTrainer(currentTrainer.Trainer_ID, currentTrainer)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Trainer was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteTrainer = () => {\n//     ManagerDataService.remove(currentTrainer.Trainer_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/trainer\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n\n  return (\n    <div>\n      {currentTrainer ? (\n        <div className=\"edit-form\">\n          <h4>Trainer</h4>\n          <form>\n\n\n          <div className=\"form-group\">\n          <label htmlFor=\"Trainer_Name\">Trainer_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={currentTrainer.Trainer_Name}\n            onChange={handleInputChange}\n            name=\"Trainer_Name\"\n          />\n        </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Gender\">Gender</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Gender\"\n                required\n                value={currentTrainer.Gender}\n                onChange={handleInputChange}\n                name=\"Gender\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Blood_Type\">Blood_Type</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Blood_Type\"\n                required\n                value={currentTrainer.Blood_Type}\n                onChange={handleInputChange}\n                name=\"Blood_Type\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Phone\">Phone</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Phone\"\n                required\n                value={currentTrainer.Phone}\n                onChange={handleInputChange}\n                name=\"Phone\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Address\"\n                required\n                value={currentTrainer.Address}\n                onChange={handleInputChange}\n                name=\"Address\"\n              />\n            </div>\n            \n            \n            \n            <div className=\"form-group\">\n              <label htmlFor=\"Emer_Name\">Emer_Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Emer_Name\"\n                required\n                value={currentTrainer.Emer_Name}\n                onChange={handleInputChange}\n                name=\"Emer_Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Emer_Mobile\"\n                required\n                value={currentTrainer.Emer_Mobile}\n                onChange={handleInputChange}\n                name=\"Emer_Mobile\"\n              />\n            </div>\n            <div className=\"form-group\">\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"Workout_Name\"\n            required\n            value={currentTrainer.Workout_Name}\n            onChange={handleInputChange}\n            name=\"Workout_Name\"\n          />\n        </div>\n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteTrainer}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateTrainer}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Trainer...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Trainer;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Workout/EditWorkout.js",["206","207"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport WorkoutService from \"../../services/ManagerService\";\n\nconst Workout = props => {\n    \n    console.log(useParams());\n  const { id } = useParams();\n//  WorkoutService.get(Workout_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Workout_ID);\n  const initialWorkoutState = {\n    Workout_ID:null,\n    Workout_Name:\"\",\n    Workout_DietChart:\"\",\n    Working_Duration:\"\"\n  };\n  const [currentWorkout, setCurrentWorkout] = useState(initialWorkoutState);\n  const [message, setMessage] = useState(\"\");\n\n  const getWorkout = id => {\n    WorkoutService.getWorkout(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentWorkout(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getWorkout(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentWorkout({ ...currentWorkout, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n        Workout_Name:currentWorkout.Workout_Name,\n        Workout_DietChart:currentWorkout.Workout_DietChart,\n        Working_Duration:currentWorkout.Working_Duration\n\n    };\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, data)\n      .then(response => {\n        setCurrentWorkout({ ...currentWorkout, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateWorkout = () => {\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, currentWorkout)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Workout was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteWorkout = () => {\n//     WorkoutService.remove(currentWorkout.Workout_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/workout\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\nconsole.log(currentWorkout);\n  return (\n    <div>\n      {currentWorkout ? (\n        <div className=\"edit-form\">\n          <h4>Workout</h4>\n          <form>\n\n\n          <div className=\"form-group\">\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={currentWorkout.Workout_Name}\n            onChange={handleInputChange}\n            name=\"Workout_Name\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n        <label htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"Workout_DietChart\"\n          required\n          value={currentWorkout.Workout_DietChart}\n          onChange={handleInputChange}\n          name=\"Workout_DietChart\"\n        />\n      </div>\n      <div className=\"form-group\">\n      <label htmlFor=\"Working_Duration\">Working_Duration</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        id=\"Working_Duration\"\n        required\n        value={currentWorkout.Working_Duration}\n        onChange={handleInputChange}\n        name=\"Working_Duration\"\n      />\n    </div>\n           \n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteWorkout}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateWorkout}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Workout...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Workout;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Branch/EditBranch.js",["208","209"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport BranchServices from \"../../services/ManagerService\";\n\nconst Branch = props => {\n    \n    console.log(useParams());\n  const { id } = useParams();\n//  BranchServices.get(Branch_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Branch_ID);\n  const initialBranchState = {\n    Branch_ID:null,\n    Branch_Name: \"\",\n    Branch_Location: \"\",\n    Branch_Email: \"\",\n    Branch_Phone_Number: 0,\n    Manager_Name: \"\",\n    Gender: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Manager_Email: \"\",\n    Password: \"\"\n  };\n  const [currentBranch, setCurrentBranch] = useState(initialBranchState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBranch = id => {\n    BranchServices.getBranch(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentBranch(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getBranch(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentBranch({ ...currentBranch, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n        Branch_Name:currentBranch.Branch_Name,\n        Branch_DietChart:currentBranch.Branch_DietChart,\n        Working_Duration:currentBranch.Working_Duration\n\n    };\n\n    BranchServices.updateBranch(currentBranch.Branch_ID, data)\n      .then(response => {\n        setCurrentBranch({ ...currentBranch, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateBranch = () => {\n    BranchServices.updateBranch(currentBranch.Branch_ID, currentBranch)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Branch was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteBranch = () => {\n//     BranchServices.remove(currentBranch.Branch_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/branch\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\nconsole.log(currentBranch);\n  return (\n    <div>\n      {currentBranch ? (\n        <div className=\"edit-form\">\n          <h4>Branch</h4>\n          <form>\n\n\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Name\">Branch_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={currentBranch.Branch_Name}\n              onChange={handleInputChange}\n              name=\"Branch_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Location\">Branch_Location</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Branch_Location\"\n              required\n              value={currentBranch.Branch_Location}\n              onChange={handleInputChange}\n              name=\"Branch_Location\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Email\">Branch_Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Branch_Email\"\n              required\n              value={currentBranch.Branch_Email}\n              onChange={handleInputChange}\n              name=\"Branch_Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Phone_Number\">Branch_Phone_Number</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Branch_Phone_Number\"\n              required\n              value={currentBranch.Branch_Phone_Number}\n              onChange={handleInputChange}\n              name=\"Branch_Phone_Number\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Manager_Name\">Manager_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Manager_Name\"\n              required\n              value={currentBranch.Manager_Name}\n              onChange={handleInputChange}\n              name=\"Manager_Name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Gender\">Gender</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Gender\"\n              required\n              value={currentBranch.Gender}\n              onChange={handleInputChange}\n              name=\"Gender\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Mobile_Number\"\n              required\n              value={currentBranch.Mobile_Number}\n              onChange={handleInputChange}\n              name=\"Mobile_Number\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Address\">Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Address\"\n              required\n              value={currentBranch.Address}\n              onChange={handleInputChange}\n              name=\"Address\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Manager_Email\">Manager_Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Manager_Email\"\n              required\n              value={currentBranch.Manager_Email}\n              onChange={handleInputChange}\n              name=\"Manager_Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Password\">Password</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Password\"\n              required\n              value={currentBranch.Password}\n              onChange={handleInputChange}\n              name=\"Password\"\n            />\n          </div>\n           \n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteBranch}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateBranch}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Branch...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Branch;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Login.js",["210"],"import React, { useState, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport image from \"../Images/home.jpeg\"\nimport \"./Login.css\"\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = () => {\n  let navigate = useNavigate();\n\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [manager_Email, setManager_Email] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeManager_Email = (e) => {\n    const manager_Email = e.target.value;\n    setManager_Email(manager_Email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(manager_Email, password).then(\n        (response) => {\n          navigate(\"/profile/\" + response.id);\n          // console.log(response);\n\n\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"containerx\">\n      <img src={image} id=\"imgt2\" />\n      {/* <br />\n      <br />\n      <br /> */}\n      <div className=\"screen \">\n        {/* <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        /> */}\n        <div class=\"screen__content\">\n        <Form onSubmit={handleLogin} ref={form} style={{width: \"320px\", padding: \"30px\", paddingTop: \"100px\"}}>\n\t\t\t\t<div class=\"login__field\">\n\t\t\t\t\t<i class=\"login__icon fas fa-user\"></i>\n          <Input\n            type=\"text\"\n            className=\"login__input\"\n            name=\"manager_Email\"\n            placeholder=\"Email\"\n            value={manager_Email}\n            onChange={onChangeManager_Email}\n            validations={[required]}\n          />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"login__field\">\n\t\t\t\t\t<i class=\"login__icon fas fa-lock\"></i>\n          <Input\n            type=\"password\"\n            className=\"login__input\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={onChangePassword}\n            validations={[required]}\n          />\n\t\t\t\t</div>\n\t\t\t\t<button class=\"button login__submit\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n\t\t\t\t\t<i class=\"button__icon fas fa-chevron-right\"></i>\n\t\t\t\t</button>\t\t\t\t\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n\t\t  </div>\n      <div class=\"screen__background\">\n\t\t\t<span class=\"screen__background__shape screen__background__shape4\"></span>\n\t\t\t<span class=\"screen__background__shape screen__background__shape3\"></span>\t\t\n\t\t\t<span class=\"screen__background__shape screen__background__shape2\"></span>\n\t\t\t<span class=\"screen__background__shape screen__background__shape1\"></span>\n\t\t</div>\t\t\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Profile.js",["211","212"],"import React from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { useParams } from \"react-router-dom\";\nimport image from \"../Images/home.jpeg\"\nconst Profile = () => {\n  const currentManager = AuthService.getCurrentManager();\n  console.log(currentManager);\n  // console.log(useParams);\n\n  return (\n    <div className=\"container\">\n      <img src={image} id=\"imgt2\" />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <header className=\"jumbotron\">\n\n        <h3>Branch_Name: <strong>{currentManager.branch.Branch_Name}</strong></h3>\n\n      </header>\n\n      {\n        //   <p>\n        //   <strong>Token:</strong> {currentManager.accessToken.substring(0, 20)} ...{\" \"}\n        //   {currentManager.accessToken.substr(currentManager.accessToken.length - 20)}\n        // </p>\n      }\n      {\n        //   <p>\n        //   <strong>Id:</strong> {currentManager.id}\n        // </p>\n        // <p>\n        //   <strong>Email:</strong> {currentManager.email}\n        // </p>\n      }\n      {\n        //  <ul>\n        //   {currentManager.roles &&\n        //     currentManager.roles.map((role, index) => <li key={index}>{role}</li>)}\n        // </ul>\n      }\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Home.js",["213","214","215","216","217","218","219","220","221","222"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport Typewriter from \"typewriter-effect\";\nimport TypeWriterEffect from 'react-typewriter-effect';\nimport sample from \"../Videos/ropes.mp4\"\nimport image from \"../Images/house.jpeg\"\nimport \"../components/Member/Member.css\"\nconst Home = () => {\n  //   const particlesInit = async (main) => {\n  //   console.log(main);\n\n  //   // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  //   // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n  //   // starting from v2 you can add only the features you need reducing the bundle size\n  //   await loadFull(main);\n  // };\n\n  // const particlesLoaded = (container) => {\n  //   console.log(container);\n  //};\n  return (\n    <div align=\"center\">\n      <img src={image} id=\"imgt\" />\n      {/* <TypeWriterEffect\n        textStyle={{\n          fontFamily: 'Montserrat',\n          color: 'white',\n          fontWeight: 'Bold',\n          fontSize: '3em',\n        }}\n        startDelay={500}\n        cursorColor=\"#3F3D56\"\n        multiText={[\n          ' IF YOU DON\\'T KNOW WHERE YOU ARE GOING, YOU WILL WIND UP SOMEWHERE ELSE. -YOGI BERRA',\n\n        ]}\n        multiTextDelay={1000}\n        typeSpeed={80}\n      /> */}\n      <h1 className=\"homename\">GYM</h1>\n    </div>\n\n  )\n}\n\nexport default Home;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/ShowMembers.js",["223","224","225","226","227","228","229"],"import React, { useState, useEffect } from \"react\";\nimport ManagerService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Table } from \"react-bootstrap\";\nimport \"./Member.css\";\nimport image from \"../../Images/home.jpeg\"\nconst MemberList = () => {\n  const { id } = useParams();\n  const [member, setMember] = useState([]);\n  const [currentMember, setCurrentMember] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveMembers();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveMembers = () => {\n    ManagerService.getAll(id)\n      .then(response => {\n        setMember(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveMembers();\n    setCurrentMember(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveMember = (member, index) => {\n    setCurrentMember(member);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllMembers = () => {\n  //     MemberDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     MemberDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setMember(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  const deleteMember = (Mem_ID) => {\n    console.log(Mem_ID);\n    ManagerService.removeMember(Mem_ID)\n      .then(response => {\n        console.log(response.data);\n        refreshList();\n      })\n  }\n\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\" textAlign='center'>\n        <h4 className=\"lab\">MEMBERS LIST</h4>\n        <br />\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.7\", textAlign: \"center\", borderRadius: '20px', verticalAlign: 'center' }}>\n          <thead>\n            <tr>\n\n              <th>ID</th>\n              <th>Name</th>\n              <th>Phone</th>\n              <th>Weight</th>\n              <th>Height</th>\n              <th>Age</th>\n              <th>Gender</th>\n              <th>Blood Group</th>\n              <th>Address</th>\n              <th>Emergency Name</th>\n              <th>Emergency Mobile</th>\n              <th>Update/Delete</th>\n            </tr>\n          </thead>\n          {member &&\n            member.map((member, index) => (\n              <tr>\n                <td>{member.Mem_ID}</td>\n                <td>{member.Mem_Name}</td>\n                <td>{member.Mobile_Number}</td>\n                <td>{member.Mem_Weight}</td>\n                <td>{member.Mem_Height}</td>\n                <td>{member.Age}</td>\n                <td>{member.Gender}</td>\n                <td>{member.Blood_Type}</td>\n                <td>{member.Address}</td>\n                <td>{member.Emer_Name}</td>\n                <td>{member.Emer_Mobile}</td>\n                <td align=\"right\"><button className=\"btn-danger pqy\" align=\"left\" onClick={() => { deleteMember(member.Mem_ID) }}>Delete</button>\n                  <Link style={{ textAlign: \"left\" }}\n                    to={\"/editmember/\" + member.Mem_ID}\n                    className=\"badge badge-warning pqy\">\n                    Edit\n                  </Link></td>\n              </tr>\n            ))}\n        </Table>\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllMembers}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //   <div className=\"col-md-6\">\n        //   {currentMember ? (\n        //     <div>\n        //       <h4>Members</h4>\n        //       <div>\n        //         <label>\n        //           <strong>Mem_Name:</strong>\n        //         </label>{\" \"}\n\n        //         {currentMember.Mem_ID}\n        //       </div>\n        //       <Link\n        //         to={\"/editmember/\" + currentMember.Mem_ID}\n        //         className=\"badge badge-warning\"\n        //       >\n        //         Edit\n        //       </Link>\n        //     </div>\n        //   ) : (\n        //     <div>\n        //       <br />\n        //       <p>Please click on a Member...</p>\n        //     </div>\n        //   )}\n        // </div>\n      }\n    </div>\n  );\n};\n\nexport default MemberList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/Member.js",["230","231","232"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ManagerDataService from \"../../services/ManagerService\";\nimport \"./Member.css\";\nimport image from \"../../Images/home.jpeg\"\nimport { Card } from \"react-bootstrap\";\n\nconst Member = props => {\n    \n    console.log(useParams());\n  const { Mem_ID } = useParams();\n//  ManagerDataService.get(Mem_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(Mem_ID);\n  let navigate = useNavigate();\n  // console.log(Mem_ID);\n  const initialMemberState = {\n    Mem_ID: null,\n    Mem_Name: \"\",\n    Mem_Weight: 0,\n    Mem_Height: 0,\n    Age: 0,\n    Gender: \"\",\n    Blood_Type: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Emer_Name: \"\",\n    Emer_Mobile: 0\n  };\n  const [currentMember, setCurrentMember] = useState(initialMemberState);\n  const [message, setMessage] = useState(\"\");\n\n  const getMember = Mem_ID => {\n    ManagerDataService.get(Mem_ID)\n      .then(response => {\n        console.log(response.data);\n        setCurrentMember(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (Mem_ID)\n      getMember(Mem_ID);\n  }, [Mem_ID]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentMember({ ...currentMember, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      Mem_ID: currentMember.Mem_ID,\n      Mem_Name: currentMember.Mem_Name,\n      Mem_Weight: currentMember.Mem_Weight,\n      Mem_Height: currentMember.Mem_Height,\n      Age: currentMember.Age,\n      Gender: currentMember.Gender,\n      Blood_Type: currentMember.Blood_Type,\n      Mobile_Number: currentMember.Mobile_Number,\n      Address: currentMember.Address,\n      Emer_Name: currentMember.Emer_Name,\n      Emer_Mobile: currentMember.Emer_Mobile\n\n    };\n\n    ManagerDataService.update(currentMember.Mem_ID, data)\n      .then(response => {\n        setCurrentMember({ ...currentMember, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateMember = () => {\n    ManagerDataService.update(currentMember.Mem_ID, currentMember)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Member was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteMember = () => {\n//     ManagerDataService.remove(currentMember.Mem_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/member\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n\n  return (\n    <div className=\"member-submit-form\" id=\"member\">\n      <img src={image} id=\"imgt2\" />\n      <Card style={{ height: '60rem', width: '50rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\n      {currentMember ? (\n        <div className=\"edit-form\">\n          <h4>Member</h4>\n          <form>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Mem_Name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"title\"\n                required\n                value={currentMember.Mem_Name}\n                onChange={handleInputChange}\n                name=\"Mem_Name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Mem_Weight\">Weight</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Mem_Weight\"\n                required\n                value={currentMember.Mem_Weight}\n                onChange={handleInputChange}\n                name=\"Mem_Weight\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Mem_Height\">Height</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Mem_Height\"\n                required\n                value={currentMember.Mem_Height}\n                onChange={handleInputChange}\n                name=\"Mem_Height\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Age\">Age</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Age\"\n                required\n                value={currentMember.Age}\n                onChange={handleInputChange}\n                name=\"Age\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Gender\">Gender</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Gender\"\n                required\n                value={currentMember.Gender}\n                onChange={handleInputChange}\n                name=\"Gender\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Blood_Type\">Blood Group</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Blood_Type\"\n                required\n                value={currentMember.Blood_Type}\n                onChange={handleInputChange}\n                name=\"Blood_Type\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Mobile_Number\">Mobile Number</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Mobile_Number\"\n                required\n                value={currentMember.Mobile_Number}\n                onChange={handleInputChange}\n                name=\"Mobile_Number\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Address\"\n                required\n                value={currentMember.Address}\n                onChange={handleInputChange}\n                name=\"Address\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Emer_Name\">Emergency Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Emer_Name\"\n                required\n                value={currentMember.Emer_Name}\n                onChange={handleInputChange}\n                name=\"Emer_Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" align=\"center\" htmlFor=\"Emer_Mobile\">Emerergency Contact</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Emer_Mobile\"\n                required\n                value={currentMember.Emer_Mobile}\n                onChange={handleInputChange}\n                name=\"Emer_Mobile\"\n              />\n            </div>\n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteMember}>\n        //     Delete\n        //   </button>\n        }\n          <button  onClick={updateMember} class=\"btn btn-outline-info tempBtn\">Update</button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Member...</p>\n        </div>\n      )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Member;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member/AddMember.js",["233"],"import React, { useState } from \"react\";\nimport MemberDataService from \"../../services/ManagerService\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Member.css\";\nimport image from \"../../Images/home.jpeg\"\nimport { Card } from \"react-bootstrap\";\nconst AddMember = () => {\n  const { id } = useParams();\n  const initialMemberState = {\n    Mem_ID: null,\n    Mem_Name: \"\",\n    Mem_Weight: 0,\n    Mem_Height: 0,\n    Age: 0,\n    Gender: \"\",\n    Blood_Type: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Emer_Name: \"\",\n    Emer_Mobile: 0\n  };\n  const [member, setMember] = useState(initialMemberState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setMember({ ...member, [name]: value });\n  };\n\n  const saveMember = () => {\n    var data = {\n      Mem_Name: member.Mem_Name,\n      Mem_Weight: member.Mem_Weight,\n      Mem_Height: member.Mem_Height,\n      Age: member.Age,\n      Gender: member.Gender,\n      Blood_Type: member.Blood_Type,\n      Mobile_Number: member.Mobile_Number,\n      Address: member.Address,\n      Emer_Name: member.Emer_Name,\n      Emer_Mobile: member.Emer_Mobile\n    };\n\n    MemberDataService.create(id, data)\n      .then(response => {\n        setMember({\n          Mem_ID: response.data.Mem_ID,\n          Mem_Name: response.data.Mem_Name,\n          Mem_Weight: response.data.Mem_Weight,\n          Mem_Height: response.data.Mem_Height,\n          Age: response.data.Age,\n          Gender: response.data.Gender,\n          Blood_Type: response.data.Blood_Type,\n          Mobile_Number: response.data.Mobile_Number,\n          Address: response.data.Address,\n          Emer_Name: response.data.Emer_Name,\n          Emer_Mobile: response.data.Emer_Mobile\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newMember = () => {\n    setMember(initialMemberState);\n    setSubmitted(false);\n  };\n\n  return (\n\n    <div className=\"member-submit-form\" id=\"member\" >\n      <img src={image} id=\"imgt2\" />\n      <Card style={{ height: '60rem', width: '50rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '30px', background: 'transparent', borderColor: 'transparent' }}>\n\n        {submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={newMember}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <br />\n              <br />\n              <label className=\"lab f\" htmlFor=\"Mem_Name\" align=\"center\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"title\"\n                required\n                size=\"20\"\n                value={member.Mem_Name} ß\n                onChange={handleInputChange}\n                name=\"Mem_Name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Mem_Weight\" align=\"center\">Weight</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Mem_Weight\"\n                required\n                value={member.Mem_Weight}\n                onChange={handleInputChange}\n                name=\"Mem_Weight\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Mem_Height\" align=\"center\">Height</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Mem_Height\"\n                required\n                value={member.Mem_Height}\n                onChange={handleInputChange}\n                name=\"Mem_Height\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Age\" align=\"center\">Age</label>\n              <input\n                type=\"number\"\n                className=\"form-control int\"\n                id=\"Age\"\n                required\n                value={member.Age}\n                onChange={handleInputChange}\n                name=\"Age\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Gender\" align=\"center\">Gender</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Gender\"\n                required\n                value={member.Gender}\n                onChange={handleInputChange}\n                name=\"Gender\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Blood_Type\" align=\"center\">Blood Group</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Blood_Type\"\n                required\n                value={member.Blood_Type}\n                onChange={handleInputChange}\n                name=\"Blood_Type\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Mobile_Number\" align=\"center\">Mobile Number</label>\n              <input\n                type=\"tel\"\n                className=\"form-control int\"\n                id=\"Mobile_Number\"\n                required\n                value={member.Mobile_Number}\n                onChange={handleInputChange}\n                name=\"Mobile_Number\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Address\" align=\"center\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Address\"\n                required\n                value={member.Address}\n                onChange={handleInputChange}\n                name=\"Address\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Emer_Name\" align=\"center\">Emergency Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control int\"\n                id=\"Emer_Name\"\n                required\n                value={member.Emer_Name}\n                onChange={handleInputChange}\n                name=\"Emer_Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"lab\" htmlFor=\"Emer_Mobile\" align=\"center\">Emergency Contact</label>\n              <input\n                type=\"tel\"\n                className=\"form-control int\"\n                id=\"Emer_Mobile\"\n                required\n                value={member.Emer_Mobile}\n                onChange={handleInputChange}\n                name=\"Emer_Mobile\"\n              />\n            </div>\n            <br />\n            <button  onClick={saveMember} class=\"btn btn-outline-info tempBtn\">Submit</button>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default AddMember;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment/ShowPayment.js",["234","235","236","237","238","239","240","241","242"],"import React, { useState, useEffect } from \"react\";\nimport PaymentService from \"../../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport \"../Member/Member.css\";\nimport image from \"../../Images/home.jpeg\"\n\nconst PaymentList = () => {\n  const { id } = useParams();\n  const [payment, setPayment] = useState([]);\n  const [currentPayment, setCurrentPayment] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrievePayments();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrievePayments = () => {\n    PaymentService.showPayment(id)\n      .then(response => {\n        setPayment(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrievePayments();\n    setCurrentPayment(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActivePayment = (payment, index) => {\n    setCurrentPayment(payment);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllPayments = () => {\n  //     PaymentDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     PaymentDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setPayment(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(payment)\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\" textAlign='center'>\n        <h4 className=\"lab\">PAYMENTS LIST</h4>\n        <br />\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.7\", textAlign: \"center\", borderRadius: '20px', verticalAlign: 'center' }}>\n          <thead>\n            <tr>\n\n              <th>ID</th>\n              <th>Description</th>\n              <th>Amount</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Member ID</th>\n              <th>Workout ID</th>\n            </tr>\n          </thead>\n\n          {payment.map((payment, index) => (\n            <tr>\n              <td>{payment.Payment_ID}</td>\n              <td>{payment.Payment_Desc}</td>\n              <td>{payment.Payment_Amt}</td>\n              <td>{payment.Payment_Date}</td>\n              <td>{payment.Payment_Time}</td>\n              <td>{payment.Member_ID}</td>\n              <td>{payment.Workout_ID}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {payment &&\n            payment.map((payment, index) => (\n              <li\n                className={\n                  \"list-group-item \"\n                }\n\n\n                key={index}\n              >\n                {payment.Payment_ID}                  {payment.Payment_Desc}\n              </li>\n\n\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllPayments}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentPayment ? (\n        //       <div>\n        //         <h4>Payments</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentPayment.Payment_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/editpayment/\" + currentPayment.Payment_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Payment...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div>\n  );\n};\n\nexport default PaymentList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment/Payment.js",["243"],"import React, { useState } from \"react\";\nimport PaymentService from \"../../services/ManagerService\";\nimport { useParams } from \"react-router-dom\";\nimport image from \"../../Images/home.jpeg\"\nimport \"../Member/Member.css\";\nimport { Card } from \"react-bootstrap\";\nconst AddPayment = () => {\n    const {id}=useParams();\n    console.log(id);\n  const initialPaymentState = {\n    Payment_Desc:\"\",\n    Payment_Time:\"\",\n    Payment_Date:\"\",\n    Payment_Amt:0,\n    Member_ID:0,\n    Workout_Name:\"\"\n  };\n  const [payment, setPayment] = useState(initialPaymentState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setPayment({ ...payment, [name]: value });\n  };\n\n  const savePayment = () => {\n    var data = {\n      Payment_Desc:payment.Payment_Desc,\n      Payment_Time:payment.Payment_Time,\n      Payment_Date:payment.Payment_Date,\n      Payment_Amt:payment.Payment_Amt,\n      Member_ID:payment.Member_ID,\n      Workout_Name:payment.Workout_Name\n    };\n\n    PaymentService.createPayment(data)\n      .then(response => {\n        setPayment({\n            Payment_Desc:response.data.Payment_Desc,\n            Payment_Time:response.data.Payment_Time,\n            Payment_Date:response.data.Payment_Date,\n            Payment_Amt:response.data.Payment_Amt,\n            Member_ID:response.data.Member_ID,\n            Workout_Name:response.data.Workout_Name\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newPayment = () => {\n    setPayment(initialPaymentState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"member-submit-form\" id=\"member\">\n    <img src={image} id=\"imgt2\" />\n    <br />\n    <br />\n    <br />\n    <br />\n    <Card style={{ height: '60rem', width: '50rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newPayment}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Payment_Desc\">Payment Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"title\"\n              required\n              value={payment.Payment_Desc}\n              onChange={handleInputChange}\n              name=\"Payment_Desc\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Payment_Time\">Time</label>\n            <input\n              type=\"time\"\n              className=\"form-control int\"\n              id=\"Payment_Time\"\n              required\n              value={payment.Payment_Time}\n              onChange={handleInputChange}\n              name=\"Payment_Time\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Payment_Date\">Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control int\"\n              id=\"Payment_Date\"\n              required\n              value={payment.Payment_Date}\n              onChange={handleInputChange}\n              name=\"Payment_Date\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Payment_Amt\">Amount</label>\n            <input\n              type=\"number\"\n              className=\"form-control int\"\n              id=\"Payment_Amt\"\n              required\n              value={payment.Payment_Amt}\n              onChange={handleInputChange}\n              name=\"Payment_Amt\"\n            />\n          </div>  \n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Member_ID\">Member ID</label>\n            <input\n              type=\"number\"\n              className=\"form-control int\"\n              id=\"Member_ID\"\n              required\n              value={payment.Member_ID}\n              onChange={handleInputChange}\n              name=\"Member_ID\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"lab\" align = \"center\" htmlFor=\"Workout_Name\">Workout Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control int\"\n              id=\"Workout_Name\"\n              required\n              value={payment.Workout_Name}\n              onChange={handleInputChange}\n              name=\"Workout_Name\"\n            />\n          </div>\n          <br />\n          <br />      \n          <button  onClick={savePayment} class=\"btn btn-outline-info tempBtn\">Submit</button>\n        </div>\n      )}\n      </Card>\n    </div>\n  );\n};\n\nexport default AddPayment;\n","/Users/khushil/Project/DBMS_Project/gamma/src/services/user.service.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/services/ManagerService.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/services/auth-header.js",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":17},{"ruleId":"248","severity":1,"message":"252","line":31,"column":10,"nodeType":"250","messageId":"251","endLine":31,"endColumn":18},{"ruleId":"248","severity":1,"message":"253","line":32,"column":8,"nodeType":"250","messageId":"251","endLine":32,"endColumn":20},{"ruleId":"248","severity":1,"message":"254","line":37,"column":7,"nodeType":"250","messageId":"251","endLine":37,"endColumn":15},{"ruleId":"248","severity":1,"message":"255","line":38,"column":10,"nodeType":"250","messageId":"251","endLine":38,"endColumn":25},{"ruleId":"248","severity":1,"message":"256","line":39,"column":10,"nodeType":"250","messageId":"251","endLine":39,"endColumn":25},{"ruleId":"248","severity":1,"message":"257","line":40,"column":10,"nodeType":"250","messageId":"251","endLine":40,"endColumn":27},{"ruleId":"248","severity":1,"message":"258","line":40,"column":29,"nodeType":"250","messageId":"251","endLine":40,"endColumn":49},{"ruleId":"248","severity":1,"message":"259","line":41,"column":10,"nodeType":"250","messageId":"251","endLine":41,"endColumn":27},{"ruleId":"248","severity":1,"message":"260","line":41,"column":29,"nodeType":"250","messageId":"251","endLine":41,"endColumn":49},{"ruleId":"248","severity":1,"message":"261","line":42,"column":10,"nodeType":"250","messageId":"251","endLine":42,"endColumn":28},{"ruleId":"248","severity":1,"message":"262","line":42,"column":30,"nodeType":"250","messageId":"251","endLine":42,"endColumn":51},{"ruleId":"248","severity":1,"message":"263","line":43,"column":10,"nodeType":"250","messageId":"251","endLine":43,"endColumn":25},{"ruleId":"248","severity":1,"message":"264","line":43,"column":27,"nodeType":"250","messageId":"251","endLine":43,"endColumn":45},{"ruleId":"248","severity":1,"message":"265","line":44,"column":9,"nodeType":"250","messageId":"251","endLine":44,"endColumn":22},{"ruleId":"248","severity":1,"message":"266","line":53,"column":9,"nodeType":"250","messageId":"251","endLine":53,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":57,"column":5,"nodeType":"269","endLine":57,"endColumn":35},{"ruleId":"248","severity":1,"message":"270","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":53,"column":5,"nodeType":"269","endLine":53,"endColumn":35},{"ruleId":"248","severity":1,"message":"271","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":24},{"ruleId":"248","severity":1,"message":"272","line":10,"column":10,"nodeType":"250","messageId":"251","endLine":10,"endColumn":22},{"ruleId":"248","severity":1,"message":"273","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":24},{"ruleId":"274","severity":1,"message":"275","line":15,"column":6,"nodeType":"276","endLine":15,"endColumn":8,"suggestions":"277"},{"ruleId":"248","severity":1,"message":"278","line":17,"column":9,"nodeType":"250","messageId":"251","endLine":17,"endColumn":31},{"ruleId":"248","severity":1,"message":"279","line":33,"column":9,"nodeType":"250","messageId":"251","endLine":33,"endColumn":20},{"ruleId":"248","severity":1,"message":"280","line":39,"column":9,"nodeType":"250","messageId":"251","endLine":39,"endColumn":25},{"ruleId":"267","severity":1,"message":"268","line":68,"column":7,"nodeType":"269","endLine":68,"endColumn":37},{"ruleId":"267","severity":1,"message":"268","line":77,"column":5,"nodeType":"269","endLine":77,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":77,"column":5,"nodeType":"269","endLine":77,"endColumn":35},{"ruleId":"248","severity":1,"message":"281","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":26},{"ruleId":"248","severity":1,"message":"272","line":10,"column":10,"nodeType":"250","messageId":"251","endLine":10,"endColumn":22},{"ruleId":"248","severity":1,"message":"273","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":24},{"ruleId":"274","severity":1,"message":"282","line":15,"column":6,"nodeType":"276","endLine":15,"endColumn":8,"suggestions":"283"},{"ruleId":"248","severity":1,"message":"278","line":17,"column":9,"nodeType":"250","messageId":"251","endLine":17,"endColumn":31},{"ruleId":"248","severity":1,"message":"279","line":33,"column":9,"nodeType":"250","messageId":"251","endLine":33,"endColumn":20},{"ruleId":"248","severity":1,"message":"284","line":39,"column":9,"nodeType":"250","messageId":"251","endLine":39,"endColumn":27},{"ruleId":"267","severity":1,"message":"268","line":68,"column":7,"nodeType":"269","endLine":68,"endColumn":37},{"ruleId":"248","severity":1,"message":"270","line":3,"column":16,"nodeType":"250","messageId":"251","endLine":3,"endColumn":25},{"ruleId":"248","severity":1,"message":"285","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":24},{"ruleId":"248","severity":1,"message":"272","line":12,"column":10,"nodeType":"250","messageId":"251","endLine":12,"endColumn":22},{"ruleId":"248","severity":1,"message":"279","line":35,"column":9,"nodeType":"250","messageId":"251","endLine":35,"endColumn":20},{"ruleId":"248","severity":1,"message":"286","line":41,"column":9,"nodeType":"250","messageId":"251","endLine":41,"endColumn":25},{"ruleId":"267","severity":1,"message":"268","line":70,"column":5,"nodeType":"269","endLine":70,"endColumn":35},{"ruleId":"248","severity":1,"message":"287","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":31},{"ruleId":"248","severity":1,"message":"272","line":10,"column":10,"nodeType":"250","messageId":"251","endLine":10,"endColumn":22},{"ruleId":"248","severity":1,"message":"288","line":39,"column":9,"nodeType":"250","messageId":"251","endLine":39,"endColumn":32},{"ruleId":"248","severity":1,"message":"289","line":44,"column":9,"nodeType":"250","messageId":"251","endLine":44,"endColumn":33},{"ruleId":"267","severity":1,"message":"268","line":68,"column":5,"nodeType":"269","endLine":68,"endColumn":35},{"ruleId":"248","severity":1,"message":"254","line":16,"column":7,"nodeType":"250","messageId":"251","endLine":16,"endColumn":15},{"ruleId":"248","severity":1,"message":"290","line":49,"column":9,"nodeType":"250","messageId":"251","endLine":49,"endColumn":24},{"ruleId":"248","severity":1,"message":"254","line":16,"column":7,"nodeType":"250","messageId":"251","endLine":16,"endColumn":15},{"ruleId":"248","severity":1,"message":"290","line":56,"column":9,"nodeType":"250","messageId":"251","endLine":56,"endColumn":24},{"ruleId":"248","severity":1,"message":"254","line":16,"column":7,"nodeType":"250","messageId":"251","endLine":16,"endColumn":15},{"ruleId":"248","severity":1,"message":"290","line":48,"column":9,"nodeType":"250","messageId":"251","endLine":48,"endColumn":24},{"ruleId":"248","severity":1,"message":"254","line":16,"column":7,"nodeType":"250","messageId":"251","endLine":16,"endColumn":15},{"ruleId":"248","severity":1,"message":"290","line":55,"column":9,"nodeType":"250","messageId":"251","endLine":55,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":76,"column":7,"nodeType":"269","endLine":76,"endColumn":37},{"ruleId":"248","severity":1,"message":"270","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":12,"column":7,"nodeType":"269","endLine":12,"endColumn":37},{"ruleId":"248","severity":1,"message":"291","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"292","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"270","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":19},{"ruleId":"248","severity":1,"message":"293","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":17},{"ruleId":"248","severity":1,"message":"294","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":18},{"ruleId":"248","severity":1,"message":"295","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":18},{"ruleId":"248","severity":1,"message":"296","line":7,"column":8,"nodeType":"250","messageId":"251","endLine":7,"endColumn":24},{"ruleId":"248","severity":1,"message":"297","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":14},{"ruleId":"267","severity":1,"message":"268","line":26,"column":7,"nodeType":"269","endLine":26,"endColumn":36},{"ruleId":"248","severity":1,"message":"298","line":10,"column":10,"nodeType":"250","messageId":"251","endLine":10,"endColumn":23},{"ruleId":"248","severity":1,"message":"272","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":22},{"ruleId":"248","severity":1,"message":"273","line":12,"column":10,"nodeType":"250","messageId":"251","endLine":12,"endColumn":24},{"ruleId":"274","severity":1,"message":"299","line":16,"column":6,"nodeType":"276","endLine":16,"endColumn":8,"suggestions":"300"},{"ruleId":"248","severity":1,"message":"278","line":18,"column":9,"nodeType":"250","messageId":"251","endLine":18,"endColumn":31},{"ruleId":"248","severity":1,"message":"301","line":40,"column":9,"nodeType":"250","messageId":"251","endLine":40,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":77,"column":7,"nodeType":"269","endLine":77,"endColumn":37},{"ruleId":"248","severity":1,"message":"254","line":19,"column":7,"nodeType":"250","messageId":"251","endLine":19,"endColumn":15},{"ruleId":"248","severity":1,"message":"290","line":58,"column":9,"nodeType":"250","messageId":"251","endLine":58,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":108,"column":7,"nodeType":"269","endLine":108,"endColumn":37},{"ruleId":"267","severity":1,"message":"268","line":75,"column":7,"nodeType":"269","endLine":75,"endColumn":37},{"ruleId":"248","severity":1,"message":"302","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":14},{"ruleId":"248","severity":1,"message":"303","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":24},{"ruleId":"248","severity":1,"message":"272","line":12,"column":10,"nodeType":"250","messageId":"251","endLine":12,"endColumn":22},{"ruleId":"248","severity":1,"message":"273","line":13,"column":10,"nodeType":"250","messageId":"251","endLine":13,"endColumn":24},{"ruleId":"274","severity":1,"message":"304","line":17,"column":6,"nodeType":"276","endLine":17,"endColumn":8,"suggestions":"305"},{"ruleId":"248","severity":1,"message":"278","line":19,"column":9,"nodeType":"250","messageId":"251","endLine":19,"endColumn":31},{"ruleId":"248","severity":1,"message":"279","line":35,"column":9,"nodeType":"250","messageId":"251","endLine":35,"endColumn":20},{"ruleId":"248","severity":1,"message":"306","line":41,"column":9,"nodeType":"250","messageId":"251","endLine":41,"endColumn":25},{"ruleId":"267","severity":1,"message":"268","line":70,"column":7,"nodeType":"269","endLine":70,"endColumn":37},{"ruleId":"267","severity":1,"message":"268","line":61,"column":5,"nodeType":"269","endLine":61,"endColumn":35},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'DropdownItem' is defined but never used.","'navigate' is assigned a value but never used.","'showDropdownMem' is assigned a value but never used.","'showDropdownPay' is assigned a value but never used.","'showDropdownTrain' is assigned a value but never used.","'setShowDropdownTrain' is assigned a value but never used.","'showDropdownEquip' is assigned a value but never used.","'setShowDropdownEquip' is assigned a value but never used.","'showDropdownBranch' is assigned a value but never used.","'setShowDropdownBranch' is assigned a value but never used.","'showDropdownWor' is assigned a value but never used.","'setShowDropdownWor' is assigned a value but never used.","'particlesInit' is assigned a value but never used.","'particlesLoaded' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","'currentTrainer' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'searchMem_Name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveTrainers'. Either include it or remove the dependency array.","ArrayExpression",["309"],"'onChangeSearchMem_Name' is assigned a value but never used.","'refreshList' is assigned a value but never used.","'setActiveTrainer' is assigned a value but never used.","'currentEquipment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveEquipments'. Either include it or remove the dependency array.",["310"],"'setActiveEquipment' is assigned a value but never used.","'currentWorkout' is assigned a value but never used.","'setActiveWorkout' is assigned a value but never used.","'currentBranch_Manager' is assigned a value but never used.","'setActiveBranch_Manager' is assigned a value but never used.","'removeAllBranch_Managers' is assigned a value but never used.","'updatePublished' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserService' is defined but never used.","'loadFull' is defined but never used.","'Typewriter' is defined but never used.","'TypeWriterEffect' is defined but never used.","'sample' is defined but never used.","'currentMember' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveMembers'. Either include it or remove the dependency array.",["311"],"'setActiveMember' is assigned a value but never used.","'Link' is defined but never used.","'currentPayment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrievePayments'. Either include it or remove the dependency array.",["312"],"'setActivePayment' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"Update the dependencies array to be: [retrieveTrainers]",{"range":"321","text":"322"},"Update the dependencies array to be: [retrieveEquipments]",{"range":"323","text":"324"},"Update the dependencies array to be: [retrieveMembers]",{"range":"325","text":"326"},"Update the dependencies array to be: [retrievePayments]",{"range":"327","text":"328"},[582,584],"[retrieveTrainers]",[595,597],"[retrieveEquipments]",[597,599],"[retrieveMembers]",[613,615],"[retrievePayments]"]