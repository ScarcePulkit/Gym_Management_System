[{"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\index.js":"1","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\serviceWorker.js":"2","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\App.js":"3","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Login.js":"4","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\BoardUser.js":"5","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Register.js":"6","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\BoardModerator.js":"7","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Profile.js":"8","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\BoardAdmin.js":"9","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\common\\EventBus.js":"10","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\services\\auth.service.js":"11","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Home.js":"12","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\services\\user.service.js":"13","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\services\\ManagerService.js":"14","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\services\\auth-header.js":"15","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Member\\Member.js":"16","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Member\\AddMember.js":"17","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Member\\ShowMembers.js":"18","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Payment\\Payment.js":"19","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Payment\\ShowPayment.js":"20","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Branch\\EditBranch.js":"21","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Equipment\\AddEquipment.js":"22","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Equipment\\EditEquipment.js":"23","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Equipment\\ShowEquipment.js":"24","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Trainer\\AddTrainer.js":"25","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Branch\\ShowBranches.js":"26","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Trainer\\ShowTrainer.js":"27","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Branch\\AddBranch.js":"28","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Workout\\AddWorkout.js":"29","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Trainer\\EditTrainer.js":"30","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Workout\\EditWorkout.js":"31","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Workout\\ShowWorkout.js":"32"},{"size":334,"mtime":1649875627332,"results":"33","hashOfConfig":"34"},{"size":5227,"mtime":1649875627341,"results":"35","hashOfConfig":"34"},{"size":13662,"mtime":1651057148122,"results":"36","hashOfConfig":"34"},{"size":4171,"mtime":1651057148182,"results":"37","hashOfConfig":"34"},{"size":931,"mtime":1649875627252,"results":"38","hashOfConfig":"34"},{"size":4815,"mtime":1649875627266,"results":"39","hashOfConfig":"34"},{"size":946,"mtime":1649875627247,"results":"40","hashOfConfig":"34"},{"size":1533,"mtime":1651066949623,"results":"41","hashOfConfig":"34"},{"size":934,"mtime":1649875627231,"results":"42","hashOfConfig":"34"},{"size":340,"mtime":1649875627227,"results":"43","hashOfConfig":"34"},{"size":868,"mtime":1650045259985,"results":"44","hashOfConfig":"34"},{"size":1602,"mtime":1650928327591,"results":"45","hashOfConfig":"34"},{"size":651,"mtime":1649875627378,"results":"46","hashOfConfig":"34"},{"size":3093,"mtime":1650916523811,"results":"47","hashOfConfig":"34"},{"size":351,"mtime":1649875627346,"results":"48","hashOfConfig":"34"},{"size":8403,"mtime":1651057148189,"results":"49","hashOfConfig":"34"},{"size":7522,"mtime":1651068063052,"results":"50","hashOfConfig":"34"},{"size":5114,"mtime":1651061597296,"results":"51","hashOfConfig":"34"},{"size":5304,"mtime":1651057148195,"results":"52","hashOfConfig":"34"},{"size":4635,"mtime":1651062457269,"results":"53","hashOfConfig":"34"},{"size":7372,"mtime":1650916523772,"results":"54","hashOfConfig":"34"},{"size":5768,"mtime":1651063070833,"results":"55","hashOfConfig":"34"},{"size":5041,"mtime":1650916523778,"results":"56","hashOfConfig":"34"},{"size":5143,"mtime":1651063387481,"results":"57","hashOfConfig":"34"},{"size":6656,"mtime":1651063066409,"results":"58","hashOfConfig":"34"},{"size":5519,"mtime":1651067175999,"results":"59","hashOfConfig":"34"},{"size":5546,"mtime":1651068022159,"results":"60","hashOfConfig":"34"},{"size":7902,"mtime":1651067671345,"results":"61","hashOfConfig":"34"},{"size":5232,"mtime":1651064121522,"results":"62","hashOfConfig":"34"},{"size":6958,"mtime":1650916523804,"results":"63","hashOfConfig":"34"},{"size":4298,"mtime":1650916523808,"results":"64","hashOfConfig":"34"},{"size":4854,"mtime":1651064693249,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"502ez6",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"68"},"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\index.js",[],["149","150"],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\serviceWorker.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\App.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport AddMember from \"./components/Member/AddMember\";\r\nimport EditMember from \"./components/Member/Member\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport ShowMembers from \"./components/Member/ShowMembers\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport BoardUser from \"./components/BoardUser\";\r\nimport BoardModerator from \"./components/BoardModerator\";\r\nimport BoardAdmin from \"./components/BoardAdmin\";\r\nimport Payment from \"./components/Payment/Payment\";\r\nimport EventBus from \"./common/EventBus\";\r\nimport ShowPayment from \"./components/Payment/ShowPayment\";\r\nimport AddEquipment from \"./components/Equipment/AddEquipment\";\r\nimport AddTrainer from \"./components/Trainer/AddTrainer\";\r\nimport ShowEquipment from \"./components/Equipment/ShowEquipment\";\r\nimport ShowTrainer from \"./components/Trainer/ShowTrainer\";\r\nimport AddWorkout from \"./components/Workout/AddWorkout\";\r\nimport ShowWorkout from \"./components/Workout/ShowWorkout\";\r\nimport AddBranches from \"./components/Branch/AddBranch\";\r\nimport ShowBranches from \"./components/Branch/ShowBranches\";\r\nimport EditWorkout from \"./components/Workout/EditWorkout\";\r\nimport EditBranch from \"./components/Branch/EditBranch\";\r\nimport { Dropdown, Navbar, Container, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport DropdownItem from \"react-bootstrap/esm/DropdownItem\";\r\nimport EditTrainer from \"./components/Trainer/EditTrainer\";\r\nimport EditEquipment from \"./components/Equipment/EditEquipment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst App = () => {\r\n  let navigate = useNavigate();\r\n  const [showDropdownMem, setShowDropdownMem] = useState(false);\r\n  const [showDropdownPay, setShowDropdownPay] = useState(false);\r\n  const [showDropdownTrain, setShowDropdownTrain] = useState(false);\r\n  const [showDropdownEquip, setShowDropdownEquip] = useState(false);\r\n  const [showDropdownBranch, setShowDropdownBranch] = useState(false);\r\n  const [showDropdownWor, setShowDropdownWor] = useState(false);\r\n  const particlesInit = async (main) => {\r\n    console.log(main);\r\n\r\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n    // starting from v2 you can add only the features you need reducing the bundle size\r\n    await loadFull(main);\r\n  };\r\n\r\n  const particlesLoaded = (container) => {\r\n    console.log(container);\r\n  };\r\n  // const [showModeratorBoard, setShowModeratorBoard] = useState(false);\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n  const [currentManager, setCurrentManager] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentManager();\r\n    // console.log(user);\r\n    //const {id} = user;\r\n    //console.log(id);\r\n\r\n    if (user) {\r\n      console.log(user.role);\r\n      if (user.role === \"admin\") {\r\n        setShowAdminBoard(true);\r\n\r\n      }\r\n      else {\r\n        setCurrentManager(user);\r\n      }\r\n      // setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\r\n\r\n    }\r\n\r\n    EventBus.on(\"logout\", () => {\r\n      logOut();\r\n    });\r\n\r\n    return () => {\r\n      EventBus.remove(\"logout\");\r\n    };\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n    // setShowModeratorBoard(false);\r\n    setShowAdminBoard(false);\r\n    setCurrentManager(undefined);\r\n  };\r\n  console.log(currentManager);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar variant=\"dark\" expand=\"lg\" className=\"Navbar\">\r\n        <Container fluid>\r\n          <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\r\n          <Navbar.Collapse id=\"navbar-dark-example\">\r\n            <Nav>\r\n              {\r\n                //   <Link to={\"/\"} className=\"navbar-brand\">\r\n                //   Profile\r\n                // </Link>\r\n              }\r\n              <div className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/home\"} className=\"nav-link\" >\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n\r\n                {\r\n                  //   showModeratorBoard && (\r\n                  //   <li className=\"nav-item\">\r\n                  //     <Link to={\"/mod\"} className=\"nav-link\">\r\n                  //       Moderator Board\r\n                  //     </Link>\r\n                  //   </li>\r\n                  // )\r\n                }\r\n\r\n                {\r\n                  //   showAdminBoard && (\r\n                  //   <li className=\"nav-item\">\r\n                  //     <Link to={\"/admin\"} className=\"nav-link\">\r\n                  //       Admin Board\r\n                  //     </Link>\r\n                  //   </li>\r\n                  // )\r\n                }\r\n                {currentManager && (<NavDropdown\r\n                  id=\"nav-dropdown-dark-example\"\r\n                  title=\"Member\"\r\n                  style={{ marginLeft: '950px' }}\r\n                  menuVariant=\"dark\"\r\n                  onMouseLeave={() => setShowDropdownMem(false)}\r\n                  onMouseOver={() => setShowDropdownMem(true)}\r\n\r\n                >\r\n\r\n                  <NavDropdown.Item href={\"/addmember/\" + currentManager.id}>\r\n\r\n                    Add Member\r\n\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href={\"/showmembers/\" + currentManager.id}>\r\n\r\n\r\n                    Show Members\r\n\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n\r\n\r\n\r\n                )}\r\n                {\r\n                  currentManager && (\r\n                    <NavDropdown\r\n                      id=\"nav-dropdown-dark-example\"\r\n                      title=\"Payment\"\r\n                      menuVariant=\"dark\"\r\n                      onMouseLeave={() => setShowDropdownPay(false)}\r\n                      onMouseOver={() => setShowDropdownPay(true)}\r\n\r\n                    >\r\n\r\n\r\n                      <NavDropdown.Item href={/payment/ + currentManager.id}>\r\n                        Add Payment\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href={\"/showpayment/\" + currentManager.id}>\r\n\r\n\r\n                        Show Payments\r\n\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  )}\r\n\r\n                {\r\n                  currentManager && (\r\n                    <NavDropdown\r\n                      id=\"nav-dropdown-dark-example\"\r\n                      title=\"Trainer\"\r\n                      menuVariant=\"dark\">\r\n                      <NavDropdown.Item href={\"/addtrainer/\" + currentManager.id}>\r\n                        Add Trainer\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href={\"/showtrainer/\" + currentManager.id}>\r\n                        Show Trainer\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  )}\r\n                {\r\n                  showAdminBoard && (\r\n                    <NavDropdown\r\n                      id=\"nav-dropdown-dark-example\"\r\n                      title=\"Workout\"\r\n                      style={{ marginLeft: '1150px' }}\r\n                      menuVariant=\"dark\"\r\n                    >\r\n\r\n                      <NavDropdown.Item href={\"/addworkout\"} >\r\n                        Add Workout\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href={\"/showworkout\"}>\r\n\r\n                        Show Workout\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  )}\r\n                {\r\n                  currentManager && (\r\n                    <NavDropdown\r\n                      id=\"nav-dropdown-dark-example\"\r\n                      title=\"Equipment\"\r\n                      menuVariant=\"dark\"\r\n                    >\r\n\r\n                      <NavDropdown.Item href={\"/addequipment/\" + currentManager.id} >\r\n                        Add Equipment\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href={\"/showequipment/\" + currentManager.id} >\r\n                        Show Equipment\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  )}\r\n                {\r\n                  showAdminBoard && (\r\n                    <NavDropdown\r\n                      id=\"nav-dropdown-dark-example\"\r\n                      title=\"Branch\"\r\n                      menuVariant=\"dark\"\r\n                    >\r\n                      <NavDropdown.Item href={\"/addbranch\"}>\r\n                        Add Branch\r\n                      </NavDropdown.Item>\r\n                      <NavDropdown.Item href={\"/showbranch\"} >\r\n\r\n                        Show Branches\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  )}\r\n\r\n\r\n              </div>\r\n\r\n              {currentManager || showAdminBoard ? (\r\n                <div >\r\n                  {\r\n                    //   <li className=\"nav-item\">\r\n                    //   <Link to={\"/profile/\"+currentManager.id} className=\"nav-link\">\r\n                    //     {currentManager.id}\r\n                    //   </Link>\r\n                    // </li>\r\n                  }\r\n                  <li className=\"nav-item\">\r\n                    <a href=\"/login\" className=\"nav-link\" onClick={logOut} >\r\n                      LogOut\r\n                    </a>\r\n                  </li>\r\n                </div>\r\n              ) : (\r\n                <div >\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/login\"} className=\"nav-link\" style={{ paddingLeft: '1350px' }}>\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n\r\n                  {\r\n                    //   <li className=\"nav-item\">\r\n                    //   <Link to={\"/register\"} className=\"nav-link\">\r\n                    //     Sign Up\r\n                    //   </Link>\r\n                    // </li>\r\n                  }\r\n                </div>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <div className=\"container mt-3\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/user\" element={<BoardUser />} />\r\n          <Route path=\"/mod\" element={<BoardModerator />} />\r\n          <Route path=\"/admin\" element={<BoardAdmin />} />\r\n\r\n        </Routes>\r\n        {currentManager || showAdminBoard ? (<Routes>\r\n          <Route path=\"/addmember/:id\" element={<AddMember />} />\r\n          <Route path=\"edittrainer/:id\" element={<EditTrainer />} />\r\n          <Route path=\"editequipment/:id\" element={<EditEquipment />} />\r\n          <Route path=\"/editmember/:Mem_ID\" element={<EditMember />} />\r\n          <Route path=\"/payment/:id\" element={<Payment />} />\r\n          <Route path=\"showpayment/:id\" element={<ShowPayment />} />\r\n          <Route path=\"addequipment/:id\" element={<AddEquipment />} />\r\n          <Route path=\"showequipment/:id\" element={<ShowEquipment />} />\r\n          <Route path=\"addtrainer/:id\" element={<AddTrainer />} />\r\n          <Route path=\"showtrainer/:id\" element={<ShowTrainer />} />\r\n          <Route path=\"showworkout\" element={<ShowWorkout />} />\r\n          <Route path=\"addworkout\" element={<AddWorkout />} />\r\n          <Route path=\"/showbranch\" element={<ShowBranches />} />\r\n          <Route path=\"addbranch\" element={<AddBranches />} />\r\n          <Route path=\"editworkout/:id\" element={<EditWorkout />} />\r\n          <Route path=\"editbranch/:id\" element={<EditBranch />} />\r\n          <Route path=\"/showmembers/:id\" element={<ShowMembers />} />\r\n          <Route path=\"/branch_manager/:id\" element={<EditBranch />} />\r\n          <Route path=\"/profile/:id\" element={<Profile />} />\r\n\r\n        </Routes>) :\r\n          <Routes>\r\n            <Route path=\"/addmember/:id\" element={<Home />} />\r\n            <Route path=\"edittrainer/:id\" element={<Home />} />\r\n            <Route path=\"editequipment/:id\" element={<Home />} />\r\n            <Route path=\"/editmember/:Mem_ID\" element={<Home />} />\r\n            <Route path=\"/payment/:id\" element={<Home />} />\r\n            <Route path=\"showpayment/:id\" element={<Home />} />\r\n            <Route path=\"addequipment/:id\" element={<Home />} />\r\n            <Route path=\"showequipment/:id\" element={<Home />} />\r\n            <Route path=\"addtrainer/:id\" element={<Home />} />\r\n            <Route path=\"showtrainer/:id\" element={<Home />} />\r\n            <Route path=\"showworkout\" element={<Home />} />\r\n            <Route path=\"addworkout\" element={<Home />} />\r\n            <Route path=\"/showbranch\" element={<Home />} />\r\n            <Route path=\"addbranch\" element={<Home />} />\r\n            <Route path=\"editworkout/:id\" element={<Home />} />\r\n            <Route path=\"editbranch/:id\" element={<Home />} />\r\n            <Route path=\"/showmembers/:id\" element={<Home />} />\r\n            <Route path=\"/branch_manager/:id\" element={<Home />} />\r\n            <Route path=\"/profile/:id\" element={<Home />} />\r\n          </Routes>\r\n\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Login.js",["167"],"import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport image from \"../Images/home.jpeg\"\r\nimport \"./Login.css\"\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [manager_Email, setManager_Email] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeManager_Email = (e) => {\r\n    const manager_Email = e.target.value;\r\n    setManager_Email(manager_Email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(manager_Email, password).then(\r\n        (response) => {\r\n          navigate(\"/profile/\" + response.id);\r\n          // console.log(response);\r\n\r\n\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"containerx\">\r\n      <img src={image} id=\"imgt2\" />\r\n      {/* <br />\r\n      <br />\r\n      <br /> */}\r\n      <div className=\"screen \">\r\n        {/* <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        /> */}\r\n        <div class=\"screen__content\">\r\n        <Form onSubmit={handleLogin} ref={form} style={{width: \"320px\", padding: \"30px\", paddingTop: \"100px\"}}>\r\n\t\t\t\t<div class=\"login__field\">\r\n\t\t\t\t\t<i class=\"login__icon fas fa-user\"></i>\r\n          <Input\r\n            type=\"text\"\r\n            className=\"login__input\"\r\n            name=\"manager_Email\"\r\n            placeholder=\"Email\"\r\n            value={manager_Email}\r\n            onChange={onChangeManager_Email}\r\n            validations={[required]}\r\n          />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"login__field\">\r\n\t\t\t\t\t<i class=\"login__icon fas fa-lock\"></i>\r\n          <Input\r\n            type=\"password\"\r\n            className=\"login__input\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            validations={[required]}\r\n          />\r\n\t\t\t\t</div>\r\n\t\t\t\t<button class=\"button login__submit\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n\t\t\t\t\t<i class=\"button__icon fas fa-chevron-right\"></i>\r\n\t\t\t\t</button>\t\t\t\t\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n\t\t  </div>\r\n      <div class=\"screen__background\">\r\n\t\t\t<span class=\"screen__background__shape screen__background__shape4\"></span>\r\n\t\t\t<span class=\"screen__background__shape screen__background__shape3\"></span>\t\t\r\n\t\t\t<span class=\"screen__background__shape screen__background__shape2\"></span>\r\n\t\t\t<span class=\"screen__background__shape screen__background__shape1\"></span>\r\n\t\t</div>\t\t\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\BoardUser.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Register.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\BoardModerator.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Profile.js",["168","169"],"import React from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport image from \"../Images/home.jpeg\"\r\nimport \"../components/Member/Member.css\"\r\nconst Profile = () => {\r\n  const currentManager = AuthService.getCurrentManager();\r\n  console.log(currentManager);\r\n  // console.log(useParams);\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <img src={image} id=\"imgt2\" />\r\n      <table class = \"prof\">\r\n        <tbody>\r\n          <tr>\r\n            <td class=\"prof2\">Branch Name: </td>\r\n            <td>{currentManager.branch.Branch_Name}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Branch Location: </td>\r\n            <td>{currentManager.branch.Branch_Location}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Branch Email: </td>\r\n            <td>{currentManager.branch.Branch_Email}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Phone Number: </td>\r\n            <td>{currentManager.branch.Branch_Phone_Number}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Manager ID: </td> \r\n            <td>{currentManager.branch.Manager_ID}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Manager Name: </td>\r\n            <td>{currentManager.branch.Manager_Name}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Manager Email: </td>\r\n            <td>{currentManager.branch.Manager_Email}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\BoardAdmin.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\common\\EventBus.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\services\\auth.service.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Home.js",["170","171","172","173","174","175","176","177","178","179"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserService from \"../services/user.service\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport TypeWriterEffect from 'react-typewriter-effect';\r\nimport sample from \"../Videos/ropes.mp4\"\r\nimport image from \"../Images/house.jpeg\"\r\nimport \"../components/Member/Member.css\"\r\nconst Home = () => {\r\n  //   const particlesInit = async (main) => {\r\n  //   console.log(main);\r\n\r\n  //   // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n  //   // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n  //   // starting from v2 you can add only the features you need reducing the bundle size\r\n  //   await loadFull(main);\r\n  // };\r\n\r\n  // const particlesLoaded = (container) => {\r\n  //   console.log(container);\r\n  //};\r\n  return (\r\n    <div align=\"center\">\r\n      <img src={image} id=\"imgt\" />\r\n      {/* <TypeWriterEffect\r\n        textStyle={{\r\n          fontFamily: 'Montserrat',\r\n          color: 'white',\r\n          fontWeight: 'Bold',\r\n          fontSize: '3em',\r\n        }}\r\n        startDelay={500}\r\n        cursorColor=\"#3F3D56\"\r\n        multiText={[\r\n          ' IF YOU DON\\'T KNOW WHERE YOU ARE GOING, YOU WILL WIND UP SOMEWHERE ELSE. -YOGI BERRA',\r\n\r\n        ]}\r\n        multiTextDelay={1000}\r\n        typeSpeed={80}\r\n      /> */}\r\n      <h1 className=\"homename\">GYM</h1>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\services\\user.service.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\services\\ManagerService.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\services\\auth-header.js",[],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Member\\Member.js",["180","181","182"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ManagerDataService from \"../../services/ManagerService\";\r\nimport \"./Member.css\";\r\nimport image from \"../../Images/home.jpeg\"\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst Member = props => {\r\n    \r\n    console.log(useParams());\r\n  const { Mem_ID } = useParams();\r\n//  ManagerDataService.get(Mem_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(Mem_ID);\r\n  let navigate = useNavigate();\r\n  // console.log(Mem_ID);\r\n  const initialMemberState = {\r\n    Mem_ID: null,\r\n    Mem_Name: \"\",\r\n    Mem_Weight: 0,\r\n    Mem_Height: 0,\r\n    Age: 0,\r\n    Gender: \"\",\r\n    Blood_Type: \"\",\r\n    Mobile_Number: 0,\r\n    Address: \"\",\r\n    Emer_Name: \"\",\r\n    Emer_Mobile: 0\r\n  };\r\n  const [currentMember, setCurrentMember] = useState(initialMemberState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getMember = Mem_ID => {\r\n    ManagerDataService.get(Mem_ID)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentMember(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Mem_ID)\r\n      getMember(Mem_ID);\r\n  }, [Mem_ID]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentMember({ ...currentMember, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      Mem_ID: currentMember.Mem_ID,\r\n      Mem_Name: currentMember.Mem_Name,\r\n      Mem_Weight: currentMember.Mem_Weight,\r\n      Mem_Height: currentMember.Mem_Height,\r\n      Age: currentMember.Age,\r\n      Gender: currentMember.Gender,\r\n      Blood_Type: currentMember.Blood_Type,\r\n      Mobile_Number: currentMember.Mobile_Number,\r\n      Address: currentMember.Address,\r\n      Emer_Name: currentMember.Emer_Name,\r\n      Emer_Mobile: currentMember.Emer_Mobile\r\n\r\n    };\r\n\r\n    ManagerDataService.update(currentMember.Mem_ID, data)\r\n      .then(response => {\r\n        setCurrentMember({ ...currentMember, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateMember = () => {\r\n    ManagerDataService.update(currentMember.Mem_ID, currentMember)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Member was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteMember = () => {\r\n//     ManagerDataService.remove(currentMember.Mem_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/member\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\n\r\n  return (\r\n    <div className=\"member-submit-form\" id=\"member\">\r\n      <img src={image} id=\"imgt2\" />\r\n      <Card style={{ height: '60rem', width: '50rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\r\n      {currentMember ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Member</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Mem_Name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control int\"\r\n                id=\"title\"\r\n                required\r\n                value={currentMember.Mem_Name}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Mem_Weight\">Weight</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control int\"\r\n                id=\"Mem_Weight\"\r\n                required\r\n                value={currentMember.Mem_Weight}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Weight\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Mem_Height\">Height</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control int\"\r\n                id=\"Mem_Height\"\r\n                required\r\n                value={currentMember.Mem_Height}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Height\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Age\">Age</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control int\"\r\n                id=\"Age\"\r\n                required\r\n                value={currentMember.Age}\r\n                onChange={handleInputChange}\r\n                name=\"Age\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Gender\">Gender</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control int\"\r\n                id=\"Gender\"\r\n                required\r\n                value={currentMember.Gender}\r\n                onChange={handleInputChange}\r\n                name=\"Gender\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Blood_Type\">Blood Group</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control int\"\r\n                id=\"Blood_Type\"\r\n                required\r\n                value={currentMember.Blood_Type}\r\n                onChange={handleInputChange}\r\n                name=\"Blood_Type\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Mobile_Number\">Mobile Number</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control int\"\r\n                id=\"Mobile_Number\"\r\n                required\r\n                value={currentMember.Mobile_Number}\r\n                onChange={handleInputChange}\r\n                name=\"Mobile_Number\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control int\"\r\n                id=\"Address\"\r\n                required\r\n                value={currentMember.Address}\r\n                onChange={handleInputChange}\r\n                name=\"Address\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Emer_Name\">Emergency Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control int\"\r\n                id=\"Emer_Name\"\r\n                required\r\n                value={currentMember.Emer_Name}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"lab\" align=\"center\" htmlFor=\"Emer_Mobile\">Emerergency Contact</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control int\"\r\n                id=\"Emer_Mobile\"\r\n                required\r\n                value={currentMember.Emer_Mobile}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Mobile\"\r\n              />\r\n            </div>\r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteMember}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n          <button  onClick={updateMember} class=\"btn btn-outline-info tempBtn\">Update</button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Member...</p>\r\n        </div>\r\n      )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Member;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Member\\AddMember.js",["183","184","185","186","187"],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Member\\ShowMembers.js",["188","189","190","191","192","193","194"],"import React, { useState, useEffect } from \"react\";\r\nimport ManagerService from \"../../services/ManagerService\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./Member.css\";\r\nimport image from \"../../Images/home.jpeg\"\r\nimport \"../table.css\"\r\nconst MemberList = () => {\r\n  const { id } = useParams();\r\n  const [member, setMember] = useState([]);\r\n  const [currentMember, setCurrentMember] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveMembers();\r\n  }, []);\r\n\r\n  const onChangeSearchMem_Name = e => {\r\n    const searchMem_Name = e.target.value;\r\n    setSearchMem_Name(searchMem_Name);\r\n  };\r\n\r\n  const retrieveMembers = () => {\r\n    ManagerService.getAll(id)\r\n      .then(response => {\r\n        setMember(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveMembers();\r\n    setCurrentMember(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveMember = (member, index) => {\r\n    setCurrentMember(member);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  //   const removeAllMembers = () => {\r\n  //     MemberDataService.removeAll()\r\n  //       .then(response => {\r\n  //         console.log(response.data);\r\n  //         refreshList();\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n\r\n  //   const findByMem_Name = () => {\r\n  //     MemberDataService.findByMem_Name(searchMem_Name)\r\n  //       .then(response => {\r\n  //         setMember(response.data);\r\n  //         console.log(response.data);\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n  const deleteMember = (Mem_ID) => {\r\n    console.log(Mem_ID);\r\n    ManagerService.removeMember(Mem_ID)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"list row\" align=\"center\">\r\n      <div class=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\" textAlign='center'>\r\n        <h4 className=\"lab\">MEMBERS LIST</h4>\r\n        <br />\r\n        <Table striped hover variant=\"dark\" class=\"table\" align=\"center\" dataAlign=\"center\" style={{alignContent: 'center'}}>\r\n          <thead class=\"thead-primary\">\r\n            <tr>\r\n\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Weight</th>\r\n              <th>Height</th>\r\n              <th>Age</th>\r\n              <th>Gender</th>\r\n              <th>BloodGroup</th>\r\n              <th>Address</th>\r\n              <th>EmergencyName</th>\r\n              <th>EmergencyMobile</th>\r\n              <th>Update</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {member &&\r\n            member.map((member, index) => (\r\n              <tr>\r\n                <td class=\"scope\">{member.Mem_ID}</td>\r\n                <td>{member.Mem_Name}</td>\r\n                <td>{member.Mobile_Number}</td>\r\n                <td>{member.Mem_Weight}</td>\r\n                <td>{member.Mem_Height}</td>\r\n                <td>{member.Age}</td>\r\n                <td>{member.Gender}</td>\r\n                <td>{member.Blood_Type}</td>\r\n                <td>{member.Address}</td>\r\n                <td>{member.Emer_Name}</td>\r\n                <td>{member.Emer_Mobile}</td>\r\n                <td>\r\n                  <Link style={{ textAlign: \"left\" }}\r\n                    to={\"/editmember/\" + member.Mem_ID}\r\n                    class=\"btn btn-primary pqy\">\r\n                    Edit\r\n                  </Link>\r\n                </td>\r\n                <td><button class=\"btn-danger btn btn-primary pqy\" onClick={() => { deleteMember(member.Mem_ID) }}>Delete</button></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n        {\r\n          //     <button\r\n          //   className=\"m-3 btn btn-sm btn-danger\"\r\n          //   onClick={removeAllMembers}\r\n          // >\r\n          //   Remove All\r\n          // </button>\r\n        }\r\n      </div>\r\n      {\r\n        //   <div className=\"col-md-6\">\r\n        //   {currentMember ? (\r\n        //     <div>\r\n        //       <h4>Members</h4>\r\n        //       <div>\r\n        //         <label>\r\n        //           <strong>Mem_Name:</strong>\r\n        //         </label>{\" \"}\r\n\r\n        //         {currentMember.Mem_ID}\r\n        //       </div>\r\n        //       <Link\r\n        //         to={\"/editmember/\" + currentMember.Mem_ID}\r\n        //         className=\"badge badge-warning\"\r\n        //       >\r\n        //         Edit\r\n        //       </Link>\r\n        //     </div>\r\n        //   ) : (\r\n        //     <div>\r\n        //       <br />\r\n        //       <p>Please click on a Member...</p>\r\n        //     </div>\r\n        //   )}\r\n        // </div>\r\n      }\r\n      <img src={image} id=\"imgt2\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Payment\\Payment.js",["195","196"],"import React, { useState } from \"react\";\r\nimport PaymentService from \"../../services/ManagerService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport image from \"../../Images/home.jpeg\"\r\nimport image1 from \"../../Images/payment.png\"\r\nimport \"../Member/Member.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nconst AddPayment = () => {\r\n    const {id}=useParams();\r\n    console.log(id);\r\n  const initialPaymentState = {\r\n    Payment_Desc:\"\",\r\n    Payment_Time:\"\",\r\n    Payment_Date:\"\",\r\n    Payment_Amt:0,\r\n    Member_ID:0,\r\n    Workout_Name:\"\"\r\n  };\r\n  const [payment, setPayment] = useState(initialPaymentState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPayment({ ...payment, [name]: value });\r\n  };\r\n\r\n  const savePayment = () => {\r\n    var data = {\r\n      Payment_Desc:payment.Payment_Desc,\r\n      Payment_Time:payment.Payment_Time,\r\n      Payment_Date:payment.Payment_Date,\r\n      Payment_Amt:payment.Payment_Amt,\r\n      Member_ID:payment.Member_ID,\r\n      Workout_Name:payment.Workout_Name\r\n    };\r\n\r\n    PaymentService.createPayment(data)\r\n      .then(response => {\r\n        setPayment({\r\n            Payment_Desc:response.data.Payment_Desc,\r\n            Payment_Time:response.data.Payment_Time,\r\n            Payment_Date:response.data.Payment_Date,\r\n            Payment_Amt:response.data.Payment_Amt,\r\n            Member_ID:response.data.Member_ID,\r\n            Workout_Name:response.data.Workout_Name\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newPayment = () => {\r\n    setPayment(initialPaymentState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <img src={image} id=\"imgt2\" />\r\n    <div className=\"member-submit-form\" id=\"member\">\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <Card style={{ height: '60rem', width: '50rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newPayment}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Payment_Desc\">Payment Description</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"title\"\r\n              required\r\n              value={payment.Payment_Desc}\r\n              onChange={handleInputChange}\r\n              name=\"Payment_Desc\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Payment_Time\">Time</label>\r\n            <input\r\n              type=\"time\"\r\n              className=\"form-control int\"\r\n              id=\"Payment_Time\"\r\n              required\r\n              value={payment.Payment_Time}\r\n              onChange={handleInputChange}\r\n              name=\"Payment_Time\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Payment_Date\">Date</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control int\"\r\n              id=\"Payment_Date\"\r\n              required\r\n              value={payment.Payment_Date}\r\n              onChange={handleInputChange}\r\n              name=\"Payment_Date\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Payment_Amt\">Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control int\"\r\n              id=\"Payment_Amt\"\r\n              required\r\n              value={payment.Payment_Amt}\r\n              onChange={handleInputChange}\r\n              name=\"Payment_Amt\"\r\n            />\r\n          </div>  \r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Member_ID\">Member ID</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control int\"\r\n              id=\"Member_ID\"\r\n              required\r\n              value={payment.Member_ID}\r\n              onChange={handleInputChange}\r\n              name=\"Member_ID\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Workout_Name\">Workout Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Workout_Name\"\r\n              required\r\n              value={payment.Workout_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Workout_Name\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <br />      \r\n          <button  onClick={savePayment} class=\"btn btn-outline-info tempBtn\">Submit</button>\r\n        </div>\r\n      )}\r\n      </Card>\r\n    </div>\r\n    <img src={image1} id=\"imgt4\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPayment;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Payment\\ShowPayment.js",["197","198","199","200","201","202","203","204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport PaymentService from \"../../services/ManagerService\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport \"../Member/Member.css\";\r\nimport image from \"../../Images/home.jpeg\"\r\nimport \"../table.css\"\r\n\r\nconst PaymentList = () => {\r\n  const { id } = useParams();\r\n  const [payment, setPayment] = useState([]);\r\n  const [currentPayment, setCurrentPayment] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrievePayments();\r\n  }, []);\r\n\r\n  const onChangeSearchMem_Name = e => {\r\n    const searchMem_Name = e.target.value;\r\n    setSearchMem_Name(searchMem_Name);\r\n  };\r\n\r\n  const retrievePayments = () => {\r\n    PaymentService.showPayment(id)\r\n      .then(response => {\r\n        setPayment(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrievePayments();\r\n    setCurrentPayment(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActivePayment = (payment, index) => {\r\n    setCurrentPayment(payment);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  //   const removeAllPayments = () => {\r\n  //     PaymentDataService.removeAll()\r\n  //       .then(response => {\r\n  //         console.log(response.data);\r\n  //         refreshList();\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n\r\n  //   const findByMem_Name = () => {\r\n  //     PaymentDataService.findByMem_Name(searchMem_Name)\r\n  //       .then(response => {\r\n  //         setPayment(response.data);\r\n  //         console.log(response.data);\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n  console.log(payment)\r\n  return (\r\n    <div className=\"list row\" align=\"center\">\r\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\" textAlign='center'>\r\n        <h4 className=\"lab\">PAYMENTS LIST</h4>\r\n        <br />\r\n        <Table striped hover class=\"table\" variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{  }}>\r\n          <thead class=\"thead-primary\">\r\n            <tr>\r\n\r\n              <th>ID</th>\r\n              <th>Description</th>\r\n              <th>Amount</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n              <th>Member ID</th>\r\n              <th>Workout ID</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {payment.map((payment, index) => (\r\n            <tr>\r\n              <td class=\"scope\">{payment.Payment_ID}</td>\r\n              <td>{payment.Payment_Desc}</td>\r\n              <td>{payment.Payment_Amt}</td>\r\n              <td>{payment.Payment_Date}</td>\r\n              <td>{payment.Payment_Time}</td>\r\n              <td>{payment.Member_ID}</td>\r\n              <td>{payment.Workout_ID}</td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n        {/* <ul className=\"list-group\">\r\n          {payment &&\r\n            payment.map((payment, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \"\r\n                }\r\n\r\n\r\n                key={index}\r\n              >\r\n                {payment.Payment_ID}                  {payment.Payment_Desc}\r\n              </li>\r\n\r\n\r\n            ))}\r\n        </ul> */}\r\n\r\n        {\r\n          //     <button\r\n          //   className=\"m-3 btn btn-sm btn-danger\"\r\n          //   onClick={removeAllPayments}\r\n          // >\r\n          //   Remove All\r\n          // </button>\r\n        }\r\n      </div>\r\n      {\r\n        //       <div className=\"col-md-6\">\r\n        //     {currentPayment ? (\r\n        //       <div>\r\n        //         <h4>Payments</h4>\r\n        //         <div>\r\n        //           <label>\r\n        //             <strong>Mem_Name:</strong>\r\n        //           </label>{\" \"}\r\n\r\n        //           {currentPayment.Payment_ID}\r\n        //         </div>\r\n        //         <Link\r\n        //           to={\"/editpayment/\" + currentPayment.Payment_ID}\r\n        //           className=\"badge badge-warning\"\r\n        //         >\r\n        //           Edit\r\n        //         </Link>\r\n        //       </div>\r\n        //     ) : (\r\n        //       <div>\r\n        //         <br />\r\n        //         <p>Please click on a Payment...</p>\r\n        //       </div>\r\n        //     )}\r\n        //   </div>\r\n      }\r\n      <img src={image} id=\"imgt2\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentList;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Branch\\EditBranch.js",["206","207"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport BranchServices from \"../../services/ManagerService\";\r\n\r\nconst Branch = props => {\r\n    \r\n    console.log(useParams());\r\n  const { id } = useParams();\r\n//  BranchServices.get(Branch_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(id);\r\n  let navigate = useNavigate();\r\n  // console.log(Branch_ID);\r\n  const initialBranchState = {\r\n    Branch_ID:null,\r\n    Branch_Name: \"\",\r\n    Branch_Location: \"\",\r\n    Branch_Email: \"\",\r\n    Branch_Phone_Number: 0,\r\n    Manager_Name: \"\",\r\n    Gender: \"\",\r\n    Mobile_Number: 0,\r\n    Address: \"\",\r\n    Manager_Email: \"\",\r\n    Password: \"\"\r\n  };\r\n  const [currentBranch, setCurrentBranch] = useState(initialBranchState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getBranch = id => {\r\n    BranchServices.getBranch(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentBranch(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      getBranch(id);\r\n  }, [id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentBranch({ ...currentBranch, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n        Branch_Name:currentBranch.Branch_Name,\r\n        Branch_DietChart:currentBranch.Branch_DietChart,\r\n        Working_Duration:currentBranch.Working_Duration\r\n\r\n    };\r\n\r\n    BranchServices.updateBranch(currentBranch.Branch_ID, data)\r\n      .then(response => {\r\n        setCurrentBranch({ ...currentBranch, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateBranch = () => {\r\n    BranchServices.updateBranch(currentBranch.Branch_ID, currentBranch)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Branch was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteBranch = () => {\r\n//     BranchServices.remove(currentBranch.Branch_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/branch\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\nconsole.log(currentBranch);\r\n  return (\r\n    <div>\r\n      {currentBranch ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Branch</h4>\r\n          <form>\r\n\r\n\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Branch_Name\">Branch_Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              required\r\n              value={currentBranch.Branch_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Branch_Name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Branch_Location\">Branch_Location</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Branch_Location\"\r\n              required\r\n              value={currentBranch.Branch_Location}\r\n              onChange={handleInputChange}\r\n              name=\"Branch_Location\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Branch_Email\">Branch_Email</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Branch_Email\"\r\n              required\r\n              value={currentBranch.Branch_Email}\r\n              onChange={handleInputChange}\r\n              name=\"Branch_Email\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Branch_Phone_Number\">Branch_Phone_Number</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"Branch_Phone_Number\"\r\n              required\r\n              value={currentBranch.Branch_Phone_Number}\r\n              onChange={handleInputChange}\r\n              name=\"Branch_Phone_Number\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Manager_Name\">Manager_Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Manager_Name\"\r\n              required\r\n              value={currentBranch.Manager_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Manager_Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Gender\">Gender</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Gender\"\r\n              required\r\n              value={currentBranch.Gender}\r\n              onChange={handleInputChange}\r\n              name=\"Gender\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"Mobile_Number\"\r\n              required\r\n              value={currentBranch.Mobile_Number}\r\n              onChange={handleInputChange}\r\n              name=\"Mobile_Number\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Address\">Address</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Address\"\r\n              required\r\n              value={currentBranch.Address}\r\n              onChange={handleInputChange}\r\n              name=\"Address\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Manager_Email\">Manager_Email</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Manager_Email\"\r\n              required\r\n              value={currentBranch.Manager_Email}\r\n              onChange={handleInputChange}\r\n              name=\"Manager_Email\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Password\">Password</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"Password\"\r\n              required\r\n              value={currentBranch.Password}\r\n              onChange={handleInputChange}\r\n              name=\"Password\"\r\n            />\r\n          </div>\r\n           \r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteBranch}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateBranch}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Branch...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Branch;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Equipment\\AddEquipment.js",["208","209"],"import React, { useState } from \"react\";\r\nimport EquipmentService from \"../../services/ManagerService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport image from \"../../Images/home.jpeg\"\r\nimport image2 from \"../../Images/addimage2.png\"\r\nimport \"../Member/Member.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nconst AddEquipment = () => {\r\n    const {id}=useParams();\r\n    console.log(id);\r\n  const initialEquipmentState = {\r\n    Equipment_ID:null,\r\n    Equipment_Name:\"\",\r\n    Equipment_Kind:\"\",\r\n    Working_Status:\"\",\r\n    Exercise:\"\",\r\n  };\r\n  const [equipment, setEquipment] = useState(initialEquipmentState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setEquipment({ ...equipment, [name]: value });\r\n  };\r\n\r\n  const saveEquipment = () => {\r\n    var data = {\r\n      Equipment_Name:equipment.Equipment_Name,\r\n      Equipment_Kind:equipment.Equipment_Kind,\r\n      Working_Status:equipment.Working_Status,\r\n      Exercise:equipment.Exercise\r\n    };\r\n\r\n    EquipmentService.createEquipment(id,data)\r\n      .then(response => {\r\n        setEquipment({\r\n            Equipment_ID:response.data.Equipment_ID,\r\n            Equipment_Name:response.data.Equipment_Name,\r\n            Equipment_Kind:response.data.Equipment_Kind,\r\n            Working_Status:response.data.Working_Status,\r\n            Exercise:response.data.Exercise\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newEquipment = () => {\r\n    setEquipment(initialEquipmentState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <img src={image} id=\"imgt2\" />\r\n      <div className=\"member-submit-form\" id=\"member2\">\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <Card style={{ height: '60rem', width: '30rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newEquipment}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Equipment_Name\">Equipment Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"title\"\r\n              required\r\n              value={equipment.Equipment_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Equipment_Name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Equipment_Kind\">Equipment Kind</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Equipment_Kind\"\r\n              required\r\n              value={equipment.Equipment_Kind}\r\n              onChange={handleInputChange}\r\n              name=\"Equipment_Kind\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Working_Status\">Working Status</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Working_Status\"\r\n              required\r\n              value={equipment.Working_Status}\r\n              onChange={handleInputChange}\r\n              name=\"Working_Status\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Exercise\">Exercise</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Exercise\"\r\n              required\r\n              value={equipment.Exercise}\r\n              onChange={handleInputChange}\r\n              name=\"Exercise\"\r\n            />\r\n          </div>\r\n          {\r\n        //       <div className=\"form-group\">\r\n        //     <label htmlFor=\"Equipment_Amt\">Equipment_Amt</label>\r\n        //     <input\r\n        //       type=\"number\"\r\n        //       className=\"form-control\"\r\n        //       id=\"Equipment_Amt\"\r\n        //       required\r\n        //       value={equipment.Equipment_Amt}\r\n        //       onChange={handleInputChange}\r\n        //       name=\"Equipment_Amt\"\r\n        //     />\r\n        //   </div>  \r\n        //   <div className=\"form-group\">\r\n        //     <label htmlFor=\"Member_ID\">Member_ID</label>\r\n        //     <input\r\n        //       type=\"number\"\r\n        //       className=\"form-control\"\r\n        //       id=\"Member_ID\"\r\n        //       required\r\n        //       value={equipment.Member_ID}\r\n        //       onChange={handleInputChange}\r\n        //       name=\"Member_ID\"\r\n        //     />\r\n        //   </div>\r\n        //   <div className=\"form-group\">\r\n        //     <label htmlFor=\"Workout_Name\">Workout_Name</label>\r\n        //     <input\r\n        //       type=\"text\"\r\n        //       className=\"form-control\"\r\n        //       id=\"Workout_Name\"\r\n        //       required\r\n        //       value={equipment.Workout_Name}\r\n        //       onChange={handleInputChange}\r\n        //       name=\"Workout_Name\"\r\n        //     />\r\n        //   </div>   \r\n           }\r\n           <br />\r\n           <br />\r\n          <button onClick={saveEquipment} className=\"btn btn-outline-info tempBtn3\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n      </Card>\r\n      </div>\r\n      <img src={image2} id=\"imgt3\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEquipment;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Equipment\\EditEquipment.js",["210","211"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport EquipmentService from \"../../services/ManagerService\";\r\n\r\nconst Equipment = props => {\r\n    \r\n    console.log(useParams());\r\n  const {id } = useParams();\r\n//  ManagerDataService.get(Equipment_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(id);\r\n  let navigate = useNavigate();\r\n  // console.log(Equipment_ID);\r\n  const initialEquipmentState = {\r\n    Equipment_ID:null,\r\n    Equipment_Name:\"\",\r\n    Equipment_Kind:\"\",\r\n    Working_Status:\"\",\r\n    Exercise:\"\",\r\n  };\r\n  const [currentEquipment, setCurrentEquipment] = useState(initialEquipmentState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getEquipment = id => {\r\n    EquipmentService.getEquipment(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentEquipment(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      getEquipment(id);\r\n  }, [id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentEquipment({ ...currentEquipment, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n        Equipment_ID:currentEquipment.Equipment_ID,\r\n        Equipment_Name:currentEquipment.Equipment_Name,\r\n        Equipment_Kind:currentEquipment.Equipment_Kind,\r\n        Working_Status:currentEquipment.Working_Status,\r\n        Exercise:currentEquipment.Exercise\r\n\r\n    };\r\n\r\n    EquipmentService.updateEquipment(currentEquipment.Equipment_ID, data)\r\n      .then(response => {\r\n        setCurrentEquipment({ ...currentEquipment, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateEquipment = () => {\r\n    EquipmentService.updateEquipment(currentEquipment.Equipment_ID, currentEquipment)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Equipment was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteEquipment = () => {\r\n//     ManagerDataService.remove(currentEquipment.Equipment_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/equipment\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {currentEquipment ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Equipment</h4>\r\n          <form>\r\n\r\n\r\n          <div className=\"form-group\">\r\n          <label htmlFor=\"Equipment_Name\">Equipment_Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            required\r\n            value={currentEquipment.Equipment_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Equipment_Name\"\r\n          />\r\n        </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Equipment_Kind\">Equipment_Kind</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Equipment_Kind\"\r\n                required\r\n                value={currentEquipment.Equipment_Kind}\r\n                onChange={handleInputChange}\r\n                name=\"Equipment_Kind\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Working_Status\">Working_Status</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Working_Status\"\r\n                required\r\n                value={currentEquipment.Working_Status}\r\n                onChange={handleInputChange}\r\n                name=\"Working_Status\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Exercise\">Exercise</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Exercise\"\r\n                required\r\n                value={currentEquipment.Exercise}\r\n                onChange={handleInputChange}\r\n                name=\"Exercise\"\r\n              />\r\n            </div>\r\n            \r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteEquipment}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateEquipment}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Equipment...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Equipment;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Equipment\\ShowEquipment.js",["212","213","214","215","216","217","218","219"],"import React, { useState, useEffect } from \"react\";\r\nimport EquipmentService from \"../../services/ManagerService\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport image from \"../../Images/home.jpeg\"\r\nimport \"../table.css\"\r\nconst EquipmentList = () => {\r\n  const { id } = useParams();\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [currentEquipment, setCurrentEquipment] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveEquipments();\r\n  }, []);\r\n\r\n  const onChangeSearchMem_Name = e => {\r\n    const searchMem_Name = e.target.value;\r\n    setSearchMem_Name(searchMem_Name);\r\n  };\r\n\r\n  const retrieveEquipments = () => {\r\n    EquipmentService.showEquipment(id)\r\n      .then(response => {\r\n        setEquipment(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveEquipments();\r\n    setCurrentEquipment(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveEquipment = (equipment, index) => {\r\n    setCurrentEquipment(equipment);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  //   const removeAllEquipments = () => {\r\n  //     EquipmentDataService.removeAll()\r\n  //       .then(response => {\r\n  //         console.log(response.data);\r\n  //         refreshList();\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n\r\n  //   const findByMem_Name = () => {\r\n  //     EquipmentDataService.findByMem_Name(searchMem_Name)\r\n  //       .then(response => {\r\n  //         setEquipment(response.data);\r\n  //         console.log(response.data);\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n  console.log(equipment)\r\n  return (\r\n    <div className=\"list row\" align=\"center\">\r\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\r\n        <br />\r\n        <h4 className=\"lab\">Equipments List</h4>\r\n        <br />\r\n        <Table striped hover class=\"table\" variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{}}>\r\n          <thead class=\"thead-primary\">\r\n            <tr>\r\n\r\n              <th>Equipment ID</th>\r\n              <th>Equipment Name</th>\r\n              <th>Equipment Kind</th>\r\n              <th>Working Status</th>\r\n              <th>Exercise</th>\r\n              <th>Edit</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {equipment.map((equipment, index) => (\r\n            <tr>\r\n              <td class=\"scope\">{equipment.Equipment_ID}</td>\r\n              <td>{equipment.Equipment_Name}</td>\r\n              <td>{equipment.Equipment_Kind}</td>\r\n              <td>{equipment.Working_Status}</td>\r\n              <td>{equipment.Exercise}</td>\r\n\r\n              <td>\r\n                <Link\r\n                  to={\"/editequipment/\" + equipment.Equipment_ID}\r\n                  class=\"btn btn-primary pqy\">\r\n                    Edit\r\n                </Link>\r\n              </td>\r\n              {/* <td><button class=\"btn-danger btn btn-primary pqy\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button></td> */}\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n        {/* <ul className=\"list-group\">\r\n          {equipment &&\r\n            equipment.map((equipment, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \"\r\n                }\r\n                onClick={() => {\r\n                  setActiveEquipment(equipment, index)\r\n                }\r\n                }\r\n                key={index}\r\n              >\r\n                {equipment.Equipment_ID}                  {equipment.Equipment_Desc}\r\n              </li>\r\n\r\n\r\n            ))}\r\n        </ul> */}\r\n\r\n        {\r\n          //     <button\r\n          //   className=\"m-3 btn btn-sm btn-danger\"\r\n          //   onClick={removeAllEquipments}\r\n          // >\r\n          //   Remove All\r\n          // </button>\r\n        }\r\n      </div>\r\n      {\r\n        //       <div className=\"col-md-6\">\r\n        //     {currentEquipment ? (\r\n        //       <div>\r\n        //         <h4>Equipments</h4>\r\n        //         <div>\r\n        //           <label>\r\n        //             <strong>Mem_Name:</strong>\r\n        //           </label>{\" \"}\r\n\r\n        //           {currentEquipment.Equipment_ID}\r\n        //         </div>\r\n        //         <Link\r\n        //           to={\"/editequipment/\" + currentEquipment.Equipment_ID}\r\n        //           className=\"badge badge-warning\"\r\n        //         >\r\n        //           Edit\r\n        //         </Link>\r\n        //       </div>\r\n        //     ) : (\r\n        //       <div>\r\n        //         <br />\r\n        //         <p>Please click on a Equipment...</p>\r\n        //       </div>\r\n        //     )}\r\n        //   </div>\r\n      }\r\n      <img src={image} id=\"imgt2\" />\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default EquipmentList;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Trainer\\AddTrainer.js",["220","221"],"import React, { useState } from \"react\";\r\nimport TrainerDataService from \"../../services/ManagerService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport image from \"../../Images/home.jpeg\"\r\nimport image1 from \"../../Images/trainer.png\"\r\nimport \"../Member/Member.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nconst AddTrainer = () => {\r\n    const {id}=useParams();\r\n  const initialTrainerState = {\r\n    Trainer_ID: null,\r\n    Trainer_Name: \"\",\r\n    // Trainer_Weight: 0,\r\n    // Trainer_Height: 0,\r\n    // Age: 0,\r\n    Gender: \"\",\r\n    Blood_Type: \"\",\r\n    Phone: 0,\r\n    Address: \"\",\r\n    Emer_Name: \"\",\r\n    Emer_Mobile: 0,\r\n    Workout_Name:\"\"\r\n  };\r\n  const [trainer, setTrainer] = useState(initialTrainerState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setTrainer({ ...trainer, [name]: value });\r\n  };\r\n\r\n  const saveTrainer = () => {\r\n    var data = {\r\n      Trainer_Name: trainer.Trainer_Name,\r\n    //   Trainer_Weight: trainer.Trainer_Weight,\r\n    //   Trainer_Height: trainer.Trainer_Height,\r\n    //   Age: trainer.Age,\r\n      Gender: trainer.Gender,\r\n      Blood_Type: trainer.Blood_Type,\r\n      Phone: trainer.Phone,\r\n      Address: trainer.Address,\r\n      Emer_Name: trainer.Emer_Name,\r\n      Emer_Mobile: trainer.Emer_Mobile,\r\n      Workout_Name:trainer.Workout_Name\r\n    };\r\n\r\n    TrainerDataService.createTrainer(id,data)\r\n      .then(response => {\r\n        setTrainer({\r\n          Trainer_ID: response.data.Trainer_ID,\r\n          Trainer_Name: response.data.Trainer_Name,\r\n        //   Trainer_Weight: response.data.Trainer_Weight,\r\n        //   Trainer_Height: response.data.Trainer_Height,\r\n        //   Age: response.data.Age,\r\n          Gender: response.data.Gender,\r\n          Blood_Type: response.data.Blood_Type,\r\n          Phone: response.data.Phone,\r\n          Address: response.data.Address,\r\n          Emer_Name: response.data.Emer_Name,\r\n          Emer_Mobile: response.data.Emer_Mobile,\r\n          Workout_Name:response.data.Workout_Name\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newTrainer = () => {\r\n    setTrainer(initialTrainerState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <img src={image} id=\"imgt2\" />\r\n    <div className=\"member-submit-form\" id=\"member\" >\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <Card style={{ height: '60rem', width: '50rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newTrainer}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Trainer_Name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"title\"\r\n              required\r\n              value={trainer.Trainer_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Trainer_Name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Gender\">Gender</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Gender\"\r\n              required\r\n              value={trainer.Gender}\r\n              onChange={handleInputChange}\r\n              name=\"Gender\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Blood_Type\">Blood Group</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Blood_Type\"\r\n              required\r\n              value={trainer.Blood_Type}\r\n              onChange={handleInputChange}\r\n              name=\"Blood_Type\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Phone\">Phone No.</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control int\"\r\n              id=\"Phone\"\r\n              required\r\n              value={trainer.Phone}\r\n              onChange={handleInputChange}\r\n              name=\"Phone\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Address\">Address</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Address\"\r\n              required\r\n              value={trainer.Address}\r\n              onChange={handleInputChange}\r\n              name=\"Address\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Emer_Name\">Emergency Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Emer_Name\"\r\n              required\r\n              value={trainer.Emer_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Emer_Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Emer_Mobile\">Emergency Contact</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control int\"\r\n              id=\"Emer_Mobile\"\r\n              required\r\n              value={trainer.Emer_Mobile}\r\n              onChange={handleInputChange}\r\n              name=\"Emer_Mobile\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n          <label className=\"lab\" align = \"center\" htmlFor=\"Workout_Name\">Workout Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control int\"\r\n            id=\"Workout_Name\"\r\n            required\r\n            value={trainer.Workout_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Workout_Name\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <br />\r\n          <button onClick={saveTrainer} className=\"btn btn-outline-info tempBtn\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n      </Card>\r\n      </div>\r\n      <img src={image1} id=\"imgt4\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTrainer;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Branch\\ShowBranches.js",["222","223","224","225","226","227","228"],"import React, { useState, useEffect } from \"react\";\r\nimport BranchServices from \"../../services/ManagerService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from 'react-bootstrap';\r\nimport image from \"../../Images/home.jpeg\"\r\nimport \"../table.css\"\r\nconst Branch_ManagerList = () => {\r\n  const [branch_manager, setBranch_Manager] = useState([]);\r\n  const [currentBranch_Manager, setCurrentBranch_Manager] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchBranch_Name, setSearchBranch_Name] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveBranch_Managers();\r\n  }, []);\r\n\r\n  const onChangeSearchBranch_Name = e => {\r\n    const searchBranch_Name = e.target.value;\r\n    setSearchBranch_Name(searchBranch_Name);\r\n  };\r\n\r\n  const retrieveBranch_Managers = () => {\r\n    BranchServices.getAllBranches()\r\n      .then(response => {\r\n        setBranch_Manager(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveBranch_Managers();\r\n    setCurrentBranch_Manager(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveBranch_Manager = (branch_manager, index) => {\r\n    setCurrentBranch_Manager(branch_manager);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  const removeAllBranch_Managers = () => {\r\n    BranchServices.removeAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByBranch_Name = () => {\r\n    BranchServices.findByBranch_Name(searchBranch_Name)\r\n      .then(response => {\r\n        setBranch_Manager(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"list row\" align=\"center\" >\r\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\r\n        <h4 className=\"lab\">BRANCH MANAGERS LIST</h4>\r\n        <br />\r\n\r\n        <Table striped class=\"table\" bordered hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ background: \"black\", opacity: \"0.8\", textAlign: \"center\", borderRadius: '30px', marginInlineStart: '1rem' }}>\r\n          <thead class=\"thead-primary\">\r\n            <tr>\r\n\r\n              <th>Branch ID</th>\r\n              <th>Branch Name</th>\r\n              <th>Branch Location</th>\r\n              <th>Branch Email</th>\r\n              <th>Branch Phone Number</th>\r\n              <th>Manager-ID</th>\r\n              <th>Manager Name</th>\r\n              <th>Manager Mobile Number</th>\r\n              <th>Manager Email</th>\r\n              <th>Manager Address</th>\r\n              <th>Edit</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {branch_manager.map((branch_manager, index) => (\r\n            <tr>\r\n              <td>{branch_manager.Branch_ID}</td>\r\n              <td>{branch_manager.Branch_Name}</td>\r\n              <td>{branch_manager.Branch_Location}</td>\r\n              <td>{branch_manager.Branch_Email}</td>\r\n              <td>{branch_manager.Branch_Phone_Number}</td>\r\n              <td>{branch_manager.Manager_ID}</td>\r\n              <td>{branch_manager.Manager_Name}</td>\r\n              <td>{branch_manager.Mobile_Number}</td>\r\n              <td>{branch_manager.Manager_Email}</td>\r\n              <td>{branch_manager.Address}</td>\r\n\r\n              <td>\r\n                <Link\r\n                  to={\"/branch_manager/\" + branch_manager.Branch_ID}\r\n                  className=\"btn btn-primary pqy\">Edit</Link>\r\n              </td>\r\n              <td>{/*<button className=\"btn-danger btn btn-primary pqy\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </Table>\r\n        {/* <ul className=\"list-group\">\r\n          {branch_manager &&\r\n            branch_manager.map((branch_manager, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => {setActiveBranch_Manager(branch_manager, index)\r\n                console.log(branch_manager)}\r\n                }\r\n                key={index}\r\n              >\r\n                {branch_manager.Branch_Name}\r\n              </li>\r\n            ))}\r\n        </ul> */}\r\n\r\n        {/* <button\r\n          className=\"m-3 btn btn-sm btn-danger\"\r\n          onClick={removeAllBranch_Managers}\r\n        >\r\n          Remove All\r\n        </button>\r\n      </div> */}\r\n        {/* <div className=\"col-md-6\"> */}\r\n        {/* {currentBranch_Manager ? (\r\n          <div>\r\n            <h4>Branch_Managers</h4>\r\n            <div>\r\n              <label>\r\n                <strong>Branch_Name:</strong>\r\n              </label>{\" \"}\r\n              {currentBranch_Manager.Branch_Name}\r\n              {currentBranch_Manager.Branch_ID}\r\n            </div>\r\n            <Link\r\n              to={\"/editbranch/\" + currentBranch_Manager.Branch_ID}\r\n              className=\"badge badge-warning\"\r\n            >\r\n              Edit\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Branch_Manager...</p>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n      <img src={image} id=\"imgt2\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Branch_ManagerList;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Trainer\\ShowTrainer.js",["229","230","231","232","233","234","235"],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Branch\\AddBranch.js",["236","237"],"C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Workout\\AddWorkout.js",["238","239","240"],"import React, { useState } from \"react\";\r\nimport WorkoutService from \"../../services/ManagerService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport image from \"../../Images/home.jpeg\"\r\nimport image2 from \"../../Images/workout.png\"\r\nimport \"../Member/Member.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nconst AddWorkout = () => {\r\n    \r\n  const initialWorkoutState = {\r\n    Workout_ID:null,\r\n    Workout_Name:\"\",\r\n    Workout_DietChart:\"\",\r\n    Working_Duration:\"\"\r\n  };\r\n  const [workout, setWorkout] = useState(initialWorkoutState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setWorkout({ ...workout, [name]: value });\r\n  };\r\n\r\n  const saveWorkout = () => {\r\n    var data = {\r\n      Workout_Name:workout.Workout_Name,\r\n      Workout_DietChart:workout.Workout_DietChart,\r\n      Working_Duration:workout.Working_Duration\r\n    };\r\n\r\n    WorkoutService.AddWorkout(data)\r\n      .then(response => {\r\n        setWorkout({\r\n            Workout_ID:response.data.Workout_ID,\r\n            Workout_Name:response.data.Workout_Name,\r\n            Workout_DietChart:response.data.Workout_DietChart,\r\n            Working_Duration:response.data.Working_Duration\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newWorkout = () => {\r\n    setWorkout(initialWorkoutState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <img src={image} id=\"imgt2\" />\r\n    <div className=\"member-submit-form\" id=\"member2\" >\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <Card style={{ height: '60rem', width: '30rem', marginBlockStart: '0rem', textAlign: 'left',boxShadow: 'none' , alignContent: 'center', alignItems: 'center', top: '0', background: 'transparent', borderColor: 'transparent' }}>\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newWorkout}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Workout_Name\">Workout_Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"title\"\r\n              required\r\n              value={workout.Workout_Name}\r\n              onChange={handleInputChange}\r\n              name=\"Workout_Name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\"\r\n              id=\"Workout_DietChart\"\r\n              required\r\n              value={workout.Workout_DietChart}\r\n              onChange={handleInputChange}\r\n              name=\"Workout_DietChart\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"lab\" align = \"center\" htmlFor=\"Working_Duration\">Working_Duration</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control int\" \r\n              id=\"Working_Duration\"\r\n              required\r\n              value={workout.Working_Duration}\r\n              onChange={handleInputChange}\r\n              name=\"Working_Duration\"\r\n            />\r\n          </div>\r\n          {\r\n        //       <div className=\"form-group\">\r\n        //     <label htmlFor=\"Workout_Amt\">Workout_Amt</label>\r\n        //     <input\r\n        //       type=\"number\"\r\n        //       className=\"form-control\"\r\n        //       id=\"Workout_Amt\"\r\n        //       required\r\n        //       value={workout.Workout_Amt}\r\n        //       onChange={handleInputChange}\r\n        //       name=\"Workout_Amt\"\r\n        //     />\r\n        //   </div> \r\n         }\r\n          {\r\n        //       <div className=\"form-group\">\r\n        //     <label htmlFor=\"Member_ID\">Member_ID</label>\r\n        //     <input\r\n        //       type=\"number\"\r\n        //       className=\"form-control\"\r\n        //       id=\"Member_ID\"\r\n        //       required\r\n        //       value={workout.Member_ID}\r\n        //       onChange={handleInputChange}\r\n        //       name=\"Member_ID\"\r\n        //     />\r\n        //   </div>\r\n        //   <div className=\"form-group\">\r\n        //     <label htmlFor=\"Workout_Name\">Workout_Name</label>\r\n        //     <input\r\n        //       type=\"text\"\r\n        //       className=\"form-control\"\r\n        //       id=\"Workout_Name\"\r\n        //       required\r\n        //       value={workout.Workout_Name}\r\n        //       onChange={handleInputChange}\r\n        //       name=\"Workout_Name\"\r\n        //     />\r\n        //   </div>\r\n        }\r\n          <br />\r\n           <br />      \r\n          <button onClick={saveWorkout} className=\"btn btn-outline-info tempBtn3\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </Card>\r\n    </div>\r\n    <img src={image2} id=\"imgt4\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddWorkout;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Trainer\\EditTrainer.js",["241","242"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport TrainerService from \"../../services/ManagerService\";\r\n\r\nconst Trainer = props => {\r\n    \r\n    console.log(useParams());\r\n  const {id } = useParams();\r\n//  ManagerDataService.get(Trainer_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(id);\r\n  let navigate = useNavigate();\r\n  // console.log(Trainer_ID);\r\n  const initialTrainerState = {\r\n    Trainer_ID: null,\r\n    Trainer_Name: \"\",\r\n    // Trainer_Weight: 0,\r\n    // Trainer_Height: 0,\r\n    // Age: 0,\r\n    Gender: \"\",\r\n    Blood_Type: \"\",\r\n    Phone: 0,\r\n    Address: \"\",\r\n    Emer_Name: \"\",\r\n    Emer_Mobile: 0,\r\n    Workout_Name:\"\"\r\n  };\r\n  const [currentTrainer, setCurrentTrainer] = useState(initialTrainerState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getTrainer = id => {\r\n    TrainerService.getTrainer(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentTrainer(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      getTrainer(id);\r\n  }, [id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentTrainer({ ...currentTrainer, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      Trainer_ID: currentTrainer.Trainer_ID,\r\n      Trainer_Name: currentTrainer.Trainer_Name,\r\n      //Mem_Weight: currentTrainer.Mem_Weight,\r\n      //Mem_Height: currentTrainer.Mem_Height,\r\n      Age: currentTrainer.Age,\r\n      Gender: currentTrainer.Gender,\r\n      Blood_Type: currentTrainer.Blood_Type,\r\n      Phone: currentTrainer.Phone,\r\n      Address: currentTrainer.Address,\r\n      Emer_Name: currentTrainer.Emer_Name,\r\n      Emer_Mobile: currentTrainer.Emer_Mobile,\r\n      Workout_Name:currentTrainer.Workout_Name\r\n\r\n\r\n    };\r\n\r\n    TrainerService.updateTrainer(currentTrainer.Trainer_ID, data)\r\n      .then(response => {\r\n        setCurrentTrainer({ ...currentTrainer, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateTrainer = () => {\r\n    TrainerService.updateTrainer(currentTrainer.Trainer_ID, currentTrainer)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Trainer was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteTrainer = () => {\r\n//     ManagerDataService.remove(currentTrainer.Trainer_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/trainer\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {currentTrainer ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Trainer</h4>\r\n          <form>\r\n\r\n\r\n          <div className=\"form-group\">\r\n          <label htmlFor=\"Trainer_Name\">Trainer_Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            required\r\n            value={currentTrainer.Trainer_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Trainer_Name\"\r\n          />\r\n        </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Gender\">Gender</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Gender\"\r\n                required\r\n                value={currentTrainer.Gender}\r\n                onChange={handleInputChange}\r\n                name=\"Gender\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Blood_Type\">Blood_Type</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Blood_Type\"\r\n                required\r\n                value={currentTrainer.Blood_Type}\r\n                onChange={handleInputChange}\r\n                name=\"Blood_Type\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Phone\">Phone</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Phone\"\r\n                required\r\n                value={currentTrainer.Phone}\r\n                onChange={handleInputChange}\r\n                name=\"Phone\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Address\"\r\n                required\r\n                value={currentTrainer.Address}\r\n                onChange={handleInputChange}\r\n                name=\"Address\"\r\n              />\r\n            </div>\r\n            \r\n            \r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Emer_Name\">Emer_Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Emer_Name\"\r\n                required\r\n                value={currentTrainer.Emer_Name}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Emer_Mobile\"\r\n                required\r\n                value={currentTrainer.Emer_Mobile}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Mobile\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Workout_Name\"\r\n            required\r\n            value={currentTrainer.Workout_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Workout_Name\"\r\n          />\r\n        </div>\r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteTrainer}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateTrainer}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Trainer...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trainer;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Workout\\EditWorkout.js",["243","244"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport WorkoutService from \"../../services/ManagerService\";\r\n\r\nconst Workout = props => {\r\n    \r\n    console.log(useParams());\r\n  const { id } = useParams();\r\n//  WorkoutService.get(Workout_ID).then(response=>console.log(response));\r\n//   const {id}=useParams();\r\n  \r\n//   const { id } = useParams();\r\n  // console.log(useParams());\r\n//    console.log(id);\r\n  console.log(id);\r\n  let navigate = useNavigate();\r\n  // console.log(Workout_ID);\r\n  const initialWorkoutState = {\r\n    Workout_ID:null,\r\n    Workout_Name:\"\",\r\n    Workout_DietChart:\"\",\r\n    Working_Duration:\"\"\r\n  };\r\n  const [currentWorkout, setCurrentWorkout] = useState(initialWorkoutState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getWorkout = id => {\r\n    WorkoutService.getWorkout(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentWorkout(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      getWorkout(id);\r\n  }, [id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentWorkout({ ...currentWorkout, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n        Workout_Name:currentWorkout.Workout_Name,\r\n        Workout_DietChart:currentWorkout.Workout_DietChart,\r\n        Working_Duration:currentWorkout.Working_Duration\r\n\r\n    };\r\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, data)\r\n      .then(response => {\r\n        setCurrentWorkout({ ...currentWorkout, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateWorkout = () => {\r\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, currentWorkout)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Workout was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n//   const deleteWorkout = () => {\r\n//     WorkoutService.remove(currentWorkout.Workout_ID)\r\n//       .then(response => {\r\n//         console.log(response.data);\r\n//         navigate(\"/workout\");\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   };\r\nconsole.log(currentWorkout);\r\n  return (\r\n    <div>\r\n      {currentWorkout ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Workout</h4>\r\n          <form>\r\n\r\n\r\n          <div className=\"form-group\">\r\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            required\r\n            value={currentWorkout.Workout_Name}\r\n            onChange={handleInputChange}\r\n            name=\"Workout_Name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"Workout_DietChart\"\r\n          required\r\n          value={currentWorkout.Workout_DietChart}\r\n          onChange={handleInputChange}\r\n          name=\"Workout_DietChart\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <label htmlFor=\"Working_Duration\">Working_Duration</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        id=\"Working_Duration\"\r\n        required\r\n        value={currentWorkout.Working_Duration}\r\n        onChange={handleInputChange}\r\n        name=\"Working_Duration\"\r\n      />\r\n    </div>\r\n           \r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n         { \r\n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteWorkout}>\r\n        //     Delete\r\n        //   </button>\r\n        }\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateWorkout}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Workout...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","C:\\Users\\dhair_gzqoc8v\\Desktop\\DBMS\\DBMS_Project\\gamma\\src\\components\\Workout\\ShowWorkout.js",["245","246","247","248","249","250","251","252"],"import React, { useState, useEffect } from \"react\";\r\nimport WorkoutService from \"../../services/ManagerService\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport image from \"../../Images/home.jpeg\"\r\nimport \"../table.css\"\r\nconst WorkoutList = () => {\r\n\r\n  const [workout, setWorkout] = useState([]);\r\n  const [currentWorkout, setCurrentWorkout] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveWorkouts();\r\n  }, []);\r\n\r\n  const onChangeSearchMem_Name = e => {\r\n    const searchMem_Name = e.target.value;\r\n    setSearchMem_Name(searchMem_Name);\r\n  };\r\n\r\n  const retrieveWorkouts = () => {\r\n    WorkoutService.getAllWorkout()\r\n      .then(response => {\r\n        setWorkout(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveWorkouts();\r\n    setCurrentWorkout(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveWorkout = (workout, index) => {\r\n    setCurrentWorkout(workout);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  //   const removeAllWorkouts = () => {\r\n  //     WorkoutDataService.removeAll()\r\n  //       .then(response => {\r\n  //         console.log(response.data);\r\n  //         refreshList();\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n\r\n  //   const findByMem_Name = () => {\r\n  //     WorkoutDataService.findByMem_Name(searchMem_Name)\r\n  //       .then(response => {\r\n  //         setWorkout(response.data);\r\n  //         console.log(response.data);\r\n  //       })\r\n  //       .catch(e => {\r\n  //         console.log(e);\r\n  //       });\r\n  //   };\r\n\r\n  return (\r\n    <div className=\"list row\" align=\"center\">\r\n    <img src={image} id=\"imgt2\" />  \r\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\r\n      <br/>\r\n        <h4 className=\"lab\">WORKOUTS LIST</h4>\r\n        <br/>\r\n        <Table striped bordered class=\"table\" hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{}}>\r\n          <thead class=\"thead-primary\">\r\n            <tr>\r\n\r\n              <th>Workout ID</th>\r\n              <th>Workout Name</th>\r\n              <th>Diet Chart</th>\r\n              <th>Duration</th>\r\n              <th>Edit</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {workout.map((workout, index) => (\r\n            <tr>\r\n              <td>{workout.Workout_ID}</td>\r\n              <td>{workout.Workout_Name}</td>\r\n              <td>{workout.Workout_DietChart}</td>\r\n              <td>{workout.Working_Duration}</td>\r\n\r\n              <td>\r\n                <Link\r\n                  to={\"/workout/edit/\" + workout.Workout_ID}\r\n                  class=\"btn btn-primary pqy\">Edit</Link>\r\n              </td>\r\n              {/* <td><button class=\"btn-danger btn btn-primary pqy\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button></td> */}\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n        {/* <ul className=\"list-group\">\r\n          {workout &&\r\n            workout.map((workout, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => {\r\n                  setActiveWorkout(workout, index)\r\n                  console.log(workout.Workout_Name)\r\n                }\r\n                }\r\n                key={index}\r\n              >\r\n                {workout.Workout_Name}\r\n              </li>\r\n            ))}\r\n        </ul> */}\r\n\r\n        {\r\n          //     <button\r\n          //   className=\"m-3 btn btn-sm btn-danger\"\r\n          //   onClick={removeAllWorkouts}\r\n          // >\r\n          //   Remove All\r\n          // </button>\r\n        }\r\n      </div>\r\n      {\r\n        //   <div className=\"col-md-6\">\r\n        //   {currentWorkout ? (\r\n        //     <div>\r\n        //       <h4>Workouts</h4>\r\n        //       <div>\r\n        //         <label>\r\n        //           <strong>Mem_Name:</strong>\r\n        //         </label>{\" \"}\r\n\r\n        //         {currentWorkout.Workout_ID}\r\n        //       </div>\r\n        //       <Link\r\n        //         to={\"/editworkout/\" + currentWorkout.Workout_ID}\r\n        //         className=\"badge badge-warning\"\r\n        //       >\r\n        //         Edit\r\n        //       </Link>\r\n        //     </div>\r\n        //   ) : (\r\n        //     <div>\r\n        //       <br />\r\n        //       <p>Please click on a Workout...</p>\r\n        //     </div>\r\n        //   )}\r\n        // </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkoutList;\r\n",{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":5,"column":8,"nodeType":"259","messageId":"260","endLine":5,"endColumn":17},{"ruleId":"257","severity":1,"message":"261","line":31,"column":10,"nodeType":"259","messageId":"260","endLine":31,"endColumn":18},{"ruleId":"257","severity":1,"message":"262","line":32,"column":8,"nodeType":"259","messageId":"260","endLine":32,"endColumn":20},{"ruleId":"257","severity":1,"message":"263","line":37,"column":7,"nodeType":"259","messageId":"260","endLine":37,"endColumn":15},{"ruleId":"257","severity":1,"message":"264","line":38,"column":10,"nodeType":"259","messageId":"260","endLine":38,"endColumn":25},{"ruleId":"257","severity":1,"message":"265","line":39,"column":10,"nodeType":"259","messageId":"260","endLine":39,"endColumn":25},{"ruleId":"257","severity":1,"message":"266","line":40,"column":10,"nodeType":"259","messageId":"260","endLine":40,"endColumn":27},{"ruleId":"257","severity":1,"message":"267","line":40,"column":29,"nodeType":"259","messageId":"260","endLine":40,"endColumn":49},{"ruleId":"257","severity":1,"message":"268","line":41,"column":10,"nodeType":"259","messageId":"260","endLine":41,"endColumn":27},{"ruleId":"257","severity":1,"message":"269","line":41,"column":29,"nodeType":"259","messageId":"260","endLine":41,"endColumn":49},{"ruleId":"257","severity":1,"message":"270","line":42,"column":10,"nodeType":"259","messageId":"260","endLine":42,"endColumn":28},{"ruleId":"257","severity":1,"message":"271","line":42,"column":30,"nodeType":"259","messageId":"260","endLine":42,"endColumn":51},{"ruleId":"257","severity":1,"message":"272","line":43,"column":10,"nodeType":"259","messageId":"260","endLine":43,"endColumn":25},{"ruleId":"257","severity":1,"message":"273","line":43,"column":27,"nodeType":"259","messageId":"260","endLine":43,"endColumn":45},{"ruleId":"257","severity":1,"message":"274","line":44,"column":9,"nodeType":"259","messageId":"260","endLine":44,"endColumn":22},{"ruleId":"257","severity":1,"message":"275","line":53,"column":9,"nodeType":"259","messageId":"260","endLine":53,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":76,"column":7,"nodeType":"278","endLine":76,"endColumn":37},{"ruleId":"257","severity":1,"message":"279","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":17,"column":7,"nodeType":"278","endLine":17,"endColumn":37},{"ruleId":"257","severity":1,"message":"280","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"281","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"279","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":19},{"ruleId":"257","severity":1,"message":"282","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":4,"column":8,"nodeType":"259","messageId":"260","endLine":4,"endColumn":17},{"ruleId":"257","severity":1,"message":"283","line":5,"column":10,"nodeType":"259","messageId":"260","endLine":5,"endColumn":18},{"ruleId":"257","severity":1,"message":"284","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":18},{"ruleId":"257","severity":1,"message":"285","line":7,"column":8,"nodeType":"259","messageId":"260","endLine":7,"endColumn":24},{"ruleId":"257","severity":1,"message":"286","line":8,"column":8,"nodeType":"259","messageId":"260","endLine":8,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":26,"column":7,"nodeType":"278","endLine":26,"endColumn":36},{"ruleId":"257","severity":1,"message":"263","line":19,"column":7,"nodeType":"259","messageId":"260","endLine":19,"endColumn":15},{"ruleId":"257","severity":1,"message":"287","line":58,"column":9,"nodeType":"259","messageId":"260","endLine":58,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":108,"column":7,"nodeType":"278","endLine":108,"endColumn":37},{"ruleId":"257","severity":1,"message":"288","line":24,"column":10,"nodeType":"259","messageId":"260","endLine":24,"endColumn":19},{"ruleId":"289","severity":2,"message":"290","line":77,"column":9,"nodeType":"259","messageId":"291","endLine":77,"endColumn":16},{"ruleId":"257","severity":1,"message":"292","line":81,"column":7,"nodeType":"259","messageId":"260","endLine":81,"endColumn":10},{"ruleId":"276","severity":1,"message":"277","line":88,"column":7,"nodeType":"278","endLine":88,"endColumn":37},{"ruleId":"276","severity":1,"message":"277","line":221,"column":7,"nodeType":"278","endLine":221,"endColumn":38},{"ruleId":"257","severity":1,"message":"293","line":11,"column":10,"nodeType":"259","messageId":"260","endLine":11,"endColumn":23},{"ruleId":"257","severity":1,"message":"294","line":12,"column":10,"nodeType":"259","messageId":"260","endLine":12,"endColumn":22},{"ruleId":"257","severity":1,"message":"295","line":13,"column":10,"nodeType":"259","messageId":"260","endLine":13,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":17,"column":6,"nodeType":"298","endLine":17,"endColumn":8,"suggestions":"299"},{"ruleId":"257","severity":1,"message":"300","line":19,"column":9,"nodeType":"259","messageId":"260","endLine":19,"endColumn":31},{"ruleId":"257","severity":1,"message":"301","line":41,"column":9,"nodeType":"259","messageId":"260","endLine":41,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":164,"column":7,"nodeType":"278","endLine":164,"endColumn":37},{"ruleId":"276","severity":1,"message":"277","line":62,"column":5,"nodeType":"278","endLine":62,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":158,"column":5,"nodeType":"278","endLine":158,"endColumn":36},{"ruleId":"257","severity":1,"message":"302","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":14},{"ruleId":"257","severity":1,"message":"303","line":12,"column":10,"nodeType":"259","messageId":"260","endLine":12,"endColumn":24},{"ruleId":"257","severity":1,"message":"294","line":13,"column":10,"nodeType":"259","messageId":"260","endLine":13,"endColumn":22},{"ruleId":"257","severity":1,"message":"295","line":14,"column":10,"nodeType":"259","messageId":"260","endLine":14,"endColumn":24},{"ruleId":"296","severity":1,"message":"304","line":18,"column":6,"nodeType":"298","endLine":18,"endColumn":8,"suggestions":"305"},{"ruleId":"257","severity":1,"message":"300","line":20,"column":9,"nodeType":"259","messageId":"260","endLine":20,"endColumn":31},{"ruleId":"257","severity":1,"message":"306","line":36,"column":9,"nodeType":"259","messageId":"260","endLine":36,"endColumn":20},{"ruleId":"257","severity":1,"message":"307","line":42,"column":9,"nodeType":"259","messageId":"260","endLine":42,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":156,"column":7,"nodeType":"278","endLine":156,"endColumn":37},{"ruleId":"257","severity":1,"message":"263","line":16,"column":7,"nodeType":"259","messageId":"260","endLine":16,"endColumn":15},{"ruleId":"257","severity":1,"message":"287","line":55,"column":9,"nodeType":"259","messageId":"260","endLine":55,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":58,"column":5,"nodeType":"278","endLine":58,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":169,"column":7,"nodeType":"278","endLine":169,"endColumn":38},{"ruleId":"257","severity":1,"message":"263","line":16,"column":7,"nodeType":"259","messageId":"260","endLine":16,"endColumn":15},{"ruleId":"257","severity":1,"message":"287","line":49,"column":9,"nodeType":"259","messageId":"260","endLine":49,"endColumn":24},{"ruleId":"257","severity":1,"message":"308","line":10,"column":10,"nodeType":"259","messageId":"260","endLine":10,"endColumn":26},{"ruleId":"257","severity":1,"message":"294","line":11,"column":10,"nodeType":"259","messageId":"260","endLine":11,"endColumn":22},{"ruleId":"257","severity":1,"message":"295","line":12,"column":10,"nodeType":"259","messageId":"260","endLine":12,"endColumn":24},{"ruleId":"296","severity":1,"message":"309","line":16,"column":6,"nodeType":"298","endLine":16,"endColumn":8,"suggestions":"310"},{"ruleId":"257","severity":1,"message":"300","line":18,"column":9,"nodeType":"259","messageId":"260","endLine":18,"endColumn":31},{"ruleId":"257","severity":1,"message":"306","line":34,"column":9,"nodeType":"259","messageId":"260","endLine":34,"endColumn":20},{"ruleId":"257","severity":1,"message":"311","line":40,"column":9,"nodeType":"259","messageId":"260","endLine":40,"endColumn":27},{"ruleId":"276","severity":1,"message":"277","line":164,"column":7,"nodeType":"278","endLine":164,"endColumn":37},{"ruleId":"276","severity":1,"message":"277","line":78,"column":5,"nodeType":"278","endLine":78,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":199,"column":7,"nodeType":"278","endLine":199,"endColumn":38},{"ruleId":"257","severity":1,"message":"312","line":9,"column":10,"nodeType":"259","messageId":"260","endLine":9,"endColumn":31},{"ruleId":"257","severity":1,"message":"294","line":10,"column":10,"nodeType":"259","messageId":"260","endLine":10,"endColumn":22},{"ruleId":"257","severity":1,"message":"313","line":17,"column":9,"nodeType":"259","messageId":"260","endLine":17,"endColumn":34},{"ruleId":"257","severity":1,"message":"314","line":39,"column":9,"nodeType":"259","messageId":"260","endLine":39,"endColumn":32},{"ruleId":"257","severity":1,"message":"315","line":44,"column":9,"nodeType":"259","messageId":"260","endLine":44,"endColumn":33},{"ruleId":"257","severity":1,"message":"316","line":55,"column":9,"nodeType":"259","messageId":"260","endLine":55,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":163,"column":7,"nodeType":"278","endLine":163,"endColumn":37},{"ruleId":"257","severity":1,"message":"317","line":11,"column":10,"nodeType":"259","messageId":"260","endLine":11,"endColumn":24},{"ruleId":"257","severity":1,"message":"294","line":12,"column":10,"nodeType":"259","messageId":"260","endLine":12,"endColumn":22},{"ruleId":"257","severity":1,"message":"295","line":13,"column":10,"nodeType":"259","messageId":"260","endLine":13,"endColumn":24},{"ruleId":"296","severity":1,"message":"318","line":17,"column":6,"nodeType":"298","endLine":17,"endColumn":8,"suggestions":"319"},{"ruleId":"257","severity":1,"message":"300","line":19,"column":9,"nodeType":"259","messageId":"260","endLine":19,"endColumn":31},{"ruleId":"257","severity":1,"message":"320","line":41,"column":9,"nodeType":"259","messageId":"260","endLine":41,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":182,"column":7,"nodeType":"278","endLine":182,"endColumn":37},{"ruleId":"276","severity":1,"message":"277","line":77,"column":5,"nodeType":"278","endLine":77,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":221,"column":3,"nodeType":"278","endLine":221,"endColumn":34},{"ruleId":"257","severity":1,"message":"279","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":54,"column":5,"nodeType":"278","endLine":54,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":158,"column":5,"nodeType":"278","endLine":158,"endColumn":36},{"ruleId":"257","severity":1,"message":"263","line":16,"column":7,"nodeType":"259","messageId":"260","endLine":16,"endColumn":15},{"ruleId":"257","severity":1,"message":"287","line":56,"column":9,"nodeType":"259","messageId":"260","endLine":56,"endColumn":24},{"ruleId":"257","severity":1,"message":"263","line":16,"column":7,"nodeType":"259","messageId":"260","endLine":16,"endColumn":15},{"ruleId":"257","severity":1,"message":"287","line":48,"column":9,"nodeType":"259","messageId":"260","endLine":48,"endColumn":24},{"ruleId":"257","severity":1,"message":"279","line":3,"column":16,"nodeType":"259","messageId":"260","endLine":3,"endColumn":25},{"ruleId":"257","severity":1,"message":"321","line":10,"column":10,"nodeType":"259","messageId":"260","endLine":10,"endColumn":24},{"ruleId":"257","severity":1,"message":"294","line":11,"column":10,"nodeType":"259","messageId":"260","endLine":11,"endColumn":22},{"ruleId":"257","severity":1,"message":"295","line":12,"column":10,"nodeType":"259","messageId":"260","endLine":12,"endColumn":24},{"ruleId":"257","severity":1,"message":"300","line":18,"column":9,"nodeType":"259","messageId":"260","endLine":18,"endColumn":31},{"ruleId":"257","severity":1,"message":"306","line":34,"column":9,"nodeType":"259","messageId":"260","endLine":34,"endColumn":20},{"ruleId":"257","severity":1,"message":"322","line":40,"column":9,"nodeType":"259","messageId":"260","endLine":40,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":69,"column":5,"nodeType":"278","endLine":69,"endColumn":35},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'DropdownItem' is defined but never used.","'navigate' is assigned a value but never used.","'showDropdownMem' is assigned a value but never used.","'showDropdownPay' is assigned a value but never used.","'showDropdownTrain' is assigned a value but never used.","'setShowDropdownTrain' is assigned a value but never used.","'showDropdownEquip' is assigned a value but never used.","'setShowDropdownEquip' is assigned a value but never used.","'showDropdownBranch' is assigned a value but never used.","'setShowDropdownBranch' is assigned a value but never used.","'showDropdownWor' is assigned a value but never used.","'setShowDropdownWor' is assigned a value but never used.","'particlesInit' is assigned a value but never used.","'particlesLoaded' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserService' is defined but never used.","'loadFull' is defined but never used.","'Typewriter' is defined but never used.","'TypeWriterEffect' is defined but never used.","'sample' is defined but never used.","'updatePublished' is assigned a value but never used.","'submitted' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'confirm'.","defaultMessage","'txt' is assigned a value but never used.","'currentMember' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'searchMem_Name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveMembers'. Either include it or remove the dependency array.","ArrayExpression",["325"],"'onChangeSearchMem_Name' is assigned a value but never used.","'setActiveMember' is assigned a value but never used.","'Link' is defined but never used.","'currentPayment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrievePayments'. Either include it or remove the dependency array.",["326"],"'refreshList' is assigned a value but never used.","'setActivePayment' is assigned a value but never used.","'currentEquipment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveEquipments'. Either include it or remove the dependency array.",["327"],"'setActiveEquipment' is assigned a value but never used.","'currentBranch_Manager' is assigned a value but never used.","'onChangeSearchBranch_Name' is assigned a value but never used.","'setActiveBranch_Manager' is assigned a value but never used.","'removeAllBranch_Managers' is assigned a value but never used.","'findByBranch_Name' is assigned a value but never used.","'currentTrainer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveTrainers'. Either include it or remove the dependency array.",["328"],"'setActiveTrainer' is assigned a value but never used.","'currentWorkout' is assigned a value but never used.","'setActiveWorkout' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},"Update the dependencies array to be: [retrieveMembers]",{"range":"337","text":"338"},"Update the dependencies array to be: [retrievePayments]",{"range":"339","text":"340"},"Update the dependencies array to be: [retrieveEquipments]",{"range":"341","text":"342"},"Update the dependencies array to be: [retrieveTrainers]",{"range":"343","text":"344"},[635,637],"[retrieveMembers]",[652,654],"[retrievePayments]",[632,634],"[retrieveEquipments]",[621,623],"[retrieveTrainers]"]