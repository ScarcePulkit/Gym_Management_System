[{"/Users/khushil/Project/DBMS_Project/gamma/src/index.js":"1","/Users/khushil/Project/DBMS_Project/gamma/src/serviceWorker.js":"2","/Users/khushil/Project/DBMS_Project/gamma/src/App.js":"3","/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowMembers.js":"4","/Users/khushil/Project/DBMS_Project/gamma/src/components/Register.js":"5","/Users/khushil/Project/DBMS_Project/gamma/src/components/Profile.js":"6","/Users/khushil/Project/DBMS_Project/gamma/src/components/Home.js":"7","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardUser.js":"8","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardAdmin.js":"9","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardModerator.js":"10","/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowEquipment.js":"11","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddTrainer.js":"12","/Users/khushil/Project/DBMS_Project/gamma/src/components/Member.js":"13","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddEquipment.js":"14","/Users/khushil/Project/DBMS_Project/gamma/src/components/Login.js":"15","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment.js":"16","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddWorkout.js":"17","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddBranch.js":"18","/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowTrainer.js":"19","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth.service.js":"20","/Users/khushil/Project/DBMS_Project/gamma/src/components/EditWorkout.js":"21","/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowWorkout.js":"22","/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowPayment.js":"23","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddMember.js":"24","/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowBranches.js":"25","/Users/khushil/Project/DBMS_Project/gamma/src/components/EditBranch.js":"26","/Users/khushil/Project/DBMS_Project/gamma/src/common/EventBus.js":"27","/Users/khushil/Project/DBMS_Project/gamma/src/services/ManagerService.js":"28","/Users/khushil/Project/DBMS_Project/gamma/src/services/user.service.js":"29","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth-header.js":"30"},{"size":320,"mtime":1650114911777,"results":"31","hashOfConfig":"32"},{"size":5086,"mtime":1650114911777,"results":"33","hashOfConfig":"32"},{"size":9588,"mtime":1650142729347,"results":"34","hashOfConfig":"32"},{"size":5617,"mtime":1650142376191,"results":"35","hashOfConfig":"32"},{"size":4639,"mtime":1650114911777,"results":"36","hashOfConfig":"32"},{"size":1081,"mtime":1650114911776,"results":"37","hashOfConfig":"32"},{"size":1648,"mtime":1650129382560,"results":"38","hashOfConfig":"32"},{"size":891,"mtime":1650114911776,"results":"39","hashOfConfig":"32"},{"size":894,"mtime":1650114911776,"results":"40","hashOfConfig":"32"},{"size":906,"mtime":1650114911776,"results":"41","hashOfConfig":"32"},{"size":5585,"mtime":1650138357010,"results":"42","hashOfConfig":"32"},{"size":5550,"mtime":1650114911775,"results":"43","hashOfConfig":"32"},{"size":7438,"mtime":1650114911776,"results":"44","hashOfConfig":"32"},{"size":4837,"mtime":1650114911775,"results":"45","hashOfConfig":"32"},{"size":3607,"mtime":1650141876332,"results":"46","hashOfConfig":"32"},{"size":4352,"mtime":1650114911776,"results":"47","hashOfConfig":"32"},{"size":4302,"mtime":1650114911776,"results":"48","hashOfConfig":"32"},{"size":6712,"mtime":1650114911775,"results":"49","hashOfConfig":"32"},{"size":5752,"mtime":1650138142726,"results":"50","hashOfConfig":"32"},{"size":824,"mtime":1650114911778,"results":"51","hashOfConfig":"32"},{"size":4132,"mtime":1650114911776,"results":"52","hashOfConfig":"32"},{"size":4823,"mtime":1650119963881,"results":"53","hashOfConfig":"32"},{"size":5549,"mtime":1650138038165,"results":"54","hashOfConfig":"32"},{"size":7124,"mtime":1650142753127,"results":"55","hashOfConfig":"32"},{"size":5472,"mtime":1650118069605,"results":"56","hashOfConfig":"32"},{"size":7112,"mtime":1650114911776,"results":"57","hashOfConfig":"32"},{"size":327,"mtime":1650114911775,"results":"58","hashOfConfig":"32"},{"size":2557,"mtime":1650114911778,"results":"59","hashOfConfig":"32"},{"size":622,"mtime":1650114911778,"results":"60","hashOfConfig":"32"},{"size":342,"mtime":1650114911778,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"9znqma",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/khushil/Project/DBMS_Project/gamma/src/index.js",[],["136","137"],"/Users/khushil/Project/DBMS_Project/gamma/src/serviceWorker.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/App.js",["138","139","140"],"/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowMembers.js",["141","142","143","144","145","146","147"],"import React, { useState, useEffect } from \"react\";\nimport ManagerService from \"../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Table } from \"react-bootstrap\";\nimport \"./Member.css\";\nimport image from \"../Images/pexels-victor-freitas-841130.jpg\"\nconst MemberList = () => {\n  const { id } = useParams();\n  const [member, setMember] = useState([]);\n  const [currentMember, setCurrentMember] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveMembers();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveMembers = () => {\n    ManagerService.getAll(id)\n      .then(response => {\n        setMember(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveMembers();\n    setCurrentMember(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveMember = (member, index) => {\n    setCurrentMember(member);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllMembers = () => {\n  //     MemberDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     MemberDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setMember(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  const deleteMember = (Mem_ID) => {\n    console.log(Mem_ID);\n    ManagerService.removeMember(Mem_ID)\n      .then(response => {\n        console.log(response.data);\n        refreshList();\n      })\n  }\n\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          {\n            //  <input\n            //   type=\"text\"\n            //   className=\"form-control\"\n            //   placeholder=\"Search by Mem_Name\"\n            //   value={searchMem_Name}\n            //   onChange={onChangeSearchMem_Name}\n            // />\n          }\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\" textAlign='center'>\n        <br />\n        <h4 className=\"lab\">Members List</h4>\n        <br />\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ textAlign: \"center\", borderRadius: '20px', verticalAlign: 'center' }}>\n          <thead>\n            <tr>\n\n              <th>Member id</th>\n              <th>Member Name</th>\n              <th>Member Phone</th>\n              <th>Member Weight</th>\n              <th>Member Height</th>\n              <th>Age</th>\n              <th>Gender</th>\n              <th>Blood_Type</th>\n              <th>Address</th>\n              <th>Emergency Name</th>\n              <th>Emergency Mobile</th>\n              <th>Update/Delete</th>\n            </tr>\n          </thead>\n          {member &&\n            member.map((member, index) => (\n              <tr>\n                <td>{member.Mem_ID}</td>\n                <td>{member.Mem_Name}</td>\n                <td>{member.Mobile_Number}</td>\n                <td>{member.Mem_Weight}</td>\n                <td>{member.Mem_Height}</td>\n                <td>{member.Age}</td>\n                <td>{member.Gender}</td>\n                <td>{member.Blood_Type}</td>\n                <td>{member.Address}</td>\n                <td>{member.Emer_Name}</td>\n                <td>{member.Emer_Mobile}</td>\n                <td align=\"right\"><button className=\"btn-danger pqy\" align=\"left\" onClick={() => { deleteMember(member.Mem_ID) }}>Delete</button><Link style={{ textAlign: \"left\" }}\n                  to={\"/editmember/\" + member.Mem_ID}\n                  className=\"badge badge-warning pqy\">\n                  Edit\n                </Link></td>\n              </tr>\n            ))}\n        </Table>\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllMembers}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //   <div className=\"col-md-6\">\n        //   {currentMember ? (\n        //     <div>\n        //       <h4>Members</h4>\n        //       <div>\n        //         <label>\n        //           <strong>Mem_Name:</strong>\n        //         </label>{\" \"}\n\n        //         {currentMember.Mem_ID}\n        //       </div>\n        //       <Link\n        //         to={\"/editmember/\" + currentMember.Mem_ID}\n        //         className=\"badge badge-warning\"\n        //       >\n        //         Edit\n        //       </Link>\n        //     </div>\n        //   ) : (\n        //     <div>\n        //       <br />\n        //       <p>Please click on a Member...</p>\n        //     </div>\n        //   )}\n        // </div>\n      }\n    </div>\n  );\n};\n\nexport default MemberList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Register.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Profile.js",["148"],"import React from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { useParams } from \"react-router-dom\";\n\nconst Profile = () => {\n  const currentManager = AuthService.getCurrentManager();\n  console.log(currentManager);\n  // console.log(useParams);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        \n          <h3>Branch_Name: <strong>{currentManager.branch.Branch_Name}</strong></h3>\n      \n      </header>\n      \n      {\n      //   <p>\n      //   <strong>Token:</strong> {currentManager.accessToken.substring(0, 20)} ...{\" \"}\n      //   {currentManager.accessToken.substr(currentManager.accessToken.length - 20)}\n      // </p>\n    }\n      {\n      //   <p>\n      //   <strong>Id:</strong> {currentManager.id}\n      // </p>\n      // <p>\n      //   <strong>Email:</strong> {currentManager.email}\n      // </p>\n    }\n    { \n      //  <ul>\n      //   {currentManager.roles &&\n      //     currentManager.roles.map((role, index) => <li key={index}>{role}</li>)}\n      // </ul>\n    }\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Home.js",["149","150","151","152","153","154","155"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport Typewriter from \"typewriter-effect\";\nimport TypeWriterEffect from 'react-typewriter-effect';\nimport sample from \"../Videos/pexels-tima-miroshnichenko-6388436.mp4\"\nconst Home = () => {\n//   const particlesInit = async (main) => {\n//   console.log(main);\n\n//   // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n//   // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n//   // starting from v2 you can add only the features you need reducing the bundle size\n//   await loadFull(main);\n// };\n\n// const particlesLoaded = (container) => {\n//   console.log(container);\n//};\nreturn (\n<div >\n<video id = \"video\" className='videoTag' autoPlay loop muted fluid>\n    <source src={sample} type='video/mp4' />\n</video>\n  <TypeWriterEffect\n        textStyle={{\n          fontFamily: 'Arial-BoldMT',\n          color: 'Red',\n          fontWeight: 500,\n          fontSize: '5em',\n        }}\n        startDelay={500}\n        cursorColor=\"#3F3D56\"\n        multiText={[\n          'Hey there, This is a type writer animation package',\n          'it consist of two types...',\n          'Single text display and multi text display',\n          'Fonts can be customized.',\n          'The type speed can be customized as well',\n        ]}\n        multiTextDelay={1000}\n        typeSpeed={80}\n      />\n      </div>\n      \n)}\n\nexport default Home;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardUser.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardAdmin.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/BoardModerator.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowEquipment.js",["156","157","158","159","160","161","162","163"],"import React, { useState, useEffect } from \"react\";\nimport EquipmentService from \"../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport image from \"../Images/pexels-victor-freitas-841130.jpg\"\nconst EquipmentList = () => {\n  const { id } = useParams();\n  const [equipment, setEquipment] = useState([]);\n  const [currentEquipment, setCurrentEquipment] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveEquipments();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveEquipments = () => {\n    EquipmentService.showEquipment(id)\n      .then(response => {\n        setEquipment(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveEquipments();\n    setCurrentEquipment(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveEquipment = (equipment, index) => {\n    setCurrentEquipment(equipment);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllEquipments = () => {\n  //     EquipmentDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     EquipmentDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setEquipment(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(equipment)\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Mem_Name\"\n          //value={searchMem_Name}\n          //onChange={onChangeSearchMem_Name}\n          />\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <br />\n        <br />\n        <br />\n        <h4 className=\"lab\">Equipments List</h4>\n        <br />\n        {/* khushil working */}\n\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1.5rem' }}>\n          <thead>\n            <tr>\n\n              <th>Equipment ID</th>\n              <th>Equipment Name</th>\n              <th>Equipment Kind</th>\n              <th>Working Status</th>\n              <th>Exercise</th>\n\n            </tr>\n          </thead>\n\n          {equipment.map((equipment, index) => (\n            <tr>\n              <td>{equipment.Equipment_ID}</td>\n              <td>{equipment.Equipment_Name}</td>\n              <td>{equipment.Equipment_Kind}</td>\n              <td>{equipment.Working_Status}</td>\n              <td>{equipment.Exercise}</td>\n\n              <td>\n                <Link\n                  to={\"/equipment/edit/\" + equipment.Equipment_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {equipment &&\n            equipment.map((equipment, index) => (\n              <li\n                className={\n                  \"list-group-item \"\n                }\n                onClick={() => {\n                  setActiveEquipment(equipment, index)\n                }\n                }\n                key={index}\n              >\n                {equipment.Equipment_ID}                  {equipment.Equipment_Desc}\n              </li>\n\n\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllEquipments}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentEquipment ? (\n        //       <div>\n        //         <h4>Equipments</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentEquipment.Equipment_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/editequipment/\" + currentEquipment.Equipment_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Equipment...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div >\n  );\n};\n\nexport default EquipmentList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddTrainer.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Member.js",["164","165"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ManagerDataService from \"../services/ManagerService\";\n\nconst Member = props => {\n    \n    console.log(useParams());\n  const { Mem_ID } = useParams();\n//  ManagerDataService.get(Mem_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(Mem_ID);\n  let navigate = useNavigate();\n  // console.log(Mem_ID);\n  const initialMemberState = {\n    Mem_ID: null,\n    Mem_Name: \"\",\n    Mem_Weight: 0,\n    Mem_Height: 0,\n    Age: 0,\n    Gender: \"\",\n    Blood_Type: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Emer_Name: \"\",\n    Emer_Mobile: 0\n  };\n  const [currentMember, setCurrentMember] = useState(initialMemberState);\n  const [message, setMessage] = useState(\"\");\n\n  const getMember = Mem_ID => {\n    ManagerDataService.get(Mem_ID)\n      .then(response => {\n        console.log(response.data);\n        setCurrentMember(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (Mem_ID)\n      getMember(Mem_ID);\n  }, [Mem_ID]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentMember({ ...currentMember, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      Mem_ID: currentMember.Mem_ID,\n      Mem_Name: currentMember.Mem_Name,\n      Mem_Weight: currentMember.Mem_Weight,\n      Mem_Height: currentMember.Mem_Height,\n      Age: currentMember.Age,\n      Gender: currentMember.Gender,\n      Blood_Type: currentMember.Blood_Type,\n      Mobile_Number: currentMember.Mobile_Number,\n      Address: currentMember.Address,\n      Emer_Name: currentMember.Emer_Name,\n      Emer_Mobile: currentMember.Emer_Mobile\n\n    };\n\n    ManagerDataService.update(currentMember.Mem_ID, data)\n      .then(response => {\n        setCurrentMember({ ...currentMember, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateMember = () => {\n    ManagerDataService.update(currentMember.Mem_ID, currentMember)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Member was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteMember = () => {\n//     ManagerDataService.remove(currentMember.Mem_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/member\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\n\n  return (\n    <div>\n      {currentMember ? (\n        <div className=\"edit-form\">\n          <h4>Member</h4>\n          <form>\n\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Mem_Name\">Mem_Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={currentMember.Mem_Name}\n                onChange={handleInputChange}\n                name=\"Mem_Name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"Mem_Weight\">Mem_Weight</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Mem_Weight\"\n                required\n                value={currentMember.Mem_Weight}\n                onChange={handleInputChange}\n                name=\"Mem_Weight\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Mem_Height\">Mem_Height</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Mem_Height\"\n                required\n                value={currentMember.Mem_Height}\n                onChange={handleInputChange}\n                name=\"Mem_Height\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Age\">Age</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Age\"\n                required\n                value={currentMember.Age}\n                onChange={handleInputChange}\n                name=\"Age\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Gender\">Gender</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Gender\"\n                required\n                value={currentMember.Gender}\n                onChange={handleInputChange}\n                name=\"Gender\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Blood_Type\">Blood_Type</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Blood_Type\"\n                required\n                value={currentMember.Blood_Type}\n                onChange={handleInputChange}\n                name=\"Blood_Type\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Mobile_Number\"\n                required\n                value={currentMember.Mobile_Number}\n                onChange={handleInputChange}\n                name=\"Mobile_Number\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Address\"\n                required\n                value={currentMember.Address}\n                onChange={handleInputChange}\n                name=\"Address\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Emer_Name\">Emer_Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"Emer_Name\"\n                required\n                value={currentMember.Emer_Name}\n                onChange={handleInputChange}\n                name=\"Emer_Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"Emer_Mobile\"\n                required\n                value={currentMember.Emer_Mobile}\n                onChange={handleInputChange}\n                name=\"Emer_Mobile\"\n              />\n            </div>\n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteMember}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateMember}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Member...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Member;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddEquipment.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/Login.js",["166"],"import React, { useState, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport image from \"../Images/pexels-andrea-piacquadio-3838389.jpg\"\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = () => {\n  let navigate = useNavigate();\n\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [manager_Email, setManager_Email] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeManager_Email = (e) => {\n    const manager_Email = e.target.value;\n    setManager_Email(manager_Email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(manager_Email, password).then(\n        (response) => {\n          navigate(\"/profile/\" + response.id);\n          // console.log(response);\n\n\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"\">\n      <img src={image} id=\"imgt2\" />\n      <br />\n      <br />\n      <br />\n      <div className=\"card card-container custom\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <br />\n          <label className=\"abc\" htmlFor=\"manager_Email\">Manager_Email</label>\n          <Input\n            type=\"text\"\n            className=\"form-control fkk\"\n            name=\"manager_Email\"\n            placeholder=\"Email\"\n            value={manager_Email}\n            onChange={onChangeManager_Email}\n            validations={[required]}\n          />\n\n          <br />\n          <label className=\"abc\" htmlFor=\"password\">Password</label>\n          <Input\n            type=\"password\"\n            className=\" fkk form-control\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={onChangePassword}\n            validations={[required]}\n          />\n          <br />\n          <br />\n          <div className=\"form-group\">\n            <button className=\"butt\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/Payment.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/AddWorkout.js",["167"],"import React, { useState } from \"react\";\nimport WorkoutService from \"../services/ManagerService\";\nimport { useParams } from \"react-router-dom\";\n\nconst AddWorkout = () => {\n    \n  const initialWorkoutState = {\n    Workout_ID:null,\n    Workout_Name:\"\",\n    Workout_DietChart:\"\",\n    Working_Duration:\"\"\n  };\n  const [workout, setWorkout] = useState(initialWorkoutState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setWorkout({ ...workout, [name]: value });\n  };\n\n  const saveWorkout = () => {\n    var data = {\n      Workout_Name:workout.Workout_Name,\n      Workout_DietChart:workout.Workout_DietChart,\n      Working_Duration:workout.Working_Duration\n    };\n\n    WorkoutService.AddWorkout(data)\n      .then(response => {\n        setWorkout({\n            Workout_ID:response.data.Workout_ID,\n            Workout_Name:response.data.Workout_Name,\n            Workout_DietChart:response.data.Workout_DietChart,\n            Working_Duration:response.data.Working_Duration\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newWorkout = () => {\n    setWorkout(initialWorkoutState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newWorkout}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Workout_Name\">Workout_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={workout.Workout_Name}\n              onChange={handleInputChange}\n              name=\"Workout_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Workout_DietChart\"\n              required\n              value={workout.Workout_DietChart}\n              onChange={handleInputChange}\n              name=\"Workout_DietChart\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Working_Duration\">Working_Duration</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Working_Duration\"\n              required\n              value={workout.Working_Duration}\n              onChange={handleInputChange}\n              name=\"Working_Duration\"\n            />\n          </div>\n          {\n        //       <div className=\"form-group\">\n        //     <label htmlFor=\"Workout_Amt\">Workout_Amt</label>\n        //     <input\n        //       type=\"number\"\n        //       className=\"form-control\"\n        //       id=\"Workout_Amt\"\n        //       required\n        //       value={workout.Workout_Amt}\n        //       onChange={handleInputChange}\n        //       name=\"Workout_Amt\"\n        //     />\n        //   </div> \n         }\n          {\n        //       <div className=\"form-group\">\n        //     <label htmlFor=\"Member_ID\">Member_ID</label>\n        //     <input\n        //       type=\"number\"\n        //       className=\"form-control\"\n        //       id=\"Member_ID\"\n        //       required\n        //       value={workout.Member_ID}\n        //       onChange={handleInputChange}\n        //       name=\"Member_ID\"\n        //     />\n        //   </div>\n        //   <div className=\"form-group\">\n        //     <label htmlFor=\"Workout_Name\">Workout_Name</label>\n        //     <input\n        //       type=\"text\"\n        //       className=\"form-control\"\n        //       id=\"Workout_Name\"\n        //       required\n        //       value={workout.Workout_Name}\n        //       onChange={handleInputChange}\n        //       name=\"Workout_Name\"\n        //     />\n        //   </div>\n        }      \n          <button onClick={saveWorkout} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddWorkout;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddBranch.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowTrainer.js",["168","169","170","171","172","173","174","175"],"import React, { useState, useEffect } from \"react\";\nimport TrainerService from \"../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\nimport image from \"../Images/pexels-victor-freitas-841130.jpg\"\nconst TrainerList = () => {\n  const { id } = useParams();\n  const [trainer, setTrainer] = useState([]);\n  const [currentTrainer, setCurrentTrainer] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveTrainers();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveTrainers = () => {\n    TrainerService.showTrainer(id)\n      .then(response => {\n        setTrainer(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveTrainers();\n    setCurrentTrainer(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveTrainer = (trainer, index) => {\n    setCurrentTrainer(trainer);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllTrainers = () => {\n  //     TrainerDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     TrainerDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setTrainer(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(trainer)\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Mem_Name\"\n          //value={searchMem_Name}\n          //onChange={onChangeSearchMem_Name}\n          />\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <h4 className=\"lab\">Trainers List</h4>\n        <br />\n        {/* khushil working */}\n\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1rem' }}>\n          <thead>\n            <tr>\n\n              <th>Trainer ID</th>\n              <th>Trainer Name</th>\n              <th>Gender</th>\n              <th>Blood Type</th>\n              <th>Mobile Number</th>\n              <th>Address</th>\n              <th>Emergency Mobile Number</th>\n              <th>Emergency Name</th>\n              <th>Branch ID</th>\n              <th>Workout ID</th>\n            </tr>\n          </thead>\n\n          {trainer.map((trainer, index) => (\n            <tr>\n              <td>{trainer.Trainer_ID}</td>\n              <td>{trainer.Trainer_Name}</td>\n              <td>{trainer.Gender}</td>\n              <td>{trainer.Blood_Type}</td>\n              <td>{trainer.Phone}</td>\n              <td>{trainer.Address}</td>\n              <td>{trainer.Emer_Mobile}</td>\n              <td>{trainer.Emer_Name}</td>\n              <td>{trainer.Branch_ID}</td>\n              <td>{trainer.Workout_ID}</td>\n\n              <td>\n                <Link\n                  to={\"/trainer/edit/\" + trainer.Trainer_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {trainer &&\n            trainer.map((trainer, index) => (\n              <li\n                className={\n                  \"list-group-item \" \n                }\n                \n                \n                key={index}\n              >\n                {trainer.Trainer_ID    }                  {trainer.Trainer_Desc}   \n              </li>\n              \n              \n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllTrainers}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentTrainer ? (\n        //       <div>\n        //         <h4>Trainers</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentTrainer.Trainer_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/edittrainer/\" + currentTrainer.Trainer_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Trainer...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div>\n  );\n};\n\nexport default TrainerList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/services/auth.service.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/components/EditWorkout.js",["176","177"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport WorkoutService from \"../services/ManagerService\";\n\nconst Workout = props => {\n    \n    console.log(useParams());\n  const { id } = useParams();\n//  WorkoutService.get(Workout_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Workout_ID);\n  const initialWorkoutState = {\n    Workout_ID:null,\n    Workout_Name:\"\",\n    Workout_DietChart:\"\",\n    Working_Duration:\"\"\n  };\n  const [currentWorkout, setCurrentWorkout] = useState(initialWorkoutState);\n  const [message, setMessage] = useState(\"\");\n\n  const getWorkout = id => {\n    WorkoutService.getWorkout(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentWorkout(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getWorkout(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentWorkout({ ...currentWorkout, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n        Workout_Name:currentWorkout.Workout_Name,\n        Workout_DietChart:currentWorkout.Workout_DietChart,\n        Working_Duration:currentWorkout.Working_Duration\n\n    };\n\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, data)\n      .then(response => {\n        setCurrentWorkout({ ...currentWorkout, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateWorkout = () => {\n    WorkoutService.updateWorkout(currentWorkout.Workout_ID, currentWorkout)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Workout was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteWorkout = () => {\n//     WorkoutService.remove(currentWorkout.Workout_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/workout\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\nconsole.log(currentWorkout);\n  return (\n    <div>\n      {currentWorkout ? (\n        <div className=\"edit-form\">\n          <h4>Workout</h4>\n          <form>\n\n\n          <div className=\"form-group\">\n          <label htmlFor=\"Workout_Name\">Workout_Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n            value={currentWorkout.Workout_Name}\n            onChange={handleInputChange}\n            name=\"Workout_Name\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n        <label htmlFor=\"Workout_DietChart\">Workout_DietChart</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"Workout_DietChart\"\n          required\n          value={currentWorkout.Workout_DietChart}\n          onChange={handleInputChange}\n          name=\"Workout_DietChart\"\n        />\n      </div>\n      <div className=\"form-group\">\n      <label htmlFor=\"Working_Duration\">Working_Duration</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        id=\"Working_Duration\"\n        required\n        value={currentWorkout.Working_Duration}\n        onChange={handleInputChange}\n        name=\"Working_Duration\"\n      />\n    </div>\n           \n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteWorkout}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateWorkout}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Workout...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Workout;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowWorkout.js",["178","179","180","181"],"import React, { useState, useEffect } from \"react\";\nimport WorkoutService from \"../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\n\nconst WorkoutList = () => {\n\n  const [workout, setWorkout] = useState([]);\n  const [currentWorkout, setCurrentWorkout] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveWorkouts();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrieveWorkouts = () => {\n    WorkoutService.getAllWorkout()\n      .then(response => {\n        setWorkout(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveWorkouts();\n    setCurrentWorkout(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveWorkout = (workout, index) => {\n    setCurrentWorkout(workout);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllWorkouts = () => {\n  //     WorkoutDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     WorkoutDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setWorkout(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Mem_Name\"\n            value={searchMem_Name}\n            onChange={onChangeSearchMem_Name}\n          />\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Workouts List</h4>\n\n        {/* khushil working */}\n\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n\n              <th>Workout ID</th>\n              <th>Workout Name</th>\n              <th>Diet Chart</th>\n              <th>Duration</th>\n\n            </tr>\n          </thead>\n\n          {workout.map((workout, index) => (\n            <tr>\n              <td>{workout.Workout_ID}</td>\n              <td>{workout.Workout_Name}</td>\n              <td>{workout.Diet_Chart}</td>\n              <td>{workout.Duration}</td>\n\n              <td>\n                <Link\n                  to={\"/workout/edit/\" + workout.Workout_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {workout &&\n            workout.map((workout, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => {\n                  setActiveWorkout(workout, index)\n                  console.log(workout.Workout_Name)\n                }\n                }\n                key={index}\n              >\n                {workout.Workout_Name}\n              </li>\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllWorkouts}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      <div className=\"col-md-6\">\n        {currentWorkout ? (\n          <div>\n            <h4>Workouts</h4>\n            <div>\n              <label>\n                <strong>Mem_Name:</strong>\n              </label>{\" \"}\n\n              {currentWorkout.Workout_ID}\n            </div>\n            <Link\n              to={\"/editworkout/\" + currentWorkout.Workout_ID}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Workout...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WorkoutList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowPayment.js",["182","183","184","185","186","187","188","189"],"import React, { useState, useEffect } from \"react\";\nimport PaymentService from \"../services/ManagerService\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport image from \"../Images/pexels-victor-freitas-841130.jpg\"\n\nconst PaymentList = () => {\n  const { id } = useParams();\n  const [payment, setPayment] = useState([]);\n  const [currentPayment, setCurrentPayment] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchMem_Name, setSearchMem_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrievePayments();\n  }, []);\n\n  const onChangeSearchMem_Name = e => {\n    const searchMem_Name = e.target.value;\n    setSearchMem_Name(searchMem_Name);\n  };\n\n  const retrievePayments = () => {\n    PaymentService.showPayment(id)\n      .then(response => {\n        setPayment(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrievePayments();\n    setCurrentPayment(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActivePayment = (payment, index) => {\n    setCurrentPayment(payment);\n    setCurrentIndex(index);\n  };\n\n  //   const removeAllPayments = () => {\n  //     PaymentDataService.removeAll()\n  //       .then(response => {\n  //         console.log(response.data);\n  //         refreshList();\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n\n  //   const findByMem_Name = () => {\n  //     PaymentDataService.findByMem_Name(searchMem_Name)\n  //       .then(response => {\n  //         setPayment(response.data);\n  //         console.log(response.data);\n  //       })\n  //       .catch(e => {\n  //         console.log(e);\n  //       });\n  //   };\n  console.log(payment)\n  return (\n    <div className=\"list row\" align=\"center\">\n      <img src={image} id=\"imgt2\" />\n      <div className=\"\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Mem_Name\"\n          //value={searchMem_Name}\n          //onChange={onChangeSearchMem_Name}\n          />\n          {\n            //       <div className=\"input-group-append\">\n            //     <button\n            //       className=\"btn btn-outline-secondary\"\n            //       type=\"button\"\n            //       onClick={findByMem_Name}\n            //     >\n            //       Search\n            //     </button>\n            //   </div>\n          }\n        </div>\n      </div>\n      <div className=\"\" align=\"center\" margin-left=\"auto\" margin-right=\"auto\" width=\"50%\" vertical-align=\"center\">\n        <h4 className=\"lab\">Payments List</h4>\n        <br />\n        {/* khushil working */}\n\n        <Table striped hover variant=\"dark\" align=\"center\" dataAlign=\"center\" style={{ textAlign: \"center\", borderRadius: '20px', marginInlineStart: '1rem' }}>\n          <thead>\n            <tr textAlign=\"center\" vertical-align=\"middle\">\n\n              <th>Payment ID</th>\n              <th>Payment Description</th>\n              <th>Payment Amount</th>\n              <th>Payment Date</th>\n              <th>Payment Time</th>\n              <th>Member ID</th>\n              <th>Workout ID</th>\n              <th>Update/Delete</th>\n            </tr>\n          </thead>\n\n          {payment.map((payment, index) => (\n            <tr>\n              <td>{payment.Payment_ID}</td>\n              <td>{payment.Payment_Desc}</td>\n              <td>{payment.Payment_Amt}</td>\n              <td>{payment.Payment_Date}</td>\n              <td>{payment.Payment_Time}</td>\n              <td>{payment.Member_ID}</td>\n              <td>{payment.Workout_ID}</td>\n\n              <td>\n                <Link\n                  to={\"/payment/edit/\" + payment.Payment_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n\n        {/* <ul className=\"list-group\">\n          {payment &&\n            payment.map((payment, index) => (\n              <li\n                className={\n                  \"list-group-item \"\n                }\n\n\n                key={index}\n              >\n                {payment.Payment_ID}                  {payment.Payment_Desc}\n              </li>\n\n\n            ))}\n        </ul> */}\n\n        {\n          //     <button\n          //   className=\"m-3 btn btn-sm btn-danger\"\n          //   onClick={removeAllPayments}\n          // >\n          //   Remove All\n          // </button>\n        }\n      </div>\n      {\n        //       <div className=\"col-md-6\">\n        //     {currentPayment ? (\n        //       <div>\n        //         <h4>Payments</h4>\n        //         <div>\n        //           <label>\n        //             <strong>Mem_Name:</strong>\n        //           </label>{\" \"}\n\n        //           {currentPayment.Payment_ID}\n        //         </div>\n        //         <Link\n        //           to={\"/editpayment/\" + currentPayment.Payment_ID}\n        //           className=\"badge badge-warning\"\n        //         >\n        //           Edit\n        //         </Link>\n        //       </div>\n        //     ) : (\n        //       <div>\n        //         <br />\n        //         <p>Please click on a Payment...</p>\n        //       </div>\n        //     )}\n        //   </div>\n      }\n    </div>\n  );\n};\n\nexport default PaymentList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/AddMember.js",["190","191"],"/Users/khushil/Project/DBMS_Project/gamma/src/components/ShowBranches.js",["192","193","194","195"],"import React, { useState, useEffect } from \"react\";\nimport BranchServices from \"../services/ManagerService\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from 'react-bootstrap';\n\nconst Branch_ManagerList = () => {\n  const [branch_manager, setBranch_Manager] = useState([]);\n  const [currentBranch_Manager, setCurrentBranch_Manager] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchBranch_Name, setSearchBranch_Name] = useState(\"\");\n\n  useEffect(() => {\n    retrieveBranch_Managers();\n  }, []);\n\n  const onChangeSearchBranch_Name = e => {\n    const searchBranch_Name = e.target.value;\n    setSearchBranch_Name(searchBranch_Name);\n  };\n\n  const retrieveBranch_Managers = () => {\n    BranchServices.getAllBranches()\n      .then(response => {\n        setBranch_Manager(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveBranch_Managers();\n    setCurrentBranch_Manager(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveBranch_Manager = (branch_manager, index) => {\n    setCurrentBranch_Manager(branch_manager);\n    setCurrentIndex(index);\n  };\n\n  const removeAllBranch_Managers = () => {\n    BranchServices.removeAll()\n      .then(response => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByBranch_Name = () => {\n    BranchServices.findByBranch_Name(searchBranch_Name)\n      .then(response => {\n        setBranch_Manager(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by Branch_Name\"\n            value={searchBranch_Name}\n            onChange={onChangeSearchBranch_Name}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByBranch_Name}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Branch_Managers List</h4>\n\n        {/* //khushil working */}\n\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n\n              <th>Branch ID</th>\n              <th>Branch Name</th>\n              <th>Branch Location</th>\n              <th>Branch Email</th>\n              <th>Branch Phone Number</th>\n              <th>Manager-ID</th>\n              <th>Manager Name</th>\n              <th>Manager Mobile Number</th>\n              <th>Manager Email</th>\n              <th>Manager Address</th>\n\n            </tr>\n          </thead>\n\n          {branch_manager.map((branch_manager, index) => (\n            <tr>\n              <td>{branch_manager.Branch_ID}</td>\n              <td>{branch_manager.Branch_Name}</td>\n              <td>{branch_manager.Branch_Location}</td>\n              <td>{branch_manager.Branch_Email}</td>\n              <td>{branch_manager.Branch_Phone_Number}</td>\n              <td>{branch_manager.Manager_ID}</td>\n              <td>{branch_manager.Manager_Name}</td>\n              <td>{branch_manager.Manager_Mobile_Number}</td>\n              <td>{branch_manager.Manager_Email}</td>\n              <td>{branch_manager.Manager_Address}</td>\n\n              <td>\n                <Link\n                  to={\"/branch_manager/\" + branch_manager.Branch_ID}\n                  className=\"badge badge_warning\">Edit</Link>\n              </td>\n              <td>{/*<button className=\"m-3 btn-sm btn-danger\" onClick={() => { deleteBranch(branch_manager.Branch_ID) }}>Delete</button>*/}</td>\n            </tr>\n          ))}\n        </Table>\n        {/* <ul className=\"list-group\">\n          {branch_manager &&\n            branch_manager.map((branch_manager, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => {setActiveBranch_Manager(branch_manager, index)\n                console.log(branch_manager)}\n                }\n                key={index}\n              >\n                {branch_manager.Branch_Name}\n              </li>\n            ))}\n        </ul> */}\n\n        {/* <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllBranch_Managers}\n        >\n          Remove All\n        </button>\n      </div> */}\n        {/* <div className=\"col-md-6\"> */}\n        {/* {currentBranch_Manager ? (\n          <div>\n            <h4>Branch_Managers</h4>\n            <div>\n              <label>\n                <strong>Branch_Name:</strong>\n              </label>{\" \"}\n              {currentBranch_Manager.Branch_Name}\n              {currentBranch_Manager.Branch_ID}\n            </div>\n            <Link\n              to={\"/editbranch/\" + currentBranch_Manager.Branch_ID}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Branch_Manager...</p>\n          </div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Branch_ManagerList;\n","/Users/khushil/Project/DBMS_Project/gamma/src/components/EditBranch.js",["196","197"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport BranchServices from \"../services/ManagerService\";\n\nconst Branch = props => {\n    \n    console.log(useParams());\n  const { id } = useParams();\n//  BranchServices.get(Branch_ID).then(response=>console.log(response));\n//   const {id}=useParams();\n  \n//   const { id } = useParams();\n  // console.log(useParams());\n//    console.log(id);\n  console.log(id);\n  let navigate = useNavigate();\n  // console.log(Branch_ID);\n  const initialBranchState = {\n    Branch_ID:null,\n    Branch_Name: \"\",\n    Branch_Location: \"\",\n    Branch_Email: \"\",\n    Branch_Phone_Number: 0,\n    Manager_Name: \"\",\n    Gender: \"\",\n    Mobile_Number: 0,\n    Address: \"\",\n    Manager_Email: \"\",\n    Password: \"\"\n  };\n  const [currentBranch, setCurrentBranch] = useState(initialBranchState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBranch = id => {\n    BranchServices.getBranch(id)\n      .then(response => {\n        console.log(response.data);\n        setCurrentBranch(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    if (id)\n      getBranch(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentBranch({ ...currentBranch, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n        Branch_Name:currentBranch.Branch_Name,\n        Branch_DietChart:currentBranch.Branch_DietChart,\n        Working_Duration:currentBranch.Working_Duration\n\n    };\n\n    BranchServices.updateBranch(currentBranch.Branch_ID, data)\n      .then(response => {\n        setCurrentBranch({ ...currentBranch, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateBranch = () => {\n    BranchServices.updateBranch(currentBranch.Branch_ID, currentBranch)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The Branch was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n//   const deleteBranch = () => {\n//     BranchServices.remove(currentBranch.Branch_ID)\n//       .then(response => {\n//         console.log(response.data);\n//         navigate(\"/branch\");\n//       })\n//       .catch(e => {\n//         console.log(e);\n//       });\n//   };\nconsole.log(currentBranch);\n  return (\n    <div>\n      {currentBranch ? (\n        <div className=\"edit-form\">\n          <h4>Branch</h4>\n          <form>\n\n\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Name\">Branch_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={currentBranch.Branch_Name}\n              onChange={handleInputChange}\n              name=\"Branch_Name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Location\">Branch_Location</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Branch_Location\"\n              required\n              value={currentBranch.Branch_Location}\n              onChange={handleInputChange}\n              name=\"Branch_Location\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Email\">Branch_Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Branch_Email\"\n              required\n              value={currentBranch.Branch_Email}\n              onChange={handleInputChange}\n              name=\"Branch_Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Branch_Phone_Number\">Branch_Phone_Number</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Branch_Phone_Number\"\n              required\n              value={currentBranch.Branch_Phone_Number}\n              onChange={handleInputChange}\n              name=\"Branch_Phone_Number\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Manager_Name\">Manager_Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Manager_Name\"\n              required\n              value={currentBranch.Manager_Name}\n              onChange={handleInputChange}\n              name=\"Manager_Name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Gender\">Gender</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Gender\"\n              required\n              value={currentBranch.Gender}\n              onChange={handleInputChange}\n              name=\"Gender\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Mobile_Number\"\n              required\n              value={currentBranch.Mobile_Number}\n              onChange={handleInputChange}\n              name=\"Mobile_Number\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Address\">Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Address\"\n              required\n              value={currentBranch.Address}\n              onChange={handleInputChange}\n              name=\"Address\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Manager_Email\">Manager_Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"Manager_Email\"\n              required\n              value={currentBranch.Manager_Email}\n              onChange={handleInputChange}\n              name=\"Manager_Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Password\">Password</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"Password\"\n              required\n              value={currentBranch.Password}\n              onChange={handleInputChange}\n              name=\"Password\"\n            />\n          </div>\n           \n\n\n          </form>\n\n\n\n         { \n        //      <button className=\"badge badge-danger mr-2\" onClick={deleteBranch}>\n        //     Delete\n        //   </button>\n        }\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateBranch}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Branch...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Branch;\n","/Users/khushil/Project/DBMS_Project/gamma/src/common/EventBus.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/services/ManagerService.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/services/user.service.js",[],"/Users/khushil/Project/DBMS_Project/gamma/src/services/auth-header.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":32,"column":9,"nodeType":"204","messageId":"205","endLine":32,"endColumn":22},{"ruleId":"202","severity":1,"message":"207","line":41,"column":9,"nodeType":"204","messageId":"205","endLine":41,"endColumn":24},{"ruleId":"202","severity":1,"message":"208","line":10,"column":10,"nodeType":"204","messageId":"205","endLine":10,"endColumn":23},{"ruleId":"202","severity":1,"message":"209","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":22},{"ruleId":"202","severity":1,"message":"210","line":12,"column":10,"nodeType":"204","messageId":"205","endLine":12,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":16,"column":6,"nodeType":"213","endLine":16,"endColumn":8,"suggestions":"214"},{"ruleId":"202","severity":1,"message":"215","line":18,"column":9,"nodeType":"204","messageId":"205","endLine":18,"endColumn":31},{"ruleId":"202","severity":1,"message":"216","line":40,"column":9,"nodeType":"204","messageId":"205","endLine":40,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":77,"column":7,"nodeType":"219","endLine":77,"endColumn":37},{"ruleId":"202","severity":1,"message":"220","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":19},{"ruleId":"202","severity":1,"message":"221","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"222","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"220","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"223","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":17},{"ruleId":"202","severity":1,"message":"224","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":18},{"ruleId":"202","severity":1,"message":"225","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":18},{"ruleId":"202","severity":1,"message":"226","line":9,"column":10,"nodeType":"204","messageId":"205","endLine":9,"endColumn":26},{"ruleId":"202","severity":1,"message":"209","line":10,"column":10,"nodeType":"204","messageId":"205","endLine":10,"endColumn":22},{"ruleId":"202","severity":1,"message":"210","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":24},{"ruleId":"211","severity":1,"message":"227","line":15,"column":6,"nodeType":"213","endLine":15,"endColumn":8,"suggestions":"228"},{"ruleId":"202","severity":1,"message":"215","line":17,"column":9,"nodeType":"204","messageId":"205","endLine":17,"endColumn":31},{"ruleId":"202","severity":1,"message":"229","line":33,"column":9,"nodeType":"204","messageId":"205","endLine":33,"endColumn":20},{"ruleId":"202","severity":1,"message":"230","line":39,"column":9,"nodeType":"204","messageId":"205","endLine":39,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":68,"column":7,"nodeType":"219","endLine":68,"endColumn":37},{"ruleId":"202","severity":1,"message":"231","line":16,"column":7,"nodeType":"204","messageId":"205","endLine":16,"endColumn":15},{"ruleId":"202","severity":1,"message":"232","line":55,"column":9,"nodeType":"204","messageId":"205","endLine":55,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":75,"column":7,"nodeType":"219","endLine":75,"endColumn":37},{"ruleId":"202","severity":1,"message":"220","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":19},{"ruleId":"202","severity":1,"message":"233","line":9,"column":10,"nodeType":"204","messageId":"205","endLine":9,"endColumn":24},{"ruleId":"202","severity":1,"message":"209","line":10,"column":10,"nodeType":"204","messageId":"205","endLine":10,"endColumn":22},{"ruleId":"202","severity":1,"message":"210","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":24},{"ruleId":"211","severity":1,"message":"234","line":15,"column":6,"nodeType":"213","endLine":15,"endColumn":8,"suggestions":"235"},{"ruleId":"202","severity":1,"message":"215","line":17,"column":9,"nodeType":"204","messageId":"205","endLine":17,"endColumn":31},{"ruleId":"202","severity":1,"message":"229","line":33,"column":9,"nodeType":"204","messageId":"205","endLine":33,"endColumn":20},{"ruleId":"202","severity":1,"message":"236","line":39,"column":9,"nodeType":"204","messageId":"205","endLine":39,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":68,"column":7,"nodeType":"219","endLine":68,"endColumn":37},{"ruleId":"202","severity":1,"message":"231","line":16,"column":7,"nodeType":"204","messageId":"205","endLine":16,"endColumn":15},{"ruleId":"202","severity":1,"message":"232","line":48,"column":9,"nodeType":"204","messageId":"205","endLine":48,"endColumn":24},{"ruleId":"202","severity":1,"message":"220","line":3,"column":16,"nodeType":"204","messageId":"205","endLine":3,"endColumn":25},{"ruleId":"202","severity":1,"message":"209","line":10,"column":10,"nodeType":"204","messageId":"205","endLine":10,"endColumn":22},{"ruleId":"202","severity":1,"message":"229","line":33,"column":9,"nodeType":"204","messageId":"205","endLine":33,"endColumn":20},{"ruleId":"202","severity":1,"message":"237","line":39,"column":9,"nodeType":"204","messageId":"205","endLine":39,"endColumn":25},{"ruleId":"202","severity":1,"message":"238","line":10,"column":10,"nodeType":"204","messageId":"205","endLine":10,"endColumn":24},{"ruleId":"202","severity":1,"message":"209","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":22},{"ruleId":"202","severity":1,"message":"210","line":12,"column":10,"nodeType":"204","messageId":"205","endLine":12,"endColumn":24},{"ruleId":"211","severity":1,"message":"239","line":16,"column":6,"nodeType":"213","endLine":16,"endColumn":8,"suggestions":"240"},{"ruleId":"202","severity":1,"message":"215","line":18,"column":9,"nodeType":"204","messageId":"205","endLine":18,"endColumn":31},{"ruleId":"202","severity":1,"message":"229","line":34,"column":9,"nodeType":"204","messageId":"205","endLine":34,"endColumn":20},{"ruleId":"202","severity":1,"message":"241","line":40,"column":9,"nodeType":"204","messageId":"205","endLine":40,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":69,"column":7,"nodeType":"219","endLine":69,"endColumn":37},{"ruleId":"202","severity":1,"message":"242","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":76,"column":7,"nodeType":"219","endLine":76,"endColumn":36},{"ruleId":"202","severity":1,"message":"243","line":8,"column":10,"nodeType":"204","messageId":"205","endLine":8,"endColumn":31},{"ruleId":"202","severity":1,"message":"209","line":9,"column":10,"nodeType":"204","messageId":"205","endLine":9,"endColumn":22},{"ruleId":"202","severity":1,"message":"244","line":38,"column":9,"nodeType":"204","messageId":"205","endLine":38,"endColumn":32},{"ruleId":"202","severity":1,"message":"245","line":43,"column":9,"nodeType":"204","messageId":"205","endLine":43,"endColumn":33},{"ruleId":"202","severity":1,"message":"231","line":16,"column":7,"nodeType":"204","messageId":"205","endLine":16,"endColumn":15},{"ruleId":"202","severity":1,"message":"232","line":55,"column":9,"nodeType":"204","messageId":"205","endLine":55,"endColumn":24},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'particlesInit' is assigned a value but never used.","'particlesLoaded' is assigned a value but never used.","'currentMember' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'searchMem_Name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveMembers'. Either include it or remove the dependency array.","ArrayExpression",["248"],"'onChangeSearchMem_Name' is assigned a value but never used.","'setActiveMember' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserService' is defined but never used.","'loadFull' is defined but never used.","'Typewriter' is defined but never used.","'currentEquipment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveEquipments'. Either include it or remove the dependency array.",["249"],"'refreshList' is assigned a value but never used.","'setActiveEquipment' is assigned a value but never used.","'navigate' is assigned a value but never used.","'updatePublished' is assigned a value but never used.","'currentTrainer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveTrainers'. Either include it or remove the dependency array.",["250"],"'setActiveTrainer' is assigned a value but never used.","'setActiveWorkout' is assigned a value but never used.","'currentPayment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrievePayments'. Either include it or remove the dependency array.",["251"],"'setActivePayment' is assigned a value but never used.","'sample' is defined but never used.","'currentBranch_Manager' is assigned a value but never used.","'setActiveBranch_Manager' is assigned a value but never used.","'removeAllBranch_Managers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [retrieveMembers]",{"range":"260","text":"261"},"Update the dependencies array to be: [retrieveEquipments]",{"range":"262","text":"263"},"Update the dependencies array to be: [retrieveTrainers]",{"range":"264","text":"265"},"Update the dependencies array to be: [retrievePayments]",{"range":"266","text":"267"},[614,616],"[retrieveMembers]",[612,614],"[retrieveEquipments]",[599,601],"[retrieveTrainers]",[599,601],"[retrievePayments]"]