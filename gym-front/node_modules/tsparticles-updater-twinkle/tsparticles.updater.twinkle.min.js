/*! tsParticles Twinkle Updater v2.0.5 by Matteo Bruni */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],t);else{var o="object"==typeof exports?t(require("tsparticles-engine")):t(e.window);for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(this,(e=>(()=>{"use strict";var t={818:t=>{t.exports=e}},o={};function n(e){var r=o[e];if(void 0!==r)return r.exports;var i=o[e]={exports:{}};return t[e](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{n.r(r),n.d(r,{loadTwinkleUpdater:()=>i});var e=n(818);class t{getColorStyles(t,o,n,r){const i=t.options.twinkle.particles,a=i.enable&&Math.random()<i.frequency,l=t.options.zIndex,c=Math.pow(1-t.zIndexFactor,l.opacityRate),s=a?(0,e.getRangeValue)(i.opacity)*c:r,p=(0,e.colorToHsl)(i.color),d=p?(0,e.getStyleFromHsl)(p,s):void 0,u={},f=a&&d;return u.fill=f?d:void 0,u.stroke=f?d:void 0,u}init(){}isEnabled(e){return e.options.twinkle.particles.enable}update(){}}var o=function(e,t,o,n){return new(o||(o=Promise))((function(r,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function l(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,l)}c((n=n.apply(e,t||[])).next())}))};function i(e){return o(this,void 0,void 0,(function*(){yield e.addParticleUpdater("twinkle",(()=>new t))}))}})(),r})()));