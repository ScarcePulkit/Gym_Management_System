[{"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\index.js":"1","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\App.js":"2","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\serviceWorker.js":"3","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\services\\MemberService.js":"4","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\http-common.js":"5","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\components\\Branch_Manager\\AddBranch_Manager.js":"6","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\components\\Member\\MemberList.js":"7","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\components\\Member\\AddMember.js":"8","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\components\\Member\\Member.js":"9","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\services\\Branch_ManagerService.js":"10"},{"size":334,"mtime":1649617265151,"results":"11","hashOfConfig":"12"},{"size":1594,"mtime":1649674995476,"results":"13","hashOfConfig":"12"},{"size":5227,"mtime":1649617265151,"results":"14","hashOfConfig":"12"},{"size":717,"mtime":1649622299442,"results":"15","hashOfConfig":"12"},{"size":166,"mtime":1649617265135,"results":"16","hashOfConfig":"12"},{"size":6947,"mtime":1649675329984,"results":"17","hashOfConfig":"12"},{"size":3719,"mtime":1649672971582,"results":"18","hashOfConfig":"12"},{"size":6277,"mtime":1649672943236,"results":"19","hashOfConfig":"12"},{"size":7508,"mtime":1649672824676,"results":"20","hashOfConfig":"12"},{"size":844,"mtime":1649675401315,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13aet60",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\index.js",[],["45","46"],"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\App.js",["47"],"import React from \"react\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AddMember from \"./components/Member/AddMember\";\r\nimport Member from \"./components//Member/Member\";\r\nimport MemberList from \"./components/Member/MemberList\";\r\nimport AddBranch_Manager from \"./components/Branch_Manager/AddBranch_Manager\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <a href=\"/member\" className=\"navbar-brand\">\r\n          bezKoder\r\n        </a>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/member\"} className=\"nav-link\">\r\n              Members\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/addmember\"} className=\"nav-link\">\r\n              Add\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/addbranch\"} className=\"nav-link\">\r\n              Add Branch_Manager\r\n            </Link>\r\n          </li>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"container mt-3\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<MemberList/>} />\r\n          <Route path=\"/member\" element={<MemberList/>} />\r\n          <Route path=\"/addmember\" element={<AddMember/>} />\r\n          <Route path=\"/member/:Mem_ID\" element={<Member/>} />\r\n          <Route path=\"/addbranch\" element={<AddBranch_Manager/>} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\serviceWorker.js",[],"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\services\\MemberService.js",[],"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\http-common.js",[],"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\components\\Branch_Manager\\AddBranch_Manager.js",[],"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\components\\Member\\MemberList.js",[],"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\components\\Member\\AddMember.js",[],"D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\components\\Member\\Member.js",["48","49"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport MemberDataService from \"D:/dbms_proj/DBMS_Project/gym-front/src/services/MemberService\";\r\n\r\nconst Member = props => {\r\n  const { Mem_ID } = useParams();\r\n  const {id} = useParams();\r\n// console.log(useParams());\r\n// console.log(id);\r\nconsole.log(Mem_ID);\r\n  let navigate = useNavigate();\r\n  // console.log(Mem_ID);\r\n  const initialMemberState = {\r\n    Mem_ID: null,\r\n    Mem_Name: \"\",\r\n    Mem_Weight: 0,\r\n    Mem_Height: 0,\r\n    Age: 0,\r\n    Gender: \"\",\r\n    Blood_Type: \"\",\r\n    Mobile_Number: 0,\r\n    Address: \"\",\r\n    Emer_Name: \"\",\r\n    Emer_Mobile: 0\r\n  };\r\n  const [currentMember, setCurrentMember] = useState(initialMemberState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getMember = Mem_ID => {\r\n    MemberDataService.get(Mem_ID)\r\n      .then(response => {\r\n        setCurrentMember(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Mem_ID)\r\n      getMember(Mem_ID);\r\n  }, [Mem_ID]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentMember({ ...currentMember, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      Mem_ID: currentMember.Mem_ID,\r\n      Mem_Name: currentMember.Mem_Name,\r\n      Mem_Weight: currentMember.Mem_Weight,\r\n      Mem_Height: currentMember.Mem_Height,\r\n      Age: currentMember.Age,\r\n      Gender: currentMember.Gender,\r\n      Blood_Type: currentMember.Blood_Type,\r\n      Mobile_Number: currentMember.Mobile_Number,\r\n      Address: currentMember.Address,\r\n      Emer_Name: currentMember.Emer_Name,\r\n      Emer_Mobile: currentMember.Emer_Mobile\r\n\r\n    };\r\n\r\n    MemberDataService.update(currentMember.Mem_ID, data)\r\n      .then(response => {\r\n        setCurrentMember({ ...currentMember, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateMember = () => {\r\n    MemberDataService.update(currentMember.Mem_ID, currentMember)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Member was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteMember = () => {\r\n    MemberDataService.remove(currentMember.Mem_ID)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        navigate(\"/member\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentMember ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Member</h4>\r\n          <form>\r\n\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Mem_Name\">Mem_Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={currentMember.Mem_Name}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Mem_Weight\">Mem_Weight</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Mem_Weight\"\r\n                required\r\n                value={currentMember.Mem_Weight}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Weight\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Mem_Height\">Mem_Height</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Mem_Height\"\r\n                required\r\n                value={currentMember.Mem_Height}\r\n                onChange={handleInputChange}\r\n                name=\"Mem_Height\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Age\">Age</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Age\"\r\n                required\r\n                value={currentMember.Age}\r\n                onChange={handleInputChange}\r\n                name=\"Age\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Gender\">Gender</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Gender\"\r\n                required\r\n                value={currentMember.Gender}\r\n                onChange={handleInputChange}\r\n                name=\"Gender\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Blood_Type\">Blood_Type</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Blood_Type\"\r\n                required\r\n                value={currentMember.Blood_Type}\r\n                onChange={handleInputChange}\r\n                name=\"Blood_Type\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Mobile_Number\">Mobile_Number</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Mobile_Number\"\r\n                required\r\n                value={currentMember.Mobile_Number}\r\n                onChange={handleInputChange}\r\n                name=\"Mobile_Number\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Address\"\r\n                required\r\n                value={currentMember.Address}\r\n                onChange={handleInputChange}\r\n                name=\"Address\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Emer_Name\">Emer_Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Emer_Name\"\r\n                required\r\n                value={currentMember.Emer_Name}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Emer_Mobile\">Emer_Mobile</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"Emer_Mobile\"\r\n                required\r\n                value={currentMember.Emer_Mobile}\r\n                onChange={handleInputChange}\r\n                name=\"Emer_Mobile\"\r\n              />\r\n            </div>\r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n          <button className=\"badge badge-danger mr-2\" onClick={deleteMember}>\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateMember}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Member...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Member;\r\n","D:\\dbms_proj\\DBMS_Project\\gym-front\\src\\services\\Branch_ManagerService.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":43,"column":45,"nodeType":"56","messageId":"57","endLine":43,"endColumn":65},{"ruleId":"58","severity":1,"message":"59","line":7,"column":10,"nodeType":"60","messageId":"61","endLine":7,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":50,"column":9,"nodeType":"60","messageId":"61","endLine":50,"endColumn":24},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react/jsx-pascal-case","Imported JSX component AddBranch_Manager must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'updatePublished' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]